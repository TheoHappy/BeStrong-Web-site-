%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of multiethnic people with weights.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 1600 800
%%HiResBoundingBox: 0 0 1600 800
%%CropBox: 0 0 1600 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of multiethnic people with weights</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>nefelomant</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of multiethnic people with weights. Fitness characters with heavy equipment. Vector illustration can be used for presentation, brochure, workout</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>crowd</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>promo</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>sport</rdf:li>
               <rdf:li>hobby</rdf:li>
               <rdf:li>training</rdf:li>
               <rdf:li>leisure</rdf:li>
               <rdf:li>athlete</rdf:li>
               <rdf:li>exercise</rdf:li>
               <rdf:li>sportswear</rdf:li>
               <rdf:li>muscular</rdf:li>
               <rdf:li>activity</rdf:li>
               <rdf:li>bodybuilding</rdf:li>
               <rdf:li>gym</rdf:li>
               <rdf:li>workout</rdf:li>
               <rdf:li>weight</rdf:li>
               <rdf:li>fit</rdf:li>
               <rdf:li>wellness</rdf:li>
               <rdf:li>heavy</rdf:li>
               <rdf:li>motivation</rdf:li>
               <rdf:li>exercising</rdf:li>
               <rdf:li>cardio</rdf:li>
               <rdf:li>physical</rdf:li>
               <rdf:li>fitness</rdf:li>
               <rdf:li>weightlifting</rdf:li>
               <rdf:li>ball</rdf:li>
               <rdf:li>multiethnic</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T13:42:24+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T13:42:25+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T13:42:25+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU&#xA;q8z+YrXy9o8uqXMbzQxMiskVOR5sFFORA75ZixmcqDDJMRFl4ndef9a8xebNKLv6FrFeosEcXKMm&#xA;N5loJaMQxoM2w08YQPudecxlIe99A5pXZuxV2KuxV2KuxVKfNrunlTWnRirrYXLKymhBELEEEZZh&#xA;+se8MMn0n3PHPJH5s32iRpZamjXenRq5UoOU5kZuQq7sBxG+bTPoxPcbFwMWpMdjye62s63FtDcK&#xA;CFmRZFB6gMK7/fmoIo07EG1TAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;hf5wf8oHe/8AGSD/AJOrmVov7wOPqfoLwjQFd9d05I3MbtdQhJAASpMi0ah2NPfNzk+k+510OYfR&#xA;VxofmU28oTzDMzlGCr9XtlqabDkqBh8wc0WTJAxIEN67y7bHCQkCZbX3BKvK9n5kvbOWb9PTxIr8&#xA;ApSKY1ABJrMHYdcw9BlHAeIcW/eXO7SxVMcJ4dugCc/oTzH/ANTFN/0jWv8AzRmd4uP+YPmXXeHP&#xA;+d9gd+hPMf8A1MU3/SNa/wDNGPi4/wCYPmV8Of8AO+wO/QnmP/qYpv8ApGtf+aMfFx/zB8yvhz/n&#xA;fYEiuLLzOPM0Nl+nJzzUOsvFFAUKSaxKBGfsnqua/JkvUChUe6y7TFjH5Yk7y76CK806Rr0fljV3&#xA;l16aaJLK4Z4Tb2yh1ETEqSqAivTbNpiywMxUOveXUZIS4T6uncHzrm5da+r9H/45Fj/zDxf8QGc5&#xA;P6i7mPIIvIsnYq7FXYq7FXYq7FXYq7FXYq7FVssqRRPLIaJGpZzQmgAqdhiSmMSTQWWl3b3ltFdW&#xA;ziSCZQ8biu4Pz3wA2LDLJjMJGMtiFXCwdiqHur+ztZLeOeQJJdSelAtCSzkE02B8Op2wGQDZDFKQ&#xA;JA+kWURha3Yq7FVO5uYLW2lubiQRW8CNLNK2yqiDkzH2AGKvK9J/5yR8j6j5hj0r0Lm2tZpBDDqc&#xA;wQRFiaKXUMWRGPRj9NMuOEgNA1ESaepXljZXsDW97bx3Nu1C0MyLIhINRVWBGxyqMiDYbiAebzPV&#xA;PyeMHmKw1HQnAt1uRcXkU7qoQCVXCwrHGPhArsfbM+GtuJEu5xJab1AxepZr3MYf5VuWstau9Lk6&#xA;SM3Af5cZP61zXaWXDMwdvrYceMTH4tkeuT3Fvot/PbnjcRW8rxNStGVCQafPM3NIiBI506/TREss&#xA;QeRkPveY+XLjzLBr9lJJqMs6SzpHNEzvIrI7cWqGNNga5ptPPIMg3J3ek1ccEsUgIgUNtgHrZIAJ&#xA;OwHU5vXlGH+X7h9S80XN9v6So3H2WoVB92a7Ty48pk7bVQGPAI9WQ+YLGa/0HUrGCgnu7WeCIsaL&#xA;zkjZVqd9qnNpjlUgT0Lp5i4kMJ8kflJpmmRrd61Gl7qPF0ltn9Oe1ALVVlV4+XLiOtcy8+sMto7D&#xA;7XHxaYR3PNn9ncWU8ANnJHJAhMa+kQVHDbiKbCmYAle7mTxygaIpWwsUqh82eVptT/RUOs2MuqVK&#xA;/UEuYWuKqKkekG51Hyw0UcQTXAlSmu7WGWKKWVI5JyVhRiAXIFSFB64CQzjjkQSBsOarUVpXfrTC&#xA;wYX+an5gyeS9EguLW2W71K+mFvZxSEiMGhZnelCQPAEdcVY9+Vf5war5m1ybQtes7e3vjCbi0ns+&#xA;YidUIDIyyNIwbeoNf7VXoev6g9hY+sjcSXClqVoDXpmNqshhGw5OkxCc6KD8ua29/LLE7mTivIEg&#xA;AihA7fPKdJnlIkFv1mnEACEq/NP8wX8l6HBc21st3qN9N9Xs4pCRGG4li70oSq06A75nuvY5+Vn5&#xA;wav5m12XQdesre3vWha4tJ7PmI2VCAyMsjSENvUGuKpp+a3krXNdtC+i3E8Uzx0uY4ZfT9T0QzxB&#xA;t15AklaeND2zHzYyTYdlpNRAYzCfQ3H9KYflJfQXnku1eK5M7ozJPGwo0MoA9SP5cquPZsOn+lr7&#xA;RmZZbIo18/NmWXuC7FXlH5w2N1revaL5f0y9kTVLs8vShIUwQIWaSYtUbtxFBUfY98xc4uQA5u00&#xA;eXhxSBGxO5+4M68maNeaVokcd/JJNqEx9S6kmcyyFqBQGck8iFUVPjl2KJA35uPrs0Zz9H0RFBPc&#xA;scN2KoTV9Pi1LSr3Tpf7q9glt5O3wyoUPT2OA30SKvfk+ZvzA8nabq+uaHYabEYta1S5WyAjHGP0&#xA;YgA7uKf7qUr0/Z+Qyns3LP1A/SPvcntjBj9JH1Hb4D9T6jACIBXZR1Y1O3iTl7irRNCxAEikt9kA&#xA;jf5Y2ml+KGGeboJbDVbfU7b4Gk3LDp6ieP8ArLmt1cTCYmHcaGQnjMJIo/mH5ZUxWl5K0d3OgrB6&#xA;bsCWqvEMBx3I8cyI6qBG7WOyc5uURcR1sMZ0TULPT9Ya8vvgsLcO0Ugq7U3ozqBtRfCu+YGCUYzs&#xA;8nOz4smSHDH6inmoefdL1DTHGjTNK0jGKSUoycRQVpyA3NcytRqhw1Hq4uLsyeOf7wV1TXybp4tt&#xA;KE7Ckt0eZPfgNlH8fpyzR4+GF97i6/LxTrpFPsy3BeK/mzq3m7QNV1G48u3hsxObae7dVVz6YX01&#xA;NXVqD1DQ061A6ZhZJGMjTvscI5NNC+cSR+lm35VnU/0DINQjZZZXS5DstA31iJHPEj4SK+GW6e6N&#xA;uN2rKMpRMT/DXyRn5o3d9Z/l35iubBzHdRWE5SRTRlHAhmU9iq1IzKjzdRPkXxfHpd3pcFtq1pM0&#xA;eoWbpchh+yysGUr7oRXIQ1nFk4ejdl7OMMQnfqG5/Hk+4PJ/mBPMXlbStcRBH+kLaOd4gahHZfjU&#xA;H/JaoyUhRppibFsK/Oe816zt4tQ0pngl02BpkuwoKo80qQ9WDLWh75iagkEEdHd9n8HgzB5yIFfa&#xA;s/KC58xancHUdfuDdX8VjHH6xVQTHO/rRV4gCvD/ADrjgJlKz3J1sYw08Yj+KRPy2TT84fLVjr/l&#xA;61tbhmhkiuRJb3Mf242CMNgeoPcZLUZTAAjvdfpMAyEg9yXflv8Alx5Z8o38mqS62uq6rcRelHPJ&#xA;whWOEkMQsfJ6Mabkt92+WDNDvDWdPk/mlkPmHzF5c1HS7q1tr6Ka7iNUhQkt6iHoaDavSvTMfU5I&#xA;SgRbnabSZscxIxIiUt8o61o2mQXNzqlwllLIQkYlP7A3+0KipPYHtlOjlGN2d2/WYMuUgQiSi/PO&#xA;g+U/PGgw2VzqSQH1FuLC8ideaSAEA0bqCG3GZ3jQ7w6uWmyAkGJ2Yv8AlX+Xun+XPNt7cfX21e6W&#xA;2aKK8KCNFXkhbggZ+p2ry/XlUM/FkMRyDbk03BiEj9RL1vMlw3kQuk8g/mvNFK/peX/Mw9Wp2SOd&#xA;mO9eg4yVr4K3tmJfBk8i7GvFw/0opN/zlLb6zdWfl+2tLhoLFnunuUDMEeVRF6XID+UF6fM5lHPH&#xA;HzDgw0ss30mqZB+SfmK7sfyne98x3nqxaRLNEtwWLt6CBWRKtQk1fgo+QwHLEjiGwT+XnGQgd5Kn&#xA;5Q2l1reqax571JT6+oStb2CNuEhUgtxJ7CioP9U5RgFkyLl6siIGMdHqWZLgOxV2KvIfzE886gmo&#xA;R2MUzw2XrAzLFsWijajAkbnn3GanPqJSJAOz1/Y/ZcDAzIuVbX3n9TGdb8x2CmyuNPkEl3aTrPE4&#xA;UjhxBHUgda9sx4yMdwadhp+zTOxlj6a677971/RNWl13y3IfUpdBRyc0U8WHJWNKAbfqzaYMvHDf&#xA;mHj9Zp/By10SWPS9VvWsZbJi0UbtzuTsD7b7/Ce+GB4jY5McgEBR+pn+ZLhIXUtOt9QtHtpx8Lbq&#xA;3dWHRh8shkxiYotuHKccuIPC/wAwrC70jzBBE/2441khlHRhzahH0jNRPEYGi9x2Tkjlwkjqf0IL&#xA;UfNRurBreOExySjjK1agDuF+eViLdh0PDOybAZh+V3l99T071phxsoZmV+xkNA3Ee2+5zJwafjNn&#xA;6XUdt6rw50PqI+T1pVVFCqAqqKKo2AA7DNqA8oTbeKEh8+aR+lvJ+sWSpzmltXMS0qTJH+8jH/Bq&#xA;MryxuJDdgnwzB82G/ln+Z/l1PJdtBrWoRWd3po+qlJW+OSNB+7dEFWI4UXbuMqw5hw7nk5Gp00uP&#xA;0iwURq35t+RNX9Ty5ALrUF1ZHsmkhhAjpOpjPL1mialG3ouE6qIYjQZCN6D5zXytqt9KfLsc6/Xy&#xA;TbB2qFLxHcE0r8XCmY0M0Y5OOtnNy4JSwcF+qhu9U/IX8wbXy3oE/l3zTfpBBbS8tKbhI3FJCWlj&#xA;ZlU0Af4hXxO/TM2WqhI9zro9n5YCtj7k+/N3zrpmu6dpnlvy/eR3smq3MfrNAwcKoYLHGwHQtIwN&#xA;P8n3yjPkEgAOrlaTCYEykKp65Z2lvaW0VtboEihRIo1AAokahVG3gBmUBTrpSJ5oXXNJXVLH6sZP&#xA;TYMHR6cqEVHSo7HKs+LjjTdps/hSvmxtvIV0OXG6Q0Hw1Uip+/MP8ie92I7Tj3PJX1BtM8zXkjxm&#xA;iyyRTR9G2ah696rmIY9HrRh8XBEA9AQt8w67FqCxwwKwhQ8mLUBLUoNhXpgATpNKcdk83p2h+Tru&#xA;90e0uvWWITRI6RsDXiVHE7eIzJho5SF28xqdfGGSUauiyfy/5b/RUsszzCaSRQgovEAVqe565l6f&#xA;TeGSbt1uq1figCqTvMpwmKfmV5Mg80+W5rYL/uQtg02nyU3EgH2PlIPhP0HtlWbHxByNNm8OV9Hi&#xA;Gt+bta1r8t7ax1KFZvqV2kcF9v6oSOMgcux+1xr3+e+auWruXhnut3MNIIk5B16ILy35f168Om+U&#xA;4buQaZr1yNSlUr9hhGFkP+UEijDDx2yeLU+N6BtwmmueAYbyHcy/FPp3S9MstL0630+yjEVpaoI4&#xA;Yx2A8fEnqT3ObWIAFB0kpGRsorCxdiqF1W9Flp090esaEr/rHZf+GOV5Z8MSW3Dj45iPe8r8z+T2&#xA;1Hyxaaijql0blhyev90wIPSu/NM1RxVj4vN6rQdojFnlA/Tw/b/Yxaw8hXEt/bRPcxmOSVEeoYfC&#xA;zAHKoCyA7XL2vEQJAN0Xpmq6PqWmXs0WmxObS8TgqxKSApIqm3Snb2zJy4pQkeHlJ5bDqIZIgzPq&#xA;j3/ezPTrRbOxgtl/3UgUkdz3P0nNljhwxAdRlnxyMu9EZNrdirzP877SA6Zpt4R+/SZoQ3+Q6ciD&#xA;9KDMPWDYF6X2byHjnHpV/j5vIM171z6M8hWcNr5P0mOIAB7dJmpvVpR6jE/S2bfAKgHzvtTIZaiZ&#xA;P86vlsn+WuA7FXYq83vfyE8k3V9NdCa9gEzmT6vDJEIl5GvFQ0TMF/2WY500SXNjr5gVshD+Uuh+&#xA;XdesdU055mhjjlVo5mD0mIVUYEBeqs+3jmJq8QgBTk6bUnJYKpD5R0GHXH1uO2pfvUl+R482FGcL&#xA;05EHMLiNU5Vqdl+SfljVGvdRv5bjneXEkkKwOqKik7ihVt+fL+mbHT4BKAJcLPrJQlQ6Jv5b/Jjy&#xA;loGsQarby3dzcW1TCly8bRqxFOdEjj3HbfMiGnjE24+TWTnGjTPMvcR2KuxV4P8Am1YwWvnGZoRx&#xA;+tRRzyDtzNVP38K5q9VGpvd9hZTLTC/4SQxrQ7KO+1rT7KUkR3VzDC5HULJIFNPvymAuQDstTkMM&#xA;UpDnGJPyD6cRFRFRAFRQAqjYADoBm6fMyb3bxQ7FXYq8Z8ww6LomrXmnSTW9vH6rypC7qo4zH1Rs&#xA;x/y84ztDBk8eVAnd67RZYywxJ7k+/LeKxvtYl1C3kiuFs4GiEkbK/Bp2U/sk0qIjmf2HhmJyJBGz&#xA;g9sZBwRA73pGdI8+7FXYqkHnB2exgsYvimu5lRF+X9pGYmrNxERzJc7QCpGR5RDzL85/zBbyxJpf&#xA;lrTEjmeKL17znXavwxdO5+Nj9GZ+DQwyQqV0O51+btCePIZRqz3vNE/N/XkdXW2hDKQQd+oy3+Sc&#xA;H9L5/sYHtrUH+b8v2vqDyj5itvMflvT9at6BLyIO6D9iQfDIn+xcEZTkhwyIZQlxAFN8gzdirsVe&#xA;P/n/AOaNKsBpGl3EpFxKZLllUE8UFEVmA3+I8qfI5Vm008kfT0dv2P2hi02QnIa4h3W8hbzLoqrX&#xA;6yD7BXJ/VmINBmP8P3PSy7e0YF8f2H9T6P8Ayn1+y1vyJp1zavyECtazKaBkeFqUYDxTiw9iMz44&#xA;zACJ5vF6vPDLllOH0ksvwuO7FXYq7FWGfm1rsmieUHvoGVbsTxJahxyUu1eQIqP918jmNqgDDdzN&#xA;CD4nweGf8rT848+X1mOlfseklP1V/HNbwB3HCH0X5I1GPUvKWlXyEE3Fujy0FB63+7aD/jJyzbYa&#xA;4BTodQD4hvvTvLWl2KuxV2Kvnj83PNGjS+eru1+tp6llHHBJXYBwvJl5dDQvQ++Ymo0uSR4gLD1X&#xA;YvaWnx4uCchGVnn+KYrp/mrRdP1OzvHulK288cp4Vc0Rw37IPhlWLR5TIel2Gs7X0vhyHGDYI23+&#xA;59XxSxzRJLEweORQyOu4KsKgj55sHhV2KuxV2KvnD8ytG17XfOeo38ESvbclhtz6ij4IlCA7kfaI&#xA;LfTnP5+0cRmd3pdLpZRxhlX5GWGq6NqWoWd8ESG+jR41DBj6kJO1Bturnv2zI0GuxznwDq4vaWmk&#xA;ICXc9lzcOkdirsVYnc6brB1qC+YKtsOXHf4ld6j7PjvmJLHI5BLo7CGaIxmPV8t+d9WuPM3nrUry&#xA;Ctw95dmGzVdy0akRQKPcoq50WOPDEB5jJLikSyf80Pyll8oaHouow8pRLEINXavJUuzV6g/ykEqP&#xA;9XxOV4c/GSG3Ng4ACzr/AJxj155dO1fQpXqLaRLu2U9eMoKSU9gUX78p1kdwW7SS2Ie35hOY7FVG&#xA;9vLays57y6kEVtbRtLPK3RUQFmY/IDCBal8T+efNVz5p803+tz1C3MlLeI/7rgT4Yk+hRv71ObKE&#xA;eEU4MpWbT3zT+T/mXy55QsfMt4VaK54fXLVVYSWvq7x+pXx+y3g22QjlBNMpYyBbIP8AnHTzodI8&#xA;1PoNy9LHWqLFU7JdICYz/sxVPc8cjqIWL7mWGVGn1DmC5TsVdiqjd3kFpCZpjReiqPtM3ZVHjkJz&#xA;ERZZwgZGgwbzdp1j5qijg1ONjbQOXgjjdl4sRTkSD8R+Y2++uqzakzPk7bT4Rj97F0/KnyerAmGZ&#xA;x/KZWp+FDlPGXI4izXyy9r5fs49OtISumoWKxBmZkLGpKlySRXciv9uTp9Vw7Hk4eo0/HuObMIpY&#xA;5Y1kjYMjCqsO+bQEEWHVkEGiuwodirHfzB83Q+U/Kd9rT0aaJeFnE3R7iT4Y1+Vd29gcnjhxGmM5&#xA;ULfG1lZ6v5i12O2gDXeq6nP1P2nllarMx+ZJY9s2JIAcMblM/PfkLXPJerJp2q+nIZoxNBcwFmik&#xA;U7HiWVDVTsQR+sZGExIWEyiYvoD/AJx286HWfKbaLdS87/RCI05dWtX/ALo+/ChT2AXMTUQo33uR&#xA;hlYp6xlDa7FUDrt41no93cKaOkZCHwZvhU/ecxdbl8PDKQ7nI0mPjyxj5vNdD0p9U1FLVTxUhmkc&#xA;fsqB1++gzjtHpjmyCD1Wr1Aww4lO1ln0zVI5GBWW1l+Nf9U0YfT0yGOUsOUHrEs8kRlxkdJB64CC&#xA;KjcHoc754p2KuxVj/wCYOs/oXyTrWoh/TlhtJBA57TSD04v+HYZZijcgGvLKokvBv+cd/Jo1bzNL&#xA;r10nKz0YAwgjZrqQHh/yLWrex45m6rJUa73C0uOzfc+hPNXl2z8x+Xr7Rbv+6vIigelSjjeOQe6O&#xA;A2YEJ8Jtz5x4hT5w/JS4ufLn5rrpN9+4lmFxptyp6CRfiUb+MkQA+ebDUDix2HX6c8M6L6kzWuyd&#xA;irzX/nITWm038t7mBHKS6nPFZqQaHiSZX+gpEVPzy7ALk1ZTUXjP5EeQj5l81rqF3Hy0jRys81R8&#xA;Mk1awxb9dxyb2FO+ZOefCPe04o2X1JrGk2OsaVd6XfJ6lneRNDMnfi4pUHsR1B7HMEGjblEW+L/M&#xA;Oiar5K84y2UpK3ml3Cy209CA6owkhlX2YUPt0zZRIkHDI4S+0tK1K31PS7TUrY1t72GO4hP+RKoc&#xA;fgc1pFGnMBtFYEtSSJHG0jkKiAszHoANycBNJAthOt61Eqyahfyelbxj4a9EUnYACu52r4n6M0ub&#xA;Kchvo7zS6Y7RiLkXn2ufmUzo0GkRFK7fWpQK/wCwTf7z92VU9DpuxuuQ/Afr/V82LReZvMMUqyrq&#xA;NwWU1AeV3U/NWJBxdtLRYSK4Y/JmujfmVZTKsWqRm3l6GeMFoz7kfaX8cadHqOx5x3h6h9r0PQtV&#xA;EckYVw9pcEUINQC3Rh/HMvS5jGXCeRec1eCwT/EGU5tXVOxV8+/85S62TcaHoaOQqJJfTx12JY+l&#xA;E1PbjJmXpo8y4+c9ET/zjX5C9OKbzjfRUeXlb6SGHROk0w/1j8A/2Xjg1E/4U4Y9WffnJ5DHm7yj&#xA;LHbR8tX0+tzpxH2mYD95D/z0UU/1guVYZ8JZ5I2Hgf5Da7+h/wAyrGKVjHFqKyWEoO3xSDlGKf8A&#xA;GVFGZeeNxaMRqT63zXuW7FWPeepvT0EpX++lRKfKrf8AGuantqdYK7yP1uz7Jjea+4FD+QdNEOny&#xA;Xzj95ctxQ/5Cbfi1cp7E0/DjMzzl9wbe2M/FMQHKP3pR5800Qakl4gol0vxf8ZEoD94pmB23p+HI&#xA;JjlL7w5vZGfixmJ5x+5m2kzevpdpLWpeGMn5lRX8c6TSz4sUT3xDoNRHhySHmUVl7S7FXhX/ADk3&#xA;5imjg0ry9ExWOble3VP2gh9OIfKvM/dmbo4cy4WrnyD0n8q/LZ8veRNLsJIvSu3j+sXi0o3rTfGQ&#xA;3uoIX6Mx80+KRLkYYcMQGWZU2vnH/nIbRbnRfOmneZrAeh9cRGE8exF3at9okd+HCnyObDSyuJiX&#xA;X6qNSEg978sayut+XdN1dQF+vW0U7INwrOgLL/sWqMwZxokOdCVgFM8iyfNP/OTXmJ7vzVY6FGxM&#xA;Gm24llQf7/uDXce0apT5nM3TR2txsx3p7l+XXlq28u+TNK06K3FvOLeOS+AHxNcugMzMepPLbftQ&#xA;Zi5JXIlvhGgyTIMnjn/OS/lq3u/Kdtr0VuDfadcJHNcAfELWXkpVvECUpSvSp8cyNNLemnNHa0Z/&#xA;zjf5jfUvI8mmTOWm0e4MSVNT6Eo9SP8A4bmB7DBqI1K+9OE2Hq+UNqTectXt9I8t3moXLFIIfTEj&#xA;KCTxklVKUHjyplOo+gt+mjeQB5Z5z1K11byTFqunyO9o95HBz4sob4JGcEMAfhZF36ZqvDIhfm9X&#xA;2OR+Z4f6BP2j9rzfKnrHYq7FXqlrr+naF5S0mbWZvRW8t/8ARlRWYsqfBQcQdwKE/MZbPGdj3h4n&#xA;WUc8wOknrdncpdWkF1H/AHc8ayp32dQw/Xm6BsPMSFGlXCh8l+Y538+/nZ9UastnPqKWKKp6Wlu/&#xA;B2WlOqI0n05nx9EHEPqk+r7S0trS2itbWJYLaBRHDDGAqIiigVQOgGYBLlquKvlv/nIDQl8u/mDb&#xA;atpcX1Nb+NL1JYxxAu4pD6jL2DbIx9zXM7BK40XFyii+kPKutprvlvTNYSg+vW0czKP2XZRzX/Yt&#xA;UZhyjRpyYmxaaZFLBfPlzLcana6fHU8VBCjvJIaD8AM5jtvIZ5Y4x+CXoeyICOOUz+AGa2lultax&#xA;W8YokSKi0/yRTOjxYxCIiOgdDkmZyMj1SrzhZfWtBnotXgpMntxPxf8ACk5g9q4ePAe+O/4+Dmdm&#xA;5eDMPPb8fFCeQ75p9Je3c1Nq/Ff9R/iH41yjsTMZYjE/wn7G7tfFw5eIfxBkubl1TsVeGeYtIXzd&#xA;/wA5CwWMi+pZaHbwSXY6jhEPXCnxDSzqpzNhLgxX3uFKPFlrue55hOa7FWHfm35WHmTyLqNoic7y&#xA;2X65ZUFT6sAJ4j3dOSfTl2CfDINWeHFEpf8AkNqP138s9OQnk9m89s5/1ZWdR9COuHUipljpjcA9&#xA;ByhvfOPlDQB5/wDzt1nXblfV0fS7szMx3WQwt6VpH9Ii5EeC0zMnLggB1caI4pW+jsw3JdiqD1jS&#xA;bLV9Ku9Lvk9S0vYmhmXvxcUqD2I6g+OEGjaCLeE/kdbXnlL80Nf8n3zUaSE+m3QSm3bnE4Hg8MrM&#xA;Mysx4ogtGLaRD6CzEch5v+fF46eTY7GJWea+uo0CKCTxSrk7f5QUfTmLqpgRrvc7QQud9wTc+QIG&#xA;/LqDyuOKTwwKVl7C6H7xm27NITX2OTlhvHws9Jrzh1Ay9L39zwS/sLzT7yWyvYmguYG4yxN1B/iD&#xA;2OaiUSDRfScWWOSIlE3EofItia+WvLmoeYNVi0+zU1cgzTUJWKP9p2/z3yzHjMzQcTW6yGnxmcvg&#xA;O89z1v8ANvyjbz/l36VpHV9CVJrb+b0ol4SAn/jH8R+WbTNj9G3R87wagyzGUv4zv8U//LXUhqPk&#xA;TRbgGpS2SBzWp5QfuTX58K5ZhNxDj6mNZCmXmjWF0by3qmrEgfUbWada92RCVH0tQZdEWaceRoPG&#xA;P+cafJPwXXnG+Sskha20wt1p0nlHzPwA+zZkaif8LThj1e9Zit7sVYH+c/kcea/Js628fLVdNrda&#xA;fQfExUfvIv8AnomwH83HLcM+GTXkjYSr/nHLWvr/AOXaWbNWTS7mW3oevBz6yn5fvSB8slqBUkYT&#xA;s9RyhtYlHbfXfPs8jCsVkqt7cgigD/gmr9GaGOPxNcT0h+p3Usnh6MDrL9bLc3zpWnVXUowqrAhg&#xA;e4OAixRSDW7E/JkDWWqatYNv6bLx9wpYA/SGGaLsiHh5cmPur9Lue05+Jjxz7/2MtzfOlQOsahPZ&#xA;WvqQQNPMx4oqgkA+LU7YCaZRFpX5X0y8jubnULyPhNcjYsKPuxZqjqN8EbZTI6MiyTW7FXYqxDTh&#xA;q2g3TQNatLaTNWkQLAb9Vp38QcrFhtNEJd5983eaI7qXQPLmlXT3cihX1ERtxUOK/uSBTvTmSKH7&#xA;82OnwwrimRXc4ObLK+GIRv5V+S7rypoM1rdrClzdzm4kSEA8aoqhWYAVPw9tsq1OSM5XHkzwQMRu&#xA;zPMdudirsVeZfmT5P8xN5ms/OHl6JJL2xgWJljA9eqM5JAp8YZJOJXrTbM7S5MfCYz6uLnhO+KLI&#xA;vKnm/Vtb0u6afR5rPVLRRWKVWSGR2rTgz0PbdT08cxdbjOOJMKkejkaWYnICfpHVL4ND8y6tqsdz&#xA;qQMSRMCWegAVTXiijOTho9TnyiWTYD8UA9JPV6fDjMce9/jdnedQ86k/mDyh5e19ANTtFlkQUSdS&#xA;UlUeAdaGnsdsryYoz5hzdJ2hm0/93Kh3dGMR/kn5PSXm0t5Iv++mlTj/AMLGrfjlH5KHm7Q+0upI&#xA;qofI/rZho+haRo1r9V0y1S2hO7BRVmI7uxqzH5nMiEBEUA6bUarJmlxZJcRX6zA9xpF7bxoJHmgk&#xA;jEZ6NyQin01yvUiRxyEfq4Sx05AyRJ5WGNfl9Fe2iXNk9q0FqD6iFkKASbKw3A6j9WajsU5RxRkD&#xA;XPfvdp2sMZ4ZRIvyTXWbUa3ay6ZcWglsZqLPHMvwuAQRyr7iudJGo7ujO6Y6RplppemW2n2cSQW1&#xA;sgSOKMUVQPD6cqkbNpApF4EuxV2Ksb0vy9Z+XLm6l0qwigivZDLcCBac2qSC1OhHLLjISG7ACkdr&#xA;utXOn6Oby1s5bq4YhIoFViQxru4Wp4imY2WRiNt3M0eCOWfDI8ISTyBo+t281/qmqr6cuolXEbVE&#xA;gPJi3Jf2euwynBjIJJ6uw7V1GKQjjx7iHyZjmS6Z2KvP9fi8yaL5vl1+ztWvLK4CxvHHyY8BGisG&#xA;CglfiSoNKZhzjKM+IDm9BpZYc2nGGUuGQ/WWd2k/1i1huODR+siv6cg4uvIV4sOxHfMsGw6KceGR&#xA;HOlXCwdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:38F4CEEFC66CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:38F4CEEFC66CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:595b9044-b7dc-0049-bf90-b195859b6ef0</stRef:instanceID>
            <stRef:documentID>xmp.did:f95cb367-025a-e44d-8592-e650cadf5713</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ca29a0c7-e321-5144-8b0c-c78bb2f197a1</stEvt:instanceID>
                  <stEvt:when>2019-03-25T10:06:26+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:38f9af96-0ff6-024c-b718-2fc33f5e353a</stEvt:instanceID>
                  <stEvt:when>2019-03-26T15:22:17+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f95cb367-025a-e44d-8592-e650cadf5713</stEvt:instanceID>
                  <stEvt:when>2019-03-26T15:25:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:595b9044-b7dc-0049-bf90-b195859b6ef0</stEvt:instanceID>
                  <stEvt:when>2019-04-16T20:39:01+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:38F4CEEFC66CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T13:42:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1600.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
1600 800 li
1600 0 li
cp
clp
1600 800 mo
0 800 li
0 0 li
1600 0 li
1600 800 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
823.003 243.958 mo
823.003 243.958 839.359 242.244 845.252 258.039 cv
851.145 273.834 856.694 279.005 857.389 287.303 cv
860.198 320.865 875.871 313.273 871.463 332.619 cv
867.056 351.965 864.003 354.892 864.003 354.892 cv
826.533 347.545 li
788.575 347.668 li
788.575 347.668 803.426 340.251 800.119 324.457 cv
796.814 308.661 788.575 282.772 793.229 265.141 cv
797.881 247.509 813.229 245.305 823.003 243.958 cv
cp
.0862745 .2 .258824 rgb
f
909.793 578.683 mo
909.793 627.945 869.859 667.879 820.597 667.879 cv
771.335 667.879 731.401 627.945 731.401 578.683 cv
731.401 529.421 771.335 489.487 820.597 489.487 cv
869.859 489.487 909.793 529.421 909.793 578.683 cv
cp
.921569 .278431 .278431 rgb
f
945.244 649.698 mo
945.244 649.698 947.273 656.964 945.244 663.771 cv
943.215 670.577 941.906 681.965 946.75 688.248 cv
951.593 694.531 959.447 697.149 970.836 694.008 cv
982.224 690.866 980.26 681.965 976.464 674.373 cv
972.668 666.78 963.464 651.897 962.131 646.949 cv
960.797 642.001 945.244 649.698 945.244 649.698 cv
cp
.980392 .631373 .27451 rgb
f
946.142 656.707 mo
946.142 656.707 953.568 659.764 965.147 653.716 cv
962.131 646.949 li
945.244 649.698 li
946.142 656.707 li
cp
.556863 .309804 .227451 rgb
f
957.418 624.173 mo
955.062 612.784 948.975 562.715 945.048 551.13 cv
941.12 539.546 932.285 525.016 928.555 519.715 cv
924.824 514.413 906.171 498.901 899.888 491.637 cv
893.604 484.371 869.846 468.074 867.686 465.466 cv
865.525 462.857 863.749 459.226 863.749 459.226 cv
844.863 458.941 820.377 461.791 820.377 461.791 cv
820.377 461.791 798.399 459.299 779.514 459.583 cv
779.514 459.583 777.43 462.857 775.27 465.466 cv
773.11 468.074 747.149 484.371 740.866 491.637 cv
734.583 498.901 715.929 514.413 712.199 519.715 cv
708.468 525.016 699.632 539.546 695.706 551.13 cv
691.778 562.715 686.28 613.767 683.924 625.154 cv
681.568 636.543 677.888 646.83 677.888 646.83 cv
677.888 646.83 683.532 651.662 695.509 649.698 cv
695.509 649.698 711.414 601.396 718.678 587.848 cv
725.943 574.3 728.889 547.793 734.19 543.08 cv
739.491 538.368 758.216 532.673 777.031 522.856 cv
795.844 513.038 799.968 504.988 806.644 504.791 cv
813.319 504.595 817.616 505.185 820.377 504.988 cv
823.137 505.185 827.434 504.595 834.109 504.791 cv
840.785 504.988 844.909 513.038 863.723 522.856 cv
882.536 532.673 901.262 538.368 906.563 543.08 cv
911.864 547.793 914.81 574.3 922.075 587.848 cv
929.34 601.396 945.244 649.698 945.244 649.698 cv
957.222 651.662 962.131 646.949 962.131 646.949 cv
962.131 646.949 959.774 635.562 957.418 624.173 cv
cp
f
965.147 653.716 mo
965.147 653.716 964.486 654.705 961.935 654.313 cv
959.381 653.92 953.323 651.444 946.142 656.707 cv
946.142 656.707 964.336 664.116 965.147 653.716 cv
cp
.980392 .631373 .27451 rgb
f
677.888 646.83 mo
677.888 646.83 672.906 656.374 667.409 659.319 cv
661.91 662.265 638.545 673.456 641.49 683.078 cv
644.435 692.699 676.048 690.735 682.135 683.078 cv
688.222 675.42 693.13 679.15 694.897 671.689 cv
696.665 664.229 695.509 649.698 695.509 649.698 cv
695.509 649.698 690.186 649.502 686.455 648.323 cv
682.724 647.146 682.673 645.14 677.888 646.83 cv
cp
f
951.217 583.713 mo
935.195 584.29 923.976 591.732 923.976 591.732 cv
923.296 590.243 922.656 588.932 922.075 587.848 cv
914.81 574.3 911.864 547.793 906.563 543.08 cv
901.262 538.368 882.538 532.673 863.724 522.856 cv
844.909 513.038 840.785 504.988 834.109 504.791 cv
827.434 504.595 823.139 505.185 820.377 504.988 cv
817.616 505.185 813.32 504.595 806.645 504.791 cv
799.968 504.988 795.845 513.038 777.031 522.856 cv
758.217 532.673 739.493 538.368 734.191 543.08 cv
728.89 547.793 725.945 574.3 718.68 587.848 cv
718.31 588.539 717.914 589.32 717.501 590.185 cv
706.306 582.641 690.272 582.856 689.977 582.861 cv
691.921 569.124 693.967 556.259 695.706 551.13 cv
699.633 539.546 708.47 525.016 712.2 519.715 cv
715.931 514.413 734.584 498.901 740.867 491.637 cv
747.15 484.371 773.111 468.074 775.271 465.467 cv
777.431 462.859 779.513 459.584 779.513 459.584 cv
798.398 459.297 820.377 461.791 820.377 461.791 cv
820.377 461.791 844.862 458.939 863.747 459.227 cv
863.747 459.227 865.525 462.859 867.686 465.467 cv
869.846 468.074 893.604 484.371 899.888 491.637 cv
906.171 498.901 924.824 514.413 928.555 519.715 cv
932.285 525.016 941.12 539.546 945.048 551.13 cv
946.838 556.42 949.085 569.725 951.217 583.713 cv
cp
.988235 .8 .635294 rgb
f
939.047 300.658 mo
939.047 300.658 940.47 295.618 939.885 293.021 cv
939.406 290.898 938.265 287.963 937.766 286.054 cv
937.267 284.144 936.004 275.697 936.225 273.606 cv
936.315 272.752 938.968 267.763 938.959 266.003 cv
938.952 264.242 938.496 260.668 940.036 260.734 cv
941.575 260.8 942.869 263.908 942.869 263.908 cv
942.869 263.908 942.961 262.306 944.324 261.951 cv
946.976 261.261 948.134 262.544 948.134 262.544 cv
948.134 262.544 949.306 260.989 950.487 260.979 cv
953.094 260.955 954.178 262.227 954.178 262.227 cv
954.178 262.227 955.438 261.471 957.18 261.844 cv
959.408 262.32 960.055 264.471 960.055 264.471 cv
960.055 264.471 962.973 264.435 963.593 265.941 cv
964.213 267.447 963.856 268.856 964.016 270.143 cv
964.173 271.429 962.599 282.543 957.861 289.848 cv
954.01 295.786 952.497 305.728 952.497 305.728 cv
939.047 300.658 li
cp
.556863 .309804 .227451 rgb
f
972.358 271.466 mo
930.77 264.984 li
929.579 272.619 li
971.168 279.101 li
972.358 271.466 li
cp
.721569 .345098 .345098 rgb
f
942.316 264.864 mo
942.316 264.864 940.59 274.707 942.829 277.307 cv
945.067 279.906 945.89 276.392 945.89 276.392 cv
945.89 276.392 945.018 279.853 947.735 280.869 cv
950.454 281.885 951.195 277.716 951.195 277.716 cv
951.195 277.716 951.247 280.525 954.261 280.533 cv
957.274 280.541 957.094 276.934 957.094 276.934 cv
957.094 276.934 959.385 280.88 961.688 277.961 cv
965.575 273.032 963.593 265.941 963.593 265.941 cv
963.593 265.941 962.951 264.279 960.055 264.471 cv
960.055 264.471 958.76 260.279 954.178 262.227 cv
954.178 262.227 950.263 259.002 948.134 262.544 cv
948.134 262.544 943.766 259.353 942.316 264.864 cv
cp
.411765 .227451 .168627 rgb
f
937.265 243.867 mo
931.667 242.92 li
929.94 242.628 928.304 243.792 928.012 245.519 cv
920.484 290.082 li
920.192 291.809 921.356 293.446 923.084 293.737 cv
928.682 294.682 li
930.408 294.974 932.045 293.81 932.337 292.083 cv
939.863 247.523 li
940.155 245.796 938.991 244.159 937.265 243.867 cv
cp
.921569 .443137 .443137 rgb
f
978.854 250.348 mo
973.256 249.403 li
971.528 249.111 969.893 250.275 969.601 252.002 cv
962.073 296.563 li
961.782 298.291 962.945 299.927 964.673 300.219 cv
970.27 301.164 li
971.997 301.455 973.634 300.292 973.926 298.564 cv
981.453 254.004 li
981.744 252.276 980.581 250.64 978.854 250.348 cv
cp
f
703.5 300.972 mo
703.5 300.972 702.125 295.618 702.71 293.021 cv
703.189 290.898 704.33 287.963 704.829 286.054 cv
705.329 284.144 706.591 275.697 706.37 273.606 cv
706.28 272.752 703.627 267.763 703.635 266.003 cv
703.644 264.242 704.099 260.668 702.559 260.734 cv
701.02 260.8 699.727 263.908 699.727 263.908 cv
699.727 263.908 699.635 262.306 698.271 261.951 cv
695.62 261.261 694.461 262.544 694.461 262.544 cv
694.461 262.544 693.29 260.989 692.107 260.979 cv
689.502 260.955 688.417 262.227 688.417 262.227 cv
688.417 262.227 687.158 261.471 685.416 261.844 cv
683.188 262.32 682.541 264.471 682.541 264.471 cv
682.541 264.471 679.623 264.435 679.002 265.941 cv
678.382 267.447 678.738 268.856 678.58 270.143 cv
678.422 271.429 679.996 282.543 684.734 289.848 cv
688.585 295.786 690.098 305.728 690.098 305.728 cv
703.5 300.972 li
cp
.556863 .309804 .227451 rgb
f
670.237 271.466 mo
711.826 264.984 li
713.016 272.619 li
671.427 279.101 li
670.237 271.466 li
cp
.721569 .345098 .345098 rgb
f
700.279 264.864 mo
700.279 264.864 702.004 274.707 699.766 277.307 cv
697.527 279.906 696.705 276.392 696.705 276.392 cv
696.705 276.392 697.578 279.853 694.859 280.869 cv
692.141 281.885 691.399 277.716 691.399 277.716 cv
691.399 277.716 691.348 280.525 688.334 280.533 cv
685.321 280.541 685.501 276.934 685.501 276.934 cv
685.501 276.934 683.21 280.88 680.907 277.961 cv
677.02 273.032 679.002 265.941 679.002 265.941 cv
679.002 265.941 679.644 264.279 682.541 264.471 cv
682.541 264.471 683.835 260.279 688.417 262.227 cv
688.417 262.227 692.332 259.002 694.461 262.544 cv
694.461 262.544 698.83 259.353 700.279 264.864 cv
cp
.411765 .227451 .168627 rgb
f
705.33 243.867 mo
710.928 242.921 li
712.655 242.629 714.292 243.792 714.583 245.519 cv
722.111 290.082 li
722.403 291.809 721.239 293.446 719.511 293.737 cv
713.914 294.682 li
712.187 294.974 710.55 293.81 710.259 292.083 cv
702.731 247.523 li
702.439 245.796 703.603 244.159 705.33 243.867 cv
cp
.921569 .443137 .443137 rgb
f
663.741 250.348 mo
669.338 249.403 li
671.066 249.111 672.703 250.275 672.994 252.002 cv
680.522 296.563 li
680.813 298.29 679.65 299.927 677.922 300.219 cv
672.325 301.164 li
670.598 301.455 668.961 300.292 668.67 298.564 cv
661.142 254.004 li
660.85 252.277 662.014 250.64 663.741 250.348 cv
cp
f
808.688 311.524 mo
808.688 311.524 810.602 325.733 809.645 335.518 cv
808.688 345.302 836.428 338.128 836.428 338.128 cv
836.428 338.128 834.873 316.845 837.265 309.192 cv
839.655 301.541 808.688 311.524 808.688 311.524 cv
cp
.556863 .309804 .227451 rgb
f
835.979 328.162 mo
835.979 328.162 843.662 331.791 846.89 332.329 cv
850.118 332.867 871.461 350.264 872.178 352.058 cv
872.896 353.851 867.156 368.558 865.004 375.374 cv
862.852 382.188 853.587 423.26 854.453 426.129 cv
855.319 428.999 863.408 457.056 864.059 459.835 cv
808.222 470.833 778.241 461.491 778.241 461.491 cv
778.241 461.491 788.242 433.842 787.883 428.461 cv
787.524 423.08 782.324 392.591 778.557 383.981 cv
774.791 375.374 768.514 353.672 768.514 353.672 cv
768.514 353.672 792.905 334.661 793.623 333.405 cv
794.34 332.149 807.75 329.513 809.902 327.898 cv
835.979 328.162 li
cp
f
846.89 332.329 mo
846.89 332.329 858.664 368.592 862.73 384.089 cv
862.73 384.089 856.535 411.816 855.798 415.963 cv
855.798 415.963 821.053 409.272 786.264 417.163 cv
786.264 417.163 778.75 384.56 778.026 382.724 cv
778.026 382.724 789.938 361.503 795.188 332.568 cv
795.188 332.568 799.656 329.907 802.995 330.299 cv
802.995 330.299 799.72 366.584 823.574 366.226 cv
847.428 365.868 840.114 329.958 840.114 329.958 cv
840.114 329.958 844.394 331.087 846.89 332.329 cv
cp
.988235 .8 .635294 rgb
f
846.89 332.329 mo
846.89 332.329 856.949 328.928 870.956 334.032 cv
884.963 339.137 883.392 338.001 898.184 340.664 cv
912.975 343.326 919.782 345.159 919.782 345.159 cv
919.782 345.159 928.018 328.383 931.825 321.728 cv
935.34 315.583 940.333 295.81 940.333 295.81 cv
953.815 298.559 li
953.815 298.559 948.272 329.436 945.569 338.353 cv
938.108 362.961 932.349 367.673 928.028 367.805 cv
923.709 367.936 908.524 369.375 897.791 367.281 cv
887.818 365.335 875.758 364.139 867.27 368.721 cv
846.89 332.329 li
cp
.556863 .309804 .227451 rgb
f
795.188 332.568 mo
795.188 332.568 785.511 328.928 771.505 334.032 cv
757.499 339.137 759.069 338.001 744.277 340.664 cv
729.486 343.326 722.68 345.159 722.68 345.159 cv
722.68 345.159 714.444 328.383 710.636 321.728 cv
707.122 315.583 702.128 295.81 702.128 295.81 cv
688.645 298.559 li
688.645 298.559 694.188 329.436 696.892 338.353 cv
704.353 362.961 710.113 367.673 714.433 367.805 cv
718.752 367.936 733.937 369.375 744.671 367.281 cv
754.643 365.335 766.704 364.139 775.191 368.721 cv
795.188 332.568 li
cp
f
825.16 253.196 mo
825.16 253.196 846.821 256.322 843.65 288.3 cv
840.479 320.277 821.362 317.739 820.084 317.711 cv
818.807 317.685 800.905 318.376 799.356 279.357 cv
799.356 279.357 798.634 250.503 825.16 253.196 cv
cp
f
822.683 264.786 mo
822.683 264.786 832.803 275.426 837.505 280.814 cv
842.206 286.201 842.746 296.609 842.746 296.609 cv
842.746 296.609 850.665 286.936 847.354 275.671 cv
844.042 264.406 836.206 242.489 816.37 249.223 cv
796.535 255.958 795.8 285.589 798.126 300.282 cv
798.126 300.282 807.03 267.846 822.683 264.786 cv
cp
.0862745 .2 .258824 rgb
f
814.146 316.263 mo
814.146 316.263 823.375 320.625 832.358 314.182 cv
832.358 314.182 829.863 319.334 823.252 320.067 cv
816.641 320.8 814.146 316.263 814.146 316.263 cv
cp
.388235 .188235 .160784 rgb
f
569.257 197.121 mo
569.257 197.121 570.09 192.027 569.141 189.584 cv
568.366 187.591 566.792 184.897 566.022 183.113 cv
565.252 181.328 562.836 173.299 562.795 171.238 cv
562.779 170.396 564.905 165.179 564.668 163.47 cv
564.431 161.761 563.492 158.353 565.11 158.202 cv
566.729 158.052 568.484 160.889 568.484 160.889 cv
568.484 160.889 568.698 159.384 570.078 158.848 cv
572.761 157.808 573.796 158.998 573.796 158.998 cv
573.796 158.998 574.834 157.156 576.069 156.98 cv
578.791 156.593 580.114 157.965 580.114 157.965 cv
580.114 157.965 581.266 156.92 583.136 157.039 cv
585.527 157.19 586.382 159.189 586.382 159.189 cv
586.382 159.189 589.465 158.642 590.309 160.019 cv
591.153 161.396 591.07 162.765 591.402 163.992 cv
591.734 165.219 591.53 176.235 587.524 183.992 cv
584.269 190.298 583.977 200.167 583.977 200.167 cv
569.257 197.121 li
cp
.933333 .658824 .52549 rgb
f
366.426 197.121 mo
366.426 197.121 365.592 192.027 366.542 189.584 cv
367.316 187.591 368.891 184.897 369.661 183.113 cv
370.431 181.328 372.847 173.299 372.887 171.238 cv
372.904 170.396 370.777 165.179 371.015 163.47 cv
371.251 161.761 372.191 158.353 370.572 158.202 cv
368.955 158.052 367.199 160.889 367.199 160.889 cv
367.199 160.889 367.311 159.321 365.931 158.785 cv
363.249 157.745 361.871 158.829 361.871 158.829 cv
361.871 158.829 360.848 157.156 359.613 156.98 cv
356.892 156.593 355.593 157.676 355.593 157.676 cv
355.593 157.676 354.374 156.768 352.504 156.886 cv
350.113 157.037 349.158 159.037 349.158 159.037 cv
349.158 159.037 346.111 158.594 345.268 159.971 cv
344.424 161.346 344.613 162.765 344.281 163.992 cv
343.948 165.219 344.153 176.235 348.158 183.992 cv
351.414 190.298 351.706 200.167 351.706 200.167 cv
366.426 197.121 li
cp
f
649.94 171.473 mo
287.12 171.473 li
287.12 163.853 li
649.94 163.853 li
649.94 171.473 li
cp
.388235 .572549 .819608 rgb
f
439.197 331.459 mo
439.197 331.459 429.423 336.679 423.662 337.089 cv
417.901 337.5 404.86 329.259 399.527 322.098 cv
394.195 314.938 394.192 314.178 388.079 307.767 cv
381.965 301.356 374.016 283.601 372.013 276.32 cv
370.01 269.04 361.499 254.218 360.605 250.871 cv
359.712 247.526 355.555 233.444 353.873 226.235 cv
352.064 218.483 351.112 194.174 351.112 194.174 cv
366.088 193.053 li
366.088 193.053 378.941 226.657 383.497 235.705 cv
388.052 244.755 385.525 250.331 390.05 257.434 cv
394.575 264.536 410.313 282.04 414.201 292.637 cv
418.088 303.233 427.299 304.764 432.563 316.292 cv
437.827 327.818 439.197 331.459 439.197 331.459 cv
cp
.933333 .658824 .52549 rgb
f
496.663 332.292 mo
496.663 332.292 506.44 337.516 512.199 337.926 cv
513.799 338.042 515.969 337.48 518.381 336.463 cv
518.797 336.289 519.214 336.099 519.645 335.894 cv
526.753 332.549 533.759 326.621 536.445 322.784 cv
541.663 315.762 541.714 314.973 547.779 308.601 cv
551.038 305.187 554.809 298.561 557.936 292.005 cv
560.677 286.247 562.913 280.562 563.849 277.157 cv
565.85 269.877 574.364 255.051 575.255 251.704 cv
581.635 227.393 583.49 229.933 584.515 194.542 cv
569.628 193.748 li
569.628 193.748 556.921 227.494 552.361 236.54 cv
547.808 245.587 550.337 251.163 545.813 258.266 cv
541.699 264.719 528.341 279.758 523.013 290.397 cv
522.473 291.471 522.02 292.502 521.662 293.474 cv
520.397 296.916 518.578 299.393 516.51 301.578 cv
512.213 306.115 506.849 309.338 503.298 317.128 cv
498.029 328.652 496.663 332.292 496.663 332.292 cv
cp
f
588.336 659.688 mo
586.579 655.605 578.231 622.517 574.276 603.181 cv
570.322 583.843 562.413 560.425 559.996 556.771 cv
557.58 553.118 548.316 522.988 545.899 510.311 cv
543.483 497.635 515.18 443.542 513.861 440.964 cv
512.543 438.385 509.522 430.327 509.522 430.327 cv
468.761 433.322 li
427.999 430.327 li
427.999 430.327 424.978 438.385 423.66 440.964 cv
422.342 443.542 390.874 500.947 388.457 513.624 cv
386.041 526.3 379.941 553.118 377.525 556.771 cv
375.108 560.425 367.2 583.843 363.245 603.181 cv
359.291 622.517 350.942 655.605 349.185 659.688 cv
347.427 663.771 364.344 663.984 364.344 663.984 cv
364.344 663.984 388.949 614.998 394.441 605.974 cv
399.934 596.949 404.986 581.479 405.646 571.596 cv
406.305 561.713 413.334 556.556 419.485 549.037 cv
425.637 541.517 455.295 484.579 460.788 479.424 cv
467.259 473.348 470.427 473.502 476.734 479.424 cv
482.226 484.579 511.884 541.517 518.036 549.037 cv
524.187 556.556 531.217 561.713 531.876 571.596 cv
532.535 581.479 537.588 596.949 543.081 605.974 cv
548.572 614.998 573.178 663.984 573.178 663.984 cv
573.178 663.984 590.094 663.771 588.336 659.688 cv
cp
.184314 .270588 .388235 rgb
f
587.044 655.719 mo
587.044 655.719 595.477 666.762 600.255 669.339 cv
605.033 671.915 622.553 679.137 625.409 685.098 cv
627.413 689.277 624.671 697.525 607.825 694.797 cv
590.978 692.069 585.211 682.978 580.104 681.918 cv
574.996 680.856 569.451 676.912 569.122 669.429 cv
568.792 661.944 571.865 663.279 571.206 660.552 cv
570.547 657.824 587.044 655.719 587.044 655.719 cv
cp
.321569 .47451 .678431 rgb
f
350.331 656.215 mo
350.331 656.215 342.734 666.762 337.956 669.339 cv
333.178 671.915 315.658 679.137 312.801 685.098 cv
310.798 689.277 313.539 697.525 330.386 694.797 cv
347.232 692.069 353 682.978 358.107 681.918 cv
363.215 680.856 368.76 676.912 369.089 669.429 cv
369.418 661.944 366.346 663.279 367.005 660.552 cv
367.665 657.824 350.331 656.215 350.331 656.215 cv
cp
f
519.667 336.555 mo
515.183 321.102 521.928 288.656 521.928 288.656 cv
513.221 284.901 502.012 288.191 497.202 288.191 cv
492.394 288.191 479.138 284.529 479.138 284.529 cv
468.416 284.529 li
457.694 284.529 li
457.694 284.529 444.438 288.191 439.629 288.191 cv
434.82 288.191 423.607 284.901 414.899 288.656 cv
414.899 288.656 421.666 321.649 417.182 337.104 cv
417.182 337.104 427.672 366.021 430.207 370.304 cv
432.74 374.585 430.239 390.398 430.152 394.385 cv
430.028 400.094 429.159 416.355 427.999 430.327 cv
427.999 430.327 440.858 437.985 468.416 438.638 cv
495.693 436.869 509.522 430.327 509.522 430.327 cv
507.796 413.688 506.682 399.678 505.996 394.261 cv
505.496 390.305 504.09 374.585 506.625 370.304 cv
509.159 366.021 519.667 336.555 519.667 336.555 cv
cp
.898039 .32549 .32549 rgb
f
548.386 287.941 mo
552.763 288.342 555.372 290.001 558.405 291.01 cv
558.251 291.346 558.098 291.675 557.937 292.004 cv
554.81 298.559 551.039 305.186 547.78 308.599 cv
541.963 314.708 541.678 315.687 537.06 321.95 cv
533.377 321.95 530.264 322.264 528.715 323.316 cv
525.689 325.362 522.109 331.968 520.311 335.564 cv
519.602 336.989 519.171 337.939 519.171 337.939 cv
519.171 337.939 519.047 337.332 518.856 336.251 cv
517.921 330.865 515.298 313.685 517.468 300.517 cv
518.243 295.812 519.631 291.624 521.925 288.656 cv
521.925 288.656 522.562 288.95 523.548 289.373 cv
525.923 290.395 530.351 292.172 532.807 292.347 cv
536.285 292.595 541.685 287.32 548.386 287.941 cv
cp
.933333 .658824 .52549 rgb
f
417.182 337.104 mo
417.182 337.104 416.822 336.294 416.215 335.06 cv
414.592 331.757 411.187 325.399 408.111 323.316 cv
406.51 322.234 403.251 321.928 399.415 321.95 cv
394.197 314.927 394.146 314.138 388.081 307.766 cv
384.822 304.354 381.051 297.725 377.923 291.17 cv
381.175 290.184 383.82 288.364 388.439 287.941 cv
395.14 287.32 400.54 292.595 404.019 292.347 cv
406.335 292.179 410.398 290.6 412.846 289.563 cv
414.074 289.044 414.899 288.656 414.899 288.656 cv
417.245 291.697 418.619 295.971 419.35 300.744 cv
421.382 314.171 418.283 334.614 417.182 337.104 cv
cp
f
482.068 267.052 mo
482.068 267.052 480.616 278.5 483.979 285.413 cv
483.979 285.413 487.416 300.43 470.772 301.526 cv
454.13 302.625 453.417 287.706 453.417 287.706 cv
453.417 287.706 457.285 282.268 454.304 267.766 cv
451.322 253.264 482.068 267.052 482.068 267.052 cv
cp
f
470.866 208.149 mo
470.866 208.149 492.34 211.117 489.838 245.343 cv
487.337 279.569 468.389 277.185 467.126 277.178 cv
465.863 277.172 448.181 278.218 445.877 236.548 cv
445.877 236.548 444.592 205.725 470.866 208.149 cv
cp
f
489.653 235.688 mo
489.653 235.688 491.931 233.083 492.844 235.65 cv
493.757 238.216 490.105 249.435 489.838 250.376 cv
489.838 250.376 489.435 251.388 488.862 250.849 cv
488.29 250.309 489.653 235.688 489.653 235.688 cv
cp
f
446.252 236.214 mo
446.252 236.214 443.909 233.666 443.062 236.253 cv
442.214 238.84 446.243 250.469 446.438 250.901 cv
446.438 250.901 446.867 251.902 447.426 251.35 cv
447.984 250.796 446.252 236.214 446.252 236.214 cv
cp
f
490.062 240.928 mo
487.091 245.172 li
487.091 245.172 486.974 236.01 486.451 234.586 cv
485.928 233.161 486.89 228.136 486.456 227.109 cv
486.021 226.084 471.882 230.247 448.501 228.392 cv
448.501 228.392 451.278 236.586 449.771 237.206 cv
448.263 237.826 449.233 247.951 449.233 247.951 cv
446.649 245.106 li
446.649 245.106 443.422 227.845 443.635 224.948 cv
443.917 221.09 442.209 203.145 475.104 205.508 cv
478.87 205.779 482.508 207.071 485.562 209.34 cv
488.993 211.889 492.552 215.906 492.359 221.536 cv
492.104 228.977 490.062 240.928 490.062 240.928 cv
cp
.909804 .45098 .301961 rgb
f
455.683 271.932 mo
455.683 271.932 465.417 282.803 480.238 271.391 cv
480.238 271.391 476.2 279.89 467.348 280.281 cv
458.495 280.674 455.683 271.932 455.683 271.932 cv
cp
.654902 .470588 .376471 rgb
f
442.861 287.887 mo
442.861 287.887 443.373 326.92 468.416 328.129 cv
468.416 283.35 li
468.416 283.35 456.78 283.766 442.861 287.887 cv
cp
.933333 .658824 .52549 rgb
f
493.971 287.887 mo
493.971 287.887 493.458 326.92 468.416 328.129 cv
468.416 283.35 li
468.416 283.35 480.052 283.766 493.971 287.887 cv
cp
f
568.03 161.896 mo
568.03 161.896 567.503 171.697 570.181 173.91 cv
572.859 176.122 573.263 172.594 573.263 172.594 cv
573.263 172.594 572.799 176.077 575.773 176.684 cv
578.748 177.292 578.982 173.139 578.982 173.139 cv
578.982 173.139 579.401 175.859 582.552 175.446 cv
585.703 175.033 585.046 171.555 585.046 171.555 cv
585.046 171.555 587.954 175.068 589.982 171.912 cv
593.408 166.581 590.415 159.971 590.415 159.971 cv
590.415 159.971 589.529 158.444 586.525 159.037 cv
586.525 159.037 584.628 155.146 580.09 157.676 cv
580.09 157.676 575.578 155.092 573.812 158.829 cv
573.812 158.829 568.831 156.34 568.03 161.896 cv
cp
.839216 .572549 .435294 rgb
f
367.652 161.896 mo
367.652 161.896 368.18 171.697 365.502 173.91 cv
362.824 176.122 362.42 172.594 362.42 172.594 cv
362.42 172.594 362.884 176.077 359.909 176.684 cv
356.936 177.292 356.701 173.139 356.701 173.139 cv
356.701 173.139 356.282 175.859 353.13 175.446 cv
349.979 175.033 350.636 171.555 350.636 171.555 cv
350.636 171.555 347.729 175.068 345.7 171.912 cv
342.274 166.581 345.268 159.971 345.268 159.971 cv
345.268 159.971 346.154 158.444 349.158 159.037 cv
349.158 159.037 351.055 155.146 355.593 157.676 cv
355.593 157.676 360.104 155.092 361.871 158.829 cv
361.871 158.829 366.853 156.34 367.652 161.896 cv
cp
f
663.427 231.639 mo
644.209 231.639 li
644.209 104.661 li
663.427 104.661 li
663.427 231.639 li
cp
.321569 .47451 .678431 rgb
f
682.644 218.729 mo
661.771 218.729 li
661.771 117.57 li
682.644 117.57 li
682.644 218.729 li
cp
f
701.862 205.087 mo
680.501 205.087 li
680.501 131.211 li
701.862 131.211 li
701.862 205.087 li
cp
f
274.784 231.639 mo
294.002 231.639 li
294.002 104.661 li
274.784 104.661 li
274.784 231.639 li
cp
f
255.566 218.729 mo
278.293 218.729 li
278.293 117.57 li
255.566 117.57 li
255.566 218.729 li
cp
f
236.349 205.087 mo
257.861 205.087 li
257.861 131.211 li
236.349 131.211 li
236.349 205.087 li
cp
f
1196.46 433.486 mo
1196.46 433.486 1199.44 441.448 1200.75 443.995 cv
1202.05 446.543 1230.01 499.99 1232.4 512.518 cv
1234.79 525.043 1243.94 554.815 1246.33 558.422 cv
1248.72 562.032 1256.53 585.173 1260.44 604.279 cv
1264.35 623.386 1272.6 656.079 1274.33 660.112 cv
1276.07 664.146 1259.36 664.358 1259.36 664.358 cv
1259.36 664.358 1235.04 615.955 1229.62 607.039 cv
1224.19 598.123 1219.2 582.838 1218.55 573.072 cv
1217.89 563.306 1210.95 558.211 1204.87 550.78 cv
1198.79 543.35 1169.49 487.092 1164.06 481.996 cv
1158.63 476.901 1155.27 477.3 1155.27 477.3 cv
1155.27 436.512 li
1196.46 433.486 li
cp
.184314 .270588 .388235 rgb
f
1115.91 433.486 mo
1115.91 433.486 1112.92 441.448 1111.62 443.995 cv
1110.32 446.543 1079.22 503.265 1076.84 515.79 cv
1074.45 528.316 1068.42 554.815 1066.04 558.422 cv
1063.65 562.032 1055.83 585.173 1051.93 604.279 cv
1048.02 623.386 1039.77 656.079 1038.03 660.112 cv
1036.3 664.146 1053.01 664.358 1053.01 664.358 cv
1053.01 664.358 1077.32 615.955 1082.75 607.039 cv
1088.18 598.123 1093.17 582.838 1093.82 573.072 cv
1094.47 563.306 1101.42 558.211 1107.5 550.78 cv
1113.57 543.35 1142.88 487.092 1148.3 481.996 cv
1153.73 476.901 1157.2 477.3 1157.2 477.3 cv
1157.1 436.512 li
1115.91 433.486 li
cp
f
1275.39 657.973 mo
1275.39 657.973 1281.39 667.104 1286.11 669.648 cv
1290.83 672.194 1308.14 679.33 1310.96 685.219 cv
1312.94 689.351 1310.24 697.499 1293.59 694.804 cv
1276.94 692.107 1271.25 683.126 1266.2 682.078 cv
1261.15 681.029 1255.67 677.132 1255.35 669.737 cv
1255.02 662.343 1258.06 663.662 1257.41 660.967 cv
1256.76 658.272 1275.39 657.973 1275.39 657.973 cv
cp
.858824 .87451 .941176 rgb
f
1037.66 657.973 mo
1037.66 657.973 1031.66 667.104 1026.94 669.648 cv
1022.22 672.194 1004.9 679.33 1002.08 685.219 cv
1000.1 689.351 1002.81 697.499 1019.46 694.804 cv
1036.1 692.107 1041.8 683.126 1046.85 682.078 cv
1051.89 681.029 1057.37 677.132 1057.7 669.737 cv
1058.03 662.343 1054.99 663.662 1055.64 660.967 cv
1056.29 658.272 1037.66 657.973 1037.66 657.973 cv
cp
f
1206.48 340.831 mo
1202.05 325.561 1208.72 293.503 1208.72 293.503 cv
1200.11 289.792 1189.04 293.043 1184.29 293.043 cv
1179.53 293.043 1166.44 289.425 1166.44 289.425 cv
1155.84 289.425 li
1145.25 289.425 li
1145.25 289.425 1132.15 293.043 1127.4 293.043 cv
1122.65 293.043 1111.57 289.792 1102.97 293.503 cv
1102.97 293.503 1109.65 326.104 1105.22 341.375 cv
1105.22 341.375 1115.58 369.946 1118.09 374.178 cv
1120.59 378.409 1118.12 394.034 1118.03 397.971 cv
1117.91 403.614 1117.05 419.681 1115.91 433.486 cv
1115.91 433.486 1128.61 441.053 1155.84 441.697 cv
1182.79 439.949 1196.46 433.486 1196.46 433.486 cv
1194.75 417.044 1193.65 403.203 1192.97 397.85 cv
1192.48 393.939 1191.09 378.409 1193.6 374.178 cv
1196.1 369.946 1206.48 340.831 1206.48 340.831 cv
cp
.898039 .32549 .32549 rgb
f
1208.72 293.503 mo
1208.72 293.503 1216.03 296.908 1219.47 297.152 cv
1222.9 297.398 1228.24 292.185 1234.86 292.798 cv
1241.48 293.411 1244 296.908 1250.19 296.601 cv
1256.39 296.294 1258.53 295.029 1258.96 292.749 cv
1259.39 290.469 1267.3 276.425 1263.99 257.168 cv
1260.68 237.912 1270 243.799 1270 243.799 cv
1270 243.799 1279.08 260.235 1280.92 278.387 cv
1282.76 296.54 1276.99 314.324 1276.75 316.777 cv
1276.5 319.231 1275.15 322.91 1273.43 323.891 cv
1271.72 324.872 1250.05 326.711 1242.56 327.079 cv
1235.08 327.448 1219.59 324.933 1215.42 327.754 cv
1211.25 330.574 1205.99 342.201 1205.99 342.201 cv
1205.99 342.201 1198.82 306.291 1208.72 293.503 cv
cp
.933333 .658824 .52549 rgb
f
1102.96 293.503 mo
1102.96 293.503 1095.65 296.908 1092.21 297.152 cv
1088.78 297.398 1083.44 292.185 1076.82 292.798 cv
1070.2 293.411 1067.68 296.908 1061.49 296.601 cv
1055.29 296.294 1053.15 295.029 1052.72 292.749 cv
1052.29 290.469 1044.38 276.425 1047.69 257.168 cv
1051 237.912 1041.68 243.799 1041.68 243.799 cv
1041.68 243.799 1032.6 260.235 1030.76 278.387 cv
1028.92 296.54 1034.69 314.324 1034.93 316.777 cv
1035.18 319.231 1036.53 322.91 1038.25 323.891 cv
1039.96 324.872 1061.63 326.711 1069.12 327.079 cv
1076.6 327.448 1092.09 324.933 1096.26 327.754 cv
1100.43 330.574 1105.22 341.375 1105.22 341.375 cv
1105.22 341.375 1112.85 306.291 1102.96 293.503 cv
cp
f
1169.33 272.156 mo
1169.33 272.156 1167.71 282.3 1171.03 289.13 cv
1171.03 289.13 1174.62 305.137 1158.17 306.221 cv
1141.73 307.305 1141.02 292.564 1141.02 292.564 cv
1141.02 292.564 1144.84 287.191 1141.9 272.862 cv
1138.95 258.533 1169.33 272.156 1169.33 272.156 cv
cp
f
1158.04 213.956 mo
1158.04 213.956 1179.17 216.888 1176.71 250.707 cv
1174.25 284.524 1155.6 282.168 1154.35 282.162 cv
1153.11 282.156 1135.71 283.19 1133.44 242.016 cv
1133.44 242.016 1132.17 211.561 1158.04 213.956 cv
cp
f
1176.83 241.168 mo
1176.83 241.168 1179.08 238.593 1179.98 241.129 cv
1180.88 243.664 1177.27 254.75 1177.01 255.679 cv
1177.01 255.679 1176.61 256.68 1176.04 256.146 cv
1175.48 255.613 1176.83 241.168 1176.83 241.168 cv
cp
f
1133.94 241.687 mo
1133.94 241.687 1131.63 239.168 1130.79 241.724 cv
1129.95 244.282 1133.93 255.771 1134.13 256.199 cv
1134.13 256.199 1134.55 257.189 1135.1 256.642 cv
1135.65 256.095 1133.94 241.687 1133.94 241.687 cv
cp
f
1176.93 246.343 mo
1174.01 250.538 li
1174.01 250.538 1173.89 241.486 1173.38 240.079 cv
1172.86 238.669 1173.81 233.703 1173.38 232.691 cv
1172.95 231.677 1159.04 235.791 1136.02 233.958 cv
1136.02 233.958 1138.75 242.056 1137.27 242.668 cv
1135.79 243.279 1136.74 253.283 1136.74 253.283 cv
1134.2 250.473 li
1134.2 250.473 1131.02 233.418 1131.23 230.555 cv
1131.51 226.744 1129.83 209.011 1162.21 211.347 cv
1165.91 211.613 1169.5 212.891 1172.5 215.132 cv
1175.88 217.65 1179.38 221.62 1179.19 227.184 cv
1178.94 234.535 1176.93 246.343 1176.93 246.343 cv
cp
.988235 .8 .635294 rgb
f
1143.26 276.978 mo
1143.26 276.978 1152.88 287.72 1167.52 276.443 cv
1167.52 276.443 1163.53 284.841 1154.79 285.228 cv
1146.04 285.615 1143.26 276.978 1143.26 276.978 cv
cp
.654902 .470588 .376471 rgb
f
1130.59 292.743 mo
1130.59 292.743 1131.1 331.31 1155.84 332.507 cv
1155.84 288.26 li
1155.84 288.26 1144.34 288.671 1130.59 292.743 cv
cp
.933333 .658824 .52549 rgb
f
1181.09 292.743 mo
1181.09 292.743 1180.59 331.31 1155.84 332.507 cv
1155.84 288.26 li
1155.84 288.26 1167.34 288.671 1181.09 292.743 cv
cp
f
1283.71 246.314 mo
1283.71 261.453 1271.43 273.727 1256.29 273.727 cv
1241.15 273.727 1228.88 261.453 1228.88 246.314 cv
1228.88 231.174 1241.15 218.901 1256.29 218.901 cv
1271.43 218.901 1283.71 231.174 1283.71 246.314 cv
cp
.262745 .262745 .262745 rgb
f
1269.63 246.314 mo
1269.63 253.68 1263.66 259.653 1256.29 259.653 cv
1248.93 259.653 1242.95 253.68 1242.95 246.314 cv
1242.95 238.947 1248.93 232.974 1256.29 232.974 cv
1263.66 232.974 1269.63 238.947 1269.63 246.314 cv
cp
.419608 .419608 .419608 rgb
f
1083.35 246.314 mo
1083.35 261.453 1071.08 273.727 1055.94 273.727 cv
1040.8 273.727 1028.52 261.453 1028.52 246.314 cv
1028.52 231.174 1040.8 218.901 1055.94 218.901 cv
1071.08 218.901 1083.35 231.174 1083.35 246.314 cv
cp
.262745 .262745 .262745 rgb
f
1069.27 246.314 mo
1069.27 253.68 1063.3 259.653 1055.94 259.653 cv
1048.57 259.653 1042.6 253.68 1042.6 246.314 cv
1042.6 238.947 1048.57 232.974 1055.94 232.974 cv
1063.3 232.974 1069.27 238.947 1069.27 246.314 cv
cp
.419608 .419608 .419608 rgb
f
146.365 267.634 mo
146.365 267.634 141.083 246.525 154.125 235.854 cv
167.167 225.184 181.632 228.979 188.863 235.854 cv
196.096 242.731 205.002 256.679 196.703 276.479 cv
188.403 296.278 186.611 291.579 190.287 306.163 cv
193.961 320.745 198.467 330.823 191.116 337.462 cv
183.766 344.102 172.384 342.324 171.316 334.024 cv
170.249 325.725 169.29 296.208 168.525 291.878 cv
167.76 287.548 146.365 267.634 146.365 267.634 cv
cp
.109804 .254902 .329412 rgb
f
175.073 302.979 mo
175.073 302.979 190.181 308.844 195.69 309.555 cv
201.199 310.265 199.173 326.617 199.173 326.617 cv
199.173 326.617 203.121 337.924 202.843 345.3 cv
202.471 355.228 197.822 357.896 197.467 358.607 cv
197.112 359.318 193.024 382.778 192.669 386.866 cv
192.313 390.954 193.812 396.197 194.741 399.572 cv
195.787 403.364 199.158 417.328 199.158 417.328 cv
199.158 417.328 171.361 425.729 129.417 418.087 cv
129.417 418.087 132.155 407.253 133.145 401.897 cv
133.68 399.004 135.263 393.441 134.552 388.11 cv
133.841 382.778 127.976 360.384 127.798 358.251 cv
127.621 356.119 116.068 344.389 126.376 330.349 cv
126.376 330.349 129.042 315.775 129.753 311.865 cv
129.753 311.865 147.704 303.689 152.502 302.979 cv
157.301 302.268 175.073 302.979 175.073 302.979 cv
cp
.933333 .658824 .52549 rgb
f
195.69 309.555 mo
195.69 309.555 202.977 309.777 208.442 313.775 cv
213.907 317.774 217.639 334.036 218.573 336.703 cv
219.505 339.368 229.636 356.164 231.368 361.496 cv
233.102 366.827 234.035 370.159 234.834 369.893 cv
235.634 369.626 246.284 352.941 247.897 348.899 cv
249.728 344.312 256.961 324.306 256.961 324.306 cv
264.67 338.636 li
265.181 339.831 li
265.181 339.831 257.762 359.896 255.496 367.094 cv
253.229 374.292 247.897 391.22 245.365 393.486 cv
242.833 395.752 233.102 398.951 227.903 394.819 cv
222.705 390.687 210.575 371.359 207.509 364.828 cv
204.443 358.296 198.444 347.766 198.444 347.766 cv
198.444 347.766 188.804 316.397 195.69 309.555 cv
cp
f
129.753 311.865 mo
129.753 311.865 122.066 311.776 118.468 314.975 cv
114.869 318.174 108.07 325.905 106.471 332.704 cv
104.872 339.501 103.938 351.765 101.806 358.43 cv
99.6729 365.094 93.6748 382.289 90.6089 388.554 cv
87.543 394.819 84.7441 420.945 82.8779 427.21 cv
81.0117 433.475 74.1694 454.357 74.1694 454.357 cv
85.0107 459.867 li
85.0107 459.867 107.004 411.614 109.137 404.283 cv
111.27 396.952 111.67 388.021 113.669 382.556 cv
115.668 377.091 124.466 357.007 125.799 353.187 cv
127.132 349.365 142.105 313.554 129.753 311.865 cv
cp
f
128.275 421.237 mo
128.275 421.237 124.503 429.035 122.021 434.38 cv
119.539 439.725 110.19 462.305 106.456 477.927 cv
102.722 493.548 94.4941 521.01 93.4307 528.855 cv
92.3677 536.7 88.6387 548.52 85.0181 554.802 cv
81.3979 561.084 73.0532 579.597 71.5649 591.617 cv
70.0757 603.637 60.7168 656.603 60.7168 656.603 cv
60.7168 656.603 66.0493 661.614 75.9673 655.615 cv
75.9673 655.615 94.4653 606.032 98.7798 598.84 cv
103.094 591.649 109.808 572.724 110.753 565.751 cv
111.698 558.777 118.661 551.241 125.043 535.275 cv
131.427 519.31 157.314 473.568 160.942 464.175 cv
160.942 464.175 162.188 460.367 165.786 461.568 cv
164.407 421.186 li
128.275 421.237 li
cp
.156863 .317647 .45098 rgb
f
200.178 420.651 mo
200.178 420.651 204.232 429.035 206.714 434.38 cv
209.197 439.725 219.632 463.154 223.367 478.775 cv
227.102 494.397 234.242 521.01 235.305 528.855 cv
236.368 536.7 240.098 548.52 243.717 554.802 cv
247.338 561.084 255.684 579.597 257.172 591.617 cv
258.66 603.637 268.02 656.603 268.02 656.603 cv
268.02 656.603 262.687 661.614 252.769 655.615 cv
252.769 655.615 234.271 606.032 229.957 598.84 cv
225.642 591.649 218.928 572.724 217.983 565.751 cv
217.038 558.777 210.076 551.241 203.692 535.275 cv
197.309 519.31 171.422 473.568 167.793 464.175 cv
167.793 464.175 166.887 460.076 162.662 461.652 cv
128.037 421.729 li
200.178 420.651 li
cp
f
151.161 243.977 mo
151.161 243.977 142.625 257.492 147.959 276.344 cv
153.295 295.195 160.935 296.393 167.237 294.483 cv
174.884 292.167 182.202 276.227 183.447 269.113 cv
184.692 261.999 189.437 244.91 171.08 242.731 cv
162.655 241.731 154.125 242.018 151.161 243.977 cv
cp
.933333 .658824 .52549 rgb
f
173.563 289.027 mo
173.563 289.027 173.422 309.528 176.229 315.242 cv
179.036 320.955 150.924 317.425 150.924 317.425 cv
150.924 317.425 154.373 294.259 153.13 288.699 cv
151.888 283.14 173.563 289.027 173.563 289.027 cv
cp
f
146.207 263.954 mo
146.207 263.954 153.176 247.592 160.053 248.185 cv
160.053 248.185 173.477 265.681 185.261 272.465 cv
185.261 272.465 199.772 248.66 165.625 238.345 cv
165.625 238.345 144.927 230.163 146.207 263.954 cv
cp
.109804 .254902 .329412 rgb
f
154.485 290.563 mo
154.485 290.563 158.966 295.964 163.879 295.12 cv
168.794 294.274 171.561 291.839 171.561 291.839 cv
171.561 291.839 169.301 297.218 163.343 297.218 cv
158.23 297.218 154.485 290.563 154.485 290.563 cv
cp
.654902 .470588 .376471 rgb
f
188.264 307.65 mo
188.264 307.65 197.023 321.918 199.173 326.617 cv
199.173 326.617 210.708 348.432 197.467 358.607 cv
197.467 358.607 196.084 370.011 193.732 379.482 cv
193.732 379.482 164.55 373.5 132.978 380.427 cv
132.978 380.427 127.798 360.874 127.798 358.251 cv
127.798 358.251 115.357 343.056 126.376 330.349 cv
126.376 330.349 136.172 310.521 136.983 308.683 cv
136.983 308.683 159.289 294.459 188.264 307.65 cv
cp
.921569 .278431 .278431 rgb
f
299.523 318.504 mo
299.523 330.282 291.248 339.831 281.04 339.831 cv
270.833 339.831 262.557 330.282 262.557 318.504 cv
262.557 306.725 270.833 297.176 281.04 297.176 cv
291.248 297.176 299.523 306.725 299.523 318.504 cv
cp
.819608 .752941 .729412 rgb
f
289.564 319.863 mo
289.564 325.779 285.409 330.574 280.281 330.574 cv
275.155 330.574 270.999 325.779 270.999 319.863 cv
270.999 313.947 275.155 309.152 280.281 309.152 cv
285.409 309.152 289.564 313.947 289.564 319.863 cv
cp
.580392 .533333 .517647 rgb
f
265.181 339.831 mo
265.181 339.831 271.313 332.393 274.956 330.083 cv
278.6 327.771 282.332 324.395 281.888 320.84 cv
281.443 317.286 277.711 308.932 275.401 308.666 cv
273.09 308.399 264.47 311.243 264.47 311.243 cv
256.961 324.306 li
265.181 339.831 li
cp
.933333 .658824 .52549 rgb
f
273.712 316.486 mo
273.712 328.265 265.437 337.813 255.229 337.813 cv
245.021 337.813 236.745 328.265 236.745 316.486 cv
236.745 304.708 245.021 295.158 255.229 295.158 cv
265.437 295.158 273.712 304.708 273.712 316.486 cv
cp
.929412 .854902 .827451 rgb
f
264.03 316.486 mo
264.03 322.828 259.574 327.97 254.078 327.97 cv
248.581 327.97 244.125 322.828 244.125 316.486 cv
244.125 310.144 248.581 305.002 254.078 305.002 cv
259.574 305.002 264.03 310.144 264.03 316.486 cv
cp
.8 .733333 .709804 rgb
f
147.825 304.185 mo
147.825 304.185 132.597 337.769 161.655 338.702 cv
190.713 339.635 179.466 307.258 178.666 304.154 cv
178.666 304.154 166.632 296.656 147.825 304.185 cv
cp
.933333 .658824 .52549 rgb
f
77.5898 651.293 mo
77.5898 651.293 75.9463 652.745 73.6807 652.479 cv
71.4146 652.212 64.7495 649.413 61.8169 650.613 cv
58.8843 651.813 57.2852 664.875 51.5532 668.074 cv
45.8218 671.273 28.627 681.271 29.5601 689.802 cv
30.502 698.414 53.686 696.066 59.6841 689.002 cv
65.6826 681.938 70.8809 685.403 75.6797 680.471 cv
80.4785 675.539 76.856 656.195 77.5898 651.293 cv
cp
.8 .733333 .709804 rgb
f
251.109 651.192 mo
251.109 651.192 252.848 652.745 255.114 652.479 cv
257.38 652.212 264.045 649.413 266.977 650.613 cv
269.91 651.813 271.509 664.875 277.24 668.074 cv
282.972 671.273 300.167 681.271 299.234 689.802 cv
298.292 698.414 275.107 696.066 269.109 689.002 cv
263.111 681.938 257.913 685.403 253.114 680.471 cv
248.315 675.539 251.842 656.095 251.109 651.192 cv
cp
f
129.417 418.087 mo
129.417 418.087 161.216 418.773 199.158 417.328 cv
200.819 421.98 li
200.819 421.98 172.777 427.308 127.634 422.565 cv
129.417 418.087 li
cp
.231373 .470588 .670588 rgb
f
76.8853 450.047 mo
76.8853 450.047 74.5859 452.399 73.8379 454.548 cv
73.2451 456.249 71.1484 458.545 70.1631 459.849 cv
69.1782 461.152 65.5449 467.22 65.0537 468.89 cv
64.853 469.572 65.3091 474.229 64.7471 475.573 cv
64.1851 476.919 62.708 479.511 63.9072 479.945 cv
65.1064 480.382 67.0771 478.411 67.0771 478.411 cv
67.0771 478.411 66.6421 479.666 67.5742 480.368 cv
69.3857 481.733 70.6772 481.117 70.6772 481.117 cv
70.6772 481.117 71.0835 482.677 71.9849 483.059 cv
73.9717 483.9 75.2036 483.269 75.2036 483.269 cv
75.2036 483.269 75.9292 484.244 77.3804 484.509 cv
79.2368 484.849 80.4106 483.405 80.4106 483.405 cv
80.4106 483.405 82.6323 484.355 83.583 483.397 cv
84.5337 482.44 84.7051 481.25 85.2324 480.314 cv
85.7598 479.38 88.1777 470.354 86.7432 463.288 cv
85.3091 456.224 89.3433 450.301 89.3433 450.301 cv
76.8853 450.047 li
cp
.933333 .658824 .52549 rgb
f
92.0371 481.936 mo
58.1558 473.767 li
59.6553 467.548 li
93.5366 475.716 li
92.0371 481.936 li
cp
.819608 .752941 .729412 rgb
f
66.957 477.504 mo
66.957 477.504 68.7432 469.426 71.2773 468.143 cv
73.8115 466.859 73.3311 469.809 73.3311 469.809 cv
73.3311 469.809 73.7563 466.885 76.1577 466.965 cv
78.5596 467.045 77.811 470.47 77.811 470.47 cv
77.811 470.47 78.7373 468.337 81.0464 469.282 cv
83.3555 470.227 82.0791 472.931 82.0791 472.931 cv
82.0791 472.931 85.0781 470.634 85.9194 473.596 cv
87.3394 478.595 83.583 483.397 83.583 483.397 cv
83.583 483.397 82.5674 484.468 80.4106 483.405 cv
80.4106 483.405 78.0957 486.206 75.2036 483.269 cv
75.2036 483.269 71.189 484.5 70.6772 481.117 cv
70.6772 481.117 66.3257 482.181 66.957 477.504 cv
cp
.858824 .611765 .486275 rgb
f
56.124 491.905 mo
52.2153 491.016 li
50.6147 490.651 49.6128 489.059 49.9771 487.458 cv
58.1294 451.646 li
58.4941 450.046 60.0869 449.044 61.6875 449.408 cv
65.5962 450.299 li
67.1968 450.663 68.1987 452.256 67.8345 453.856 cv
59.6812 489.668 li
59.3169 491.269 57.7241 492.271 56.124 491.905 cv
cp
.929412 .854902 .827451 rgb
f
90.0049 500.075 mo
86.0962 499.185 li
84.4956 498.819 83.4937 497.227 83.8579 495.626 cv
92.0112 459.815 li
92.3755 458.215 93.9683 457.213 95.5688 457.577 cv
99.4775 458.467 li
101.078 458.831 102.08 460.424 101.715 462.024 cv
93.5625 497.838 li
93.1982 499.438 91.605 500.439 90.0049 500.075 cv
cp
f
1462.65 292.049 mo
1462.65 292.049 1478.62 325.721 1467.62 327.735 cv
1452.53 330.5 1446.42 302.61 1446.42 302.61 cv
1462.65 292.049 li
cp
.0862745 .2 .258824 rgb
f
1465.53 325.281 mo
1465.53 325.281 1474.16 318.484 1477.83 314.812 cv
1481.5 311.141 1497.73 285.091 1501 280.03 cv
1504.28 274.969 1508 264.996 1510.23 260.679 cv
1512.46 256.363 1534.5 223.168 1534.5 223.168 cv
1542.98 226.741 li
1542.98 226.741 1527.8 265.145 1523.93 271.545 cv
1520.06 277.946 1516.19 290.896 1513.21 296.553 cv
1510.23 302.209 1494.16 324.983 1491.33 330.194 cv
1488.5 335.404 1485.81 345.566 1485.81 345.566 cv
1485.81 345.566 1461.7 339.323 1465.53 325.281 cv
cp
.556863 .309804 .227451 rgb
f
1433.83 308.014 mo
1433.83 308.014 1435.41 319.808 1434.62 327.928 cv
1433.83 336.049 1456.85 330.094 1456.85 330.094 cv
1456.85 330.094 1455.56 312.431 1457.54 306.079 cv
1459.53 299.729 1433.83 308.014 1433.83 308.014 cv
cp
f
1410.74 428.395 mo
1410.74 428.395 1407.64 436.054 1405.6 441.298 cv
1403.57 446.542 1393.82 467.883 1391.15 483.036 cv
1388.49 498.188 1384.47 525.667 1383.89 533.235 cv
1383.31 540.805 1380.45 552.314 1377.41 558.514 cv
1374.36 564.714 1367.56 582.865 1366.79 594.455 cv
1366.03 606.045 1360.05 657.256 1360.05 657.256 cv
1360.05 657.256 1365.27 661.791 1374.18 655.549 cv
1374.18 655.549 1388.82 607.123 1392.46 600.018 cv
1396.1 592.912 1401.37 574.447 1401.89 567.719 cv
1402.41 560.991 1408.49 553.424 1413.6 537.81 cv
1418.71 522.195 1440.08 477.261 1442.16 468.366 cv
1442.16 468.366 1442.36 464.409 1447.68 465.162 cv
1444.32 426.543 li
1410.74 428.395 li
cp
.980392 .631373 .27451 rgb
f
1478.43 428.678 mo
1478.43 428.678 1481.75 436.919 1483.77 442.167 cv
1485.79 447.415 1495.51 468.773 1498.15 483.931 cv
1500.79 499.088 1504.75 526.574 1505.32 534.145 cv
1505.89 541.715 1508.73 553.229 1511.76 559.435 cv
1514.79 565.64 1521.56 583.804 1522.3 595.396 cv
1523.04 606.987 1528.93 658.208 1528.93 658.208 cv
1528.93 658.208 1523.71 662.734 1514.81 656.476 cv
1514.81 656.476 1500.25 608.022 1496.63 600.911 cv
1493 593.799 1487.76 575.324 1487.26 568.595 cv
1486.75 561.866 1480.68 554.288 1475.6 538.663 cv
1470.51 523.04 1448.89 477.886 1446.02 468.7 cv
1446.02 468.7 1445.39 464.806 1441.38 466.02 cv
1411.33 425.989 li
1478.43 428.678 li
cp
f
1375.41 651.512 mo
1375.41 651.512 1374.02 652.967 1371.9 652.833 cv
1369.78 652.698 1363.45 650.429 1360.78 651.689 cv
1358.12 652.951 1357.28 665.172 1352.11 668.432 cv
1346.94 671.691 1331.46 681.841 1332.75 689.724 cv
1334.06 697.682 1355.49 694.343 1360.71 687.478 cv
1365.94 680.611 1370.94 683.573 1375.16 678.75 cv
1379.37 673.927 1374.97 656.105 1375.41 651.512 cv
cp
.921569 .443137 .443137 rgb
f
1513.61 652.515 mo
1513.61 652.515 1515.02 653.897 1517.14 653.767 cv
1519.26 653.636 1525.6 651.378 1528.26 652.645 cv
1530.93 653.911 1531.74 666.133 1536.9 669.402 cv
1542.06 672.671 1557.53 682.849 1556.22 690.729 cv
1554.9 698.686 1533.47 695.307 1528.26 688.431 cv
1523.05 681.556 1518.04 684.509 1513.84 679.678 cv
1509.63 674.847 1514.04 657.108 1513.61 652.515 cv
cp
f
1426.91 276.83 mo
1426.91 276.83 1424.8 274.307 1424.02 276.848 cv
1423.24 279.39 1425.8 286.943 1426.09 288.037 cv
1426.09 288.037 1427.36 292.276 1427.87 291.734 cv
1428.38 291.193 1426.91 276.83 1426.91 276.83 cv
cp
.556863 .309804 .227451 rgb
f
1463.61 277.144 mo
1463.61 277.144 1465.71 274.621 1466.49 277.163 cv
1467.28 279.704 1464.71 287.256 1464.43 288.351 cv
1464.43 288.351 1463.16 292.59 1462.65 292.049 cv
1462.14 291.508 1463.61 277.144 1463.61 277.144 cv
cp
f
1448.55 252.677 mo
1448.55 252.677 1467.84 255.646 1465.02 286.025 cv
1462.19 316.403 1445.17 313.992 1444.04 313.966 cv
1442.9 313.941 1426.96 314.598 1425.58 277.53 cv
1425.58 277.53 1424.94 250.118 1448.55 252.677 cv
cp
f
1429.28 275.714 mo
1429.28 275.714 1450.69 282.08 1460.93 280.043 cv
1460.93 280.043 1461.59 283.824 1463.06 284.057 cv
1464.53 284.29 1465.28 276.83 1465.28 276.83 cv
1465.28 276.83 1465.78 252.126 1443.44 251.894 cv
1421.09 251.662 1425.63 278.652 1425.63 278.652 cv
1425.93 283.265 li
1425.93 283.265 1429.13 284.528 1429.28 275.714 cv
cp
.0862745 .2 .258824 rgb
f
1436.45 311.067 mo
1436.45 311.067 1443.21 317.465 1453.59 311.593 cv
1453.59 311.593 1450.52 316.72 1444.7 316.59 cv
1438.88 316.461 1436.45 311.067 1436.45 311.067 cv
cp
.388235 .188235 .160784 rgb
f
1456.48 321.822 mo
1456.48 321.822 1462.85 324.835 1465.53 325.281 cv
1468.21 325.729 1485.92 340.167 1486.52 341.655 cv
1487.11 343.144 1482.35 355.35 1480.56 361.006 cv
1478.78 366.662 1471.09 400.75 1471.81 403.132 cv
1472.53 405.514 1479.19 429.426 1479.5 431.353 cv
1433.16 440.48 1409.02 432.661 1409.02 432.661 cv
1409.02 432.661 1416.86 409.532 1416.56 405.066 cv
1416.26 400.601 1411.94 375.296 1408.82 368.151 cv
1405.69 361.006 1400.48 342.995 1400.48 342.995 cv
1400.48 342.995 1420.73 327.217 1421.32 326.175 cv
1421.92 325.133 1432.06 323.196 1434.84 321.822 cv
1456.48 321.822 li
cp
.556863 .309804 .227451 rgb
f
1422.62 325.48 mo
1422.62 325.48 1412.89 318.484 1409.21 314.812 cv
1405.54 311.141 1389.32 285.091 1386.04 280.03 cv
1382.77 274.969 1379.05 264.996 1376.82 260.679 cv
1374.58 256.363 1352.55 223.168 1352.55 223.168 cv
1344.07 226.741 li
1344.07 226.741 1359.25 265.145 1363.12 271.545 cv
1366.99 277.946 1370.86 290.896 1373.84 296.553 cv
1376.82 302.209 1392.89 324.983 1395.72 330.194 cv
1398.55 335.404 1401.24 345.566 1401.24 345.566 cv
1401.24 345.566 1426.45 339.521 1422.62 325.48 cv
cp
f
1465.53 325.281 mo
1465.53 325.281 1475.3 355.378 1478.68 368.24 cv
1478.68 368.24 1473.54 391.253 1472.92 394.693 cv
1472.92 394.693 1444.09 389.141 1415.21 395.689 cv
1415.21 395.689 1408.98 368.63 1408.38 367.107 cv
1408.38 367.107 1418.26 349.494 1422.62 325.48 cv
1422.62 325.48 1426.35 323.291 1429.12 323.617 cv
1429.12 323.617 1426.38 353.712 1446.18 353.414 cv
1465.98 353.117 1459.9 323.343 1459.9 323.343 cv
1459.9 323.343 1463.46 324.251 1465.53 325.281 cv
cp
.980392 .631373 .27451 rgb
f
1357.45 230.583 mo
1357.45 230.583 1355.36 227.413 1355.23 225.401 cv
1355.13 223.758 1355.33 221.382 1355.29 219.889 cv
1355.25 218.396 1354.37 211.99 1353.76 210.518 cv
1353.52 209.916 1350.53 206.855 1350.16 205.574 cv
1349.79 204.294 1349.36 201.6 1348.26 201.975 cv
1347.15 202.35 1346.88 204.883 1346.88 204.883 cv
1346.88 204.883 1346.47 203.739 1345.4 203.771 cv
1343.33 203.833 1342.76 205.011 1342.76 205.011 cv
1342.76 205.011 1341.58 204.131 1340.72 204.374 cv
1338.82 204.91 1338.3 206.066 1338.3 206.066 cv
1338.3 206.066 1337.22 205.784 1336.04 206.425 cv
1334.52 207.245 1334.51 208.945 1334.51 208.945 cv
1334.51 208.945 1332.38 209.539 1332.25 210.765 cv
1332.12 211.992 1332.68 212.939 1332.84 213.908 cv
1332.99 214.876 1336.5 222.617 1341.49 226.917 cv
1345.55 230.413 1348.58 237.458 1348.58 237.458 cv
1357.45 230.583 li
cp
.556863 .309804 .227451 rgb
f
1327.05 216.643 mo
1355.89 203.094 li
1358.38 208.388 li
1329.54 221.937 li
1327.05 216.643 li
cp
.721569 .345098 .345098 rgb
f
1347.48 205.461 mo
1347.48 205.461 1350.83 212.246 1349.75 214.61 cv
1348.68 216.974 1347.33 214.596 1347.33 214.596 cv
1347.33 214.596 1348.7 216.925 1346.94 218.241 cv
1345.18 219.557 1343.76 216.686 1343.76 216.686 cv
1343.76 216.686 1344.32 218.737 1342.13 219.384 cv
1339.94 220.03 1339.31 217.371 1339.31 217.371 cv
1339.31 217.371 1338.48 220.725 1336.19 219.094 cv
1332.32 216.338 1332.25 210.765 1332.25 210.765 cv
1332.25 210.765 1332.36 209.421 1334.51 208.945 cv
1334.51 208.945 1334.56 205.625 1338.3 206.066 cv
1338.3 206.066 1340.46 202.891 1342.76 205.011 cv
1342.76 205.011 1345.26 201.764 1347.48 205.461 cv
cp
.411765 .227451 .168627 rgb
f
1347.56 188.706 mo
1349.68 187.679 li
1351.35 186.865 1353.37 187.564 1354.19 189.241 cv
1368.28 218.267 li
1369.09 219.944 1368.39 221.962 1366.71 222.775 cv
1364.6 223.803 li
1362.92 224.616 1360.9 223.917 1360.09 222.241 cv
1346 193.214 li
1345.19 191.538 1345.89 189.52 1347.56 188.706 cv
cp
.921569 .443137 .443137 rgb
f
1318.05 202.58 mo
1321.51 200.902 li
1322.82 200.269 1324.39 200.813 1325.02 202.119 cv
1339.76 232.488 li
1340.4 233.793 1339.85 235.366 1338.55 235.999 cv
1335.09 237.677 li
1333.78 238.311 1332.21 237.766 1331.58 236.46 cv
1316.83 206.091 li
1316.2 204.786 1316.75 203.213 1318.05 202.58 cv
cp
f
1529.59 230.583 mo
1529.59 230.583 1531.69 227.413 1531.82 225.401 cv
1531.92 223.758 1531.71 221.382 1531.76 219.889 cv
1531.8 218.396 1532.68 211.99 1533.28 210.518 cv
1533.53 209.916 1536.52 206.855 1536.89 205.574 cv
1537.25 204.294 1537.68 201.6 1538.79 201.975 cv
1539.89 202.35 1540.17 204.883 1540.17 204.883 cv
1540.17 204.883 1540.58 203.739 1541.64 203.771 cv
1543.72 203.833 1544.29 205.011 1544.29 205.011 cv
1544.29 205.011 1545.47 204.131 1546.33 204.374 cv
1548.23 204.91 1548.75 206.066 1548.75 206.066 cv
1548.75 206.066 1549.82 205.784 1551.01 206.425 cv
1552.53 207.245 1552.54 208.945 1552.54 208.945 cv
1552.54 208.945 1554.67 209.539 1554.8 210.765 cv
1554.93 211.992 1554.37 212.939 1554.21 213.908 cv
1554.05 214.876 1550.55 222.617 1545.55 226.917 cv
1541.49 230.413 1538.46 237.458 1538.46 237.458 cv
1529.59 230.583 li
cp
.556863 .309804 .227451 rgb
f
1559.99 216.643 mo
1531.15 203.094 li
1528.66 208.388 li
1557.5 221.937 li
1559.99 216.643 li
cp
.721569 .345098 .345098 rgb
f
1539.57 205.461 mo
1539.57 205.461 1536.22 212.246 1537.3 214.61 cv
1538.37 216.974 1539.71 214.596 1539.71 214.596 cv
1539.71 214.596 1538.34 216.925 1540.1 218.241 cv
1541.86 219.557 1543.29 216.686 1543.29 216.686 cv
1543.29 216.686 1542.73 218.737 1544.92 219.384 cv
1547.1 220.03 1547.74 217.371 1547.74 217.371 cv
1547.74 217.371 1548.56 220.725 1550.86 219.094 cv
1554.73 216.338 1554.8 210.765 1554.8 210.765 cv
1554.8 210.765 1554.69 209.421 1552.54 208.945 cv
1552.54 208.945 1552.49 205.625 1548.75 206.066 cv
1548.75 206.066 1546.59 202.891 1544.29 205.011 cv
1544.29 205.011 1541.79 201.764 1539.57 205.461 cv
cp
.411765 .227451 .168627 rgb
f
1539.49 188.706 mo
1537.37 187.679 li
1535.69 186.865 1533.67 187.564 1532.86 189.241 cv
1518.77 218.267 li
1517.96 219.944 1518.66 221.962 1520.33 222.775 cv
1522.45 223.803 li
1524.12 224.616 1526.14 223.917 1526.96 222.241 cv
1541.05 193.214 li
1541.86 191.538 1541.16 189.52 1539.49 188.706 cv
cp
.921569 .443137 .443137 rgb
f
1569 202.58 mo
1565.54 200.902 li
1564.23 200.269 1562.66 200.813 1562.03 202.119 cv
1547.28 232.488 li
1546.65 233.793 1547.2 235.366 1548.5 235.999 cv
1551.96 237.677 li
1553.27 238.311 1554.84 237.766 1555.47 236.46 cv
1570.21 206.091 li
1570.85 204.786 1570.3 203.213 1569 202.58 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Set of multiethnic people with weights.eps)
%%CreationDate: 5/2/2019 1:42 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]Mg[E@(BE!Ifg@!!]78W-n2Z1K1n&TW5S,UOctqP!/NU1EbC^9C?f+RqRuYBKuI83@?$>^"#i61o]=(0)9"$f.ZDQo+;k$
%'.<hHcgK\>rT:FfDglp1p4*&=B"RllfX@9VgL&^U+8slbrKgU#Iei(I531DO:VZo,jdWIQqVBn%?[hh4_qWd]hgP=lRton9G]WJW
%(Vd<6]X[c%?G:mep0Vb+?bcC.TC&/\?a`b%^O#kLq:g+c^\I(@jkGdCPWu_YqUOoXrpoC$s7,3_TASu[;dMZH<WDbc]:<.E5?$E'
%q;pcdqT[3e^9YecS+;,ZrJUREZf$u9q8kl!qW70PIJMF*(LOk%qrWD+1p6cEm2)D0Gk]Nk^AhsCp#!F[r/9/[^3[nF\)6&NS"E^[
%F8cdWgH4r@1=L*o[WM,IIC.`ekADr`NS?Y*Eq?W%l>;r1qH6;j^AO=!0E:_.2ui"$MpG_Do6.]lpXO1grL`f;WE),$rq9^tqWl`d
%hu2r3='sXen!$O(e?@_Xp@>V^EEqN!lPF@ZIa[bq+7V9ChYlm(=4Yo??[n'diN)hDX>Bk8`U@0.:Qs\sYJ,8Wk&9,U2a4=VNP1fe
%luq+#mG#lZod1.)U=igM?[#5bhgTEI#a^AeFS+Ht>F5?>]2uaop#bF^j.CIDPlAcXhS&dPkj4mZLAp25glBjU)1VR@mJXfrlK+L[
%"WM+c^H)gnmIjVr_6"g:I.m('F*,Egpj-i\k)G@sf5H0%^HK=#GBShH^[QH@i01p'CF?c@K+!2,d9l0_j-.6,rO)Up([p40rP^GI
%r:]Nu+8t9gZa]u0o#;a:h9-c9p89i6iE,pN\+o^k`N(Y@qFAh\p@>[NKoQQ=pTio\?<[6pV:qQUl0!eNduF<+mE][b["%gZ5MMf:
%Dfi,%2uiI>p"M-=s7l-H`LG1krpIb;0>>];r:T@lDdL)gi@hq.U\k?Y3SAV?mIp!d(Y\8pC4CQ=PAAbdS:iCngaPVa+7.:&n`jKJ
%BjOmhI&k;rJbR.,:VYm\4D):D+$JQSX)E'[s(7&#I:nc>Z^\`+a8]j\fM),5G'r&?Q\(/JZsN1?hmWD8dW&aPe]uR^^"]rEq>0d9
%e9>igh7ieo0E5]Y]_Lca9LZ^Do@]Jf^].3`M0qSdgZ&"Y7Cq$YBt3'urptVeqtej0TC]UV5Ke=cn.Fs5#(-%Jh:=CJ;YD?)n)i,C
%8WUl4)LdfdNc*cTZ];go<gU5=*bIRf[i/sW61<\.eJgC<]<B!IVjkGHqtB^WDsU_h;8LiQq%9aE8V8bI[\MM:Hc"><4ja3nhI%B%
%K0F_Sg"<Wl^oRe%"b1oGJ,4p:Y@#'@h7FJ1r6q]BJ(PRYVr]%eKQ>M@eXo!H;@8E[#@Hm<T(cG<XA:iTT"\cn&Ur/5r8.+d=Rbt&
%Tl=c1.rQ&-%sfY%XB'j$HLI1"T6a=84ZAFo]s?bd)cl5gGg(+*ou1")rmT,!]_]Zm0AaBgq*u2A%-l`aH=M-nc#:=Fp!l\ee`kd=
%2/EeA'!35J1]i(>p9J!H(OghEnF7@_'/M>g#3=*Zp4lAcH#s#JI)I\p^%grZfrdQSq8rU$YH;mGq=f'oj(G]]o?I5H++Nnn++Ifr
%b=o6Dq[$V-*N^UeP0;'`a%rIKD%->!o;p'HZ$Q"STA72n>_9u)0#/QOqG!K.'.;PZe'1Xc^s%,:$r$(b^>DrY^\g:AnO#EmT&K\%
%d=osWhp=6qGl.?DRqH?#Tl5rEG+fhFo=oeQ;)WpOrhQ([-YHX-rU7ln2)kP>TA;_[I>3/^I-c`7rjfdk*rPVGI3.eI4?kLRqBZ)O
%rpe=T+-lW)()odD=jR&*BAtn7g'$VNQM^5LSs@@-eHB;tFg&JRqqTeYqQ)m3kA@Pl0K%9^gY6DJh7&15X?D%1;1$#)qp`=HI38@A
%n*T^_J)$[jc!Jk`Fl.Q7UX+D@n,'Hj34=t9jialW*;dO$GN4-7)is%TZpARm?0p]jmW6<f5Hk!lp"B0*lSJ=(r7pg`^HN2-H"N[=
%II)hUn:0%?`cGAYeFg(9h"LF*rY_'KoZnOBp\oHBcSKt8MYQqn5L8AR2ZM]"rLNa3F(eO%RXKAZo_<h3;6oU\f')?Nc$8ZsAfp@6
%a'p,!\\sQb&rl\Qd6@Eq_*7Ve\[0VhceujTq3_\DB/W/L<I@"0ka;l7%cCk>^'$OZd6>'rrk#YcSUIA`L4)*I]7"M*4kO.i./__N
%q"UV>A05S(FE'E%O2C?!jcB+K&,5hmGPC]Xgij^+mCqEnRonp(ZU+.qO8X$AIs6)qn&AYJg[Ej%]dkuMe(nV'ai91NeAJqkF,npj
%6oH!PVKAoM2B-Urp9G2eG43GX;;?"F2]L;d7X#c?%Eh7WL^+mlG;f;Qc%<X<O$Bof@E+fprO2%&[mP)g.sT*nb@c,+l#XU'BS0rq
%O8A*dH>`!ST+h`E'6De/D)P7tp&AY&qogDWSPA8&-FHtV/_LPZYUMg&0Eofs&Z#!QqZ!8EQ!oQER4?<j$9le^f!N(OIHKdlph3i?
%K'ntd-?8^nrH"Daht3o*q,>e]\(3oNRCrNHZq&rR+gZ<6[4^@=l\>q#3u\M;2C'><HYbT2M@Gk`K;RD]R5TlhD(n,Z61s#f?*Zas
%Cp:<cGj>3dTC`SbbC@1iBiJn5b^[b&O&gi-Ye.c_ZT7*hKSlNUA^TPoXGn-r"t#*hS0FCIp3C7KjF5sVVMQWl=q_(gjIXi=-HX:M
%fegMj8N&CZ75R;RRi30n_K<is^6DLY\B?8k;tsK?ke3f9(5;?>^#QVN\iAVh//^S85Q?fs^]&S#`M]IrA#-2Mf71MNE=$u8H.lcB
%SS)-M/$of?#q]b+ph1#T/qa1s_]Kq:0L+917i+@L8(1P#[W4U80l;fJE!`_]fk9JGNl>8H3>Q^Mk[um&)LJ6bdaG;;]j$!@OPg3?
%0MHD(OiIfq9SpbEhsHM>UZ^K5m5$0HDq4F91ljiMT)@4U5;XISka9Q;UE+1VNEg@/K[r=(,/;t#J^$42DTu#3ZMe!%L!E:0hG)<V
%9fV^cM#En]Ou8g$W&QD45;WSlS#mI9lBY$]\>F?gY1[lso6d[FhjP-2:(R$8>Yi[X*P2b#BM1kQE/eQ6JsWsLf^noBH^^g_pmYe%
%drEL\DU!>b4lHos<B_djX*-hIV.uSX/)bMQgG[+BHLnS5`HLrB^@RcMdJN^n2fE#MrpmCbhmph@./4r-&tduKQjp:a-B/+p"HW1N
%14>9S^Z1@2"T4&E!8n_Oq>d;7YXJ+J9L.it44am&%DkG1E2*a75dPCWgtQQ,'q0=cc+:e^\68n"U72Y[jSF_*a-27(i-!Js.@EoF
%7-_q+h`<u7\pkQhl'm(RmrY!/l*7]Sf.$,pg(4/H3Th?0Qa=Ep&?-`k+nb("ELg7rM!SCBn**k8Vo+V,mPe=@0oX>>4:S#[LNO%N
%F!_E!EXa6L%G[M]AJkth2ES4U90(5)]Xp.gS!b/;Yr$+!e%*,4pX1$T0'Jd-XRMehh9<=rmV83LAp2%D4.D_-c$?El>cDNC40MWP
%Y>]I.Yu5;<3`[c6=)po//!d:\>dZ%5*3<CK]<llmrSe.g$Zk!g@:b1a.8(>_-EU"KY/92R/h:;gg8*TjDQ2GDBCO=GmHD+:qej!#
%5W'Z[J,tS71,sUN+[QMW83!XRok<usHI_oCk$u-tmErQ2?hEh49euD3&O,F8bN`a42#H!Qs6/jghH#-$\(0A+O$>>:n45o"HN)^o
%$oqGY:CfO?Q1CHYY5gsSomZQ3SQdQSm!786C"XuuTcCcF%=JsSFoOsXl#(cblD*E'AG4%KH:`[[kA/)Nhb3/Xc+KEjRXNaWelUE!
%l'R0Kf7*;$W7cuuqJL_(o[Ytqf<[]k?e/:e=cV$JR^51n=3j=mSU9f-rF`R9qTsQY:LqWn,5[ANk/Cgn69du]k@pTEo9o]O7h=ih
%"$"O-2t,)_(dT76i=,QGSsK>QgA91Ha(u5KI>%SpJNrfkq`VfFG7==:aKMir(%+GmR>&aJhdi,C\HhnQe!tWZ025N:%SW`GW?G'/
%cQdk/H[7Z((.=qR!/k9\Saa[9P\5c:o'o3l[Sn#d\mrOT1XPcr"%`.8h]da7!Mm>G'1/uZqlPH@k7Eg$Wb46)m]@!6j4P=3.>m^>
%5g*9U"/A$.qQMd8;\en<S*B-,dfP@'gbJNO)?$Nm)R>?ZNA7)=VHN>([*3"*BOb\a0iUgAZ*/WCWuq6(:XiG^LM*6Kr*$^4hVdY,
%2XPMCO>c^YnO$W4^;9dD*Z&h2GsMTum.YnV!T2MJBchG:g/!!\DfB^m$?"RL\m1d!!C(ik/Y)G!-X2pb^f*EW3$3*XhXdLlJGJp*
%ltb@'qp)P8&l$$Y&W\@"h$51u7tgjDr]6g2cVG-AHL-S?.]sVN`Gn9^5NL.?YCU7pF\M+Oj_]2P`n\ikbru#VE56ZYn,!USrI]`I
%Il`C,ZGq="_0M)p*(&^EBWDTuC_-%UGr)cA9uYdbDTH`EEtCKN8+5bg-3Fi\nZs(:[kmnB2a9;ameHc=iX.aHrNeY#<,Ljef$VCH
%rQYV`K+3[Xa6,?_1'@3/U%uNdr&o,,O%6YNs08m`W]&tD[E?iI/9lh;2d8"k6:S;Y1d:EH&Zr_ean4mV_YQW)n.2JUbHV!.6b`!p
%*ZlB<j(Y=2@iWtX*/\h\f($QBg,$`1*^*.,f*AJ&JU*n5HXGC&fg@^um**I$++Z%FVGDjEi4=++Lkd@Xmci]go:-/7UJIEE&b#-"
%$g]S5]o@^BWf/gTMbSee3p6H8rB8lon6ccQB8a__:MV?-UC[d<EUH"pZhHMEY&i!&P$Rh(>`:U/]<I!b7\A'HHD!]Kn#\Wb)%Bb>
%Y`JMPZ?2Mc&jEP!2G_IF?h`o>EE+fCW"Es+ff6YseS&l02UFBuddM@N['odoL$=:J-DuRE4_&#Wf6:ugD[N`J)c$CHUOR`3oZr#.
%SFp)U=hf#Gn6<j6^LQWq>=Pdp"AtKWSc+jml*^FN]BXNqK$2$,?+0":'r?l2eRPoqR5!^HiRjODHhtW=9]7)]RfBkn$@heGYJ,>Y
%T2`FW$$uFH@g_;S>meN0!>tmBhueFL!,r4[E=gEIiL&*Cc2#3CmiEN6rlC&5c.o(1CO(9Xm5=<J69RMM2T_CF_>H%<o'[sVZJZl-
%Lcf_Y=$X7s`3n&*H6:5i,Dp*o!TkSjMdm%Q#G^IO`l*oeSc9M'FA=kgA*0kVp,-T\QS`kP4$C*6U(OJV:S5\nkJu*"^Rs!fBE!Oo
%rW7!r)fF-UN+]S"@$WaqEEaIO+.i;n:q/DWXUWUJ>BAlG9(]Ha#W&1\KHDCmJ-a$i0pM\+-^;oVM!sW;57N/e!:[pLs!Geba"d,E
%R.tYpr&?&&i0_#6o/#Kcd^E@&i,]QfFd,Y2@,1pfp^M-<^ZFfHWIt0jX!Gfl+smiNLRM$=?XNa>kRdCT:$oF7)VL^0hX1PE^".)a
%[agk;k,f)pU;ssr5C`^:q"JQP8cB?Ps*K1oYP.Sf2!Md/eS]hYo+1k2]D:f'T(Qk=&@[N)hg>puHhY/JMi2gCfO(/PnR:\T&uZ?>
%jNm;OIJ)sWV]^/.na?-15NfFmrquc_gXeAK\bi3^b9nd/rT*ssVuLRm7l$Q0ISH,cs+E3-2uL)?r',Y4X$"jHs-:;!^n!7$7a>UA
%1:C]D>Z5'BDI[2cV5asBhnS)`V;6$f&FT47g/RZ%J^bZlRr88[,eJWC->A27;iq-q.0[9;I*2'G\4r_W8Fu$OF?Y0LEEgn^-En8#
%Glh/eI`K\8:YV'rEpbjgbWW:abN?7/c)rkil?fejp"Q(mIP].6<la^aRFIZg;`YMI2F56%Rij(?N.Ops]p*r::YR9TY:8`$^q#r-
%PqIX4Z7/)]a4n#OFnJr*Yh!_k!Xm;&CTX-#E]_Lp^7!XmH2,"ZrH=p0eV',<d-P?0\=*:RS#NOYV?q*1j]bYpnSVuZ[9:fX9:_5&
%p52H,DU2%6l/gsTL+AaXbl^8h;V#iiG"J.*D(7NjbI?&:#pfnaiLlb10o'o%cFu,0MVhSN=$L?$egAsj#ujT@7h9ebQF:83BFn9I
%Q\)-jDnEP2ETV.+.U+ETS#ISVCY)1bgSkM<8S]OZN.%LmP*W2)5E53-f795/[O6!h6k"Qf$*KCE0okFNGXss+>'Q_9.X"9R[i85`
%]W:^n,h_=fT:0]1q*u-g?<2QN(&>Q'9l7JG0lUTjEFQC=Cfq9M2]EktLi1HVX)&DQIKh*^0<h;-;,`DpRh>@1lJXLQ?$\@)4aLbI
%)2kC5BQ*fVmE"_H9d(QXih"?=".R#FC(?juPjI^E:#*qS#<!WXH44)nTiE5W6QOe$9QB(%bo:7.3aR$7[mWdm`^\iZH_b'p%.hjN
%s$#]h055(MS2%<1kLHZC[\.dL#"F!K$`&H\B+rQq9AL1Xc>o+d.'oV?gAm\nQr%r??jrL>/<5*=cQ$Cb]/9Sl?>SUqkbQ&`Rgjgp
%YOR(j1gMi$AQ#jLX?C2/]9ka`R0%UpH]MSOj=d58ZZS!,$$V"/1K3>B@%(4oQFWD+m8=,b\NMB!`uIte&I::"ec[lkE1SXYk#kWe
%V\8/M2&`:A(AQbRZFgZ:4p>V3ghnR#S>u8I:/,$&K#Se-C@*INoc:Wo>1lr<J]EL+n<Yq2Lp:G>d0u_gZZq^?AfhZfe2Q%k*K?TK
%DNJ$P6HV:n5sZ%7qI%WK.=dl*pO0H+#u_n/dc.0A85UA)%F\VV\8gJ'UCXkpFQa]k.<P+:XNt^6aW7tI3jG0f$NYC[^L#@eHIiG1
%!H'C0<*71u[@rk%V:r&t9c%b`YPW>1RFDp<d:$/(9Ybe8:P9*AE'A.)Po&3M1/3Z^%P"5PJ5Toa\#u(@VPQo(.usa$\7lTfj4iF6
%Wu.2sC_bjp5jP8n8i@JAT"J9c@<&OAJ47fnT=mT<fe7SOZYiO\$rX^'XjCm'I-9</fV"F&YL@GG!PF4Ug\5Sq*7?R*<X$)S:;^Vh
%.Ug6G";>o>9BU?G["!:@.ni`V1)4VQR2o6%EZ+-_HI5c.Bb^3G)<Vj&,P,di0KZnUF_G0p>t0%m!n^5lq-)U&nCSq9Q-0r]>T7=5
%<+WI73c.#Hqd[XW?!u*T^+J+#;;(:QFsAL<9sA%p`=YpVbFFs;`rqVF"^$q,ok*n:"UR!8bSP'&j*'067:`HYR6lUo+6G"\'(enZ
%4n/o,NSU[!IlV:H%24r">Kp`bo//';(.-YuR'L<2mT>i@?)A`NU-fG"*lU">]=rO9K&gX\Q"g)2fa+#.nL^7h[kUTl;eeYQW`K.Y
%WFB6)0>DF;(>u8To3lRQ;hL>2Jq>R?)nJ09!N0%_^@q/e#U%UceT/\KK,:hCF-[j)`hrs3L)Ze.2\*16Ab5"1D4I'JLh8?t'RTio
%9,]/ierm"f_9ep%Pd(jt6>MHCA@t`rf%r?F5a-qBZ9_!Q^>"J$Gue*A0C3>QHT;K_',4-[N2I`&O3EgKF_b\GQd*>+$<6L%9thE<
%9H+n0:EA>JH>o:Z,FLJo@>AIIU%W9fURP_2MlK?N7b&K+[##6uA[W<oDpkc(9JXGEiuoh@VD_d?CK-g:Rd`:TDDl>Sm9So"C+@4+
%e>bVA]i;#_8q0!N/6eO9;E".Y"OhJKNW&08-VKA*K#<g7PR]&f9I3AZ#gC,;?qeeo*L?9SRQC3)N^/K"[s@2@PI1Z_ctGaMMp7t@
%[_lG?)IoY.Uiu+4MN)TpU)c:S'-&p(4njuAndoCs>J%H?A<*'P<?'t;8#bQ!FKB3&C/`4O^GsQj4u=njM'=h+^_LU*Uh%]310cWN
%N:##@70WpK*H,TJ9qUXJL7)G$`'ng4bHjsuXBE%q[F/q<J1_&3#UV4M_hqrUrKmrcd$tGJ.!C]Uaq/:LSH-NgD"t9'0I(45C<hQ#
%RoO5Pe<?Hc:H:?.Lc,E?ZV_;9h9G(@=2B$H)%m\-(tI&r*R1k;cF,"X!7_:qNHGhG%.j['rn;aJ9NXAmnClohA]R-jZ`1h,>n$h:
%2@)9!'6LuHU'W<.]QN)L`%n='(kUSN-sHqW3%i^Y"L,cA4L`e@n+jIBANhb)#IJ?&QYG'&Y(iNGA"(NMUE8.CS-A8,mZ,iS4_D$\
%jSr^15I@:ZGrnPW61`G1#/S(nPn=Sk:KDfJdH,QEK\Pdj9L6r@"LsJo3#%>%R\j&`mP'a]R\Gje306&:C%3/E)]efZJX:Jg)ekZ%
%7"qZL4^'a&g[s;,[$t._+EqlN)K5tf:!aMV/>S)=d#B\M(U%cgYp@<02!s&&rd37b;$(7RUg1[n>U$Q[ofJ@!ciZoY)?l\k,BLr\
%2JEI&NrB@g0Gc^e8#O(/o<%UV<suo_i-/BWfdX.Z.7!53G2].5;N`2>k!7VP<G#"UChnQJ<t#sT-6adhHN&]`F&)Qu,SEUL2D5Cf
%V^@MM0Lclrb#u3k]Z[07&BfW^K7G*m#\^rh=.#IpLY#kqD:$([B(R,I]8\3PPZ\aS@lK^V$a/+I?mW$PUZTU<Q4?9XGml#E6tO\Y
%KCSF6d-L6&HJ!=2_'<`TMTA8@NG30drQ>Fe/V^))03po06[RP@R6AE@;-5PobflLJ4>tI;U8^"02N)n#^A!NI`G%$)1T\B/*iIC@
%U[a$mLAR^mEeI(>kV9M$@i:u7AL?I^h2uI$ZWImbN.nhe[*WIkCkl$tBnf-7&-^W6Zs<1)@iOB@m:FIuBUG"db+s0XSXj:dVs[.k
%!d$ktF1+imnqcN:bGutL?P@*Q`q$WLW-9+`INIi9"C1#O,oc8O('uUH>P1'0cR^/YXfe+Xp+3ld7a^/Q<Q*s3G\0@%f(\8I_&#0C
%JkKOQd4G`0ep#Ts<02Ql$_,!CE5`"to]]lQWSr8mk1Q%j`g'HLYkq['lVR)(5k-)/PT,R#NV85u2cH22`Nlc(hh"hQ!6fJns1*F]
%#&7Pm1i4:(aQ!t!KQtQ65s9blK#ETQ8U@YX#RPG[P&0[b&8*tiQW%t,8o5Y2Ps^*QadOQh#=G$4<'))=N1l1I&f*qhH.ceUmiLcW
%lC_31\/>g!J#*4.N4G74,%oRc7nji7GVEAq2hd!;'rTZf+Tb51eKn`a/>nbo0h=OZQV!&HJ#@ru%'POc5RI?6/XlS$VY")s7RHG$
%3152BhLo[tRhSt(R"/\Lk=m>Y`)[#17+So937-&4+[c(AYV_]jL>3-F:a,>AZA)u"V2\Y!O28=tm_10<Sj-\c)<Sl5!nn@P2\4:m
%)J4ENA.@^R6(5?5dR!N'h)o?Y0bc)_MV$iV?kQ@ha!sYes#Q>Z,/aqN26TFb\Y)6m(u_'BJP]eX4!(lBb?qR')TVo$2d?nrc^6%]
%m*OGg`q>4tBjP5Q@13cW1.2jUe)3N*NL!`$Q#c[W!cHGK&FV[kCG^#J*c,*p4tGWFR"O_K3];g4;WE<G_(S7\ZgPAFNAh1,`JR<f
%Rn[*\'Mm\-)o$Ctk2_F4-3Z'\iNqrN_[c,8)(2X/+\7.!pY]/BaV=eZ?sD:b`)*L-@?*UG83%lJ>c;:5fTSu.m.33c%<`E6,bAme
%ENMaLQP/-q7f?TX)0.J<!\uE\(M8'"n&h0i=,=^oerOZIcCk9d!`5E<Jda066TIFW\r8Th"1m%fN2muH4#>M<c%m&\C>K7=1AUZQ
%UN6p"(I!hgjQm/6S)0g0``3jdL>%0,0L8#HA@fYI@CI[&4.FHO%"#]<`Il9b#u(Yir<'r'DjRer3kPl2:)MUTQm^l<)qnlP&hpZI
%]QM,P:`-!b.hV>.2P$a-D%n*<CP%:`G+H)ec@Jq5>Y/6-esHcd?4-pq\l4\co4kYNo.n0GGX7@UknueN-9@Xii3Pha#1F>_k1i)E
%Rl='^Yt<'4?0n`MB:mNL-J-P=:e:?koGkUjE<ZGb2%X/1Y1)HH(,^ek2Mt:PABZaIE.n%U&=e@0VJM!T=NHZRc%ceJ_[V[<5[e`E
%R77+fpRMa]g^X?_3/3i9Xt,0/Rb"O:H`[tg7(<JtYi^#Zfm(NYY>"BCpUQg>U&b=0gFEeE7+2;)<X>.:ZNp)*N=e(#$=KABUC`_+
%#?RTpOPuftUWk!`=Jm;\;Ur/W4s:&.@jYU9P_+Yfb_C/4FV^OK=d=HsARIZgJ7]eiL@A/QU&7%Ng'4X<RgcV'&'4em1C&UL%s&*q
%Bg#p:k."Orfs%'[Z==bI+ZjDJV:9>20T.fR?2!"rSDC+Z>!k?*G_EmY)3\#ZJ-1-JTRNDcl%g$+<tS\c,j!so&4*TX,fqmpnUAS9
%q^)MNPV3.>%9:f1>Jf>U7B6i!AFEq'0uUd@?[l8,]qJ]!3&%aJ$ZMFca2j]e\`X5fi7TeE&KfJ2[OJp^8YgZR>pBefAt)N=3&!#*
%1^8%A>6oFan.UuFXpBUJn`\D0Z<&t59VZAo7/1a3"YAL#CS&o0gu#r)i3[SJRJ(7ecmI!:Z1Kn/l\Yo"oKaT%K5<:XS>qamH$:?h
%(?g^2&E5T]Kk7*^18C^?P@rPm2!/4p6.4@e#WMm]bfN_Fr%XQsHd<-\GmI712*>FhcghWT(gr``\DD`jJY4,nf%dL9([$C`,M]OW
%I@aug+daXbT/93&(Y\gM/m,`H\olj6'*ZhFbKRm3L<Ib+h)n39T6qWK7jeE/*iqiP$Z\M_.Pm#$5\+/.cgNAclN,l-$7@>2CmnDu
%#,cJIA2B/QU@N=EeuK^"hrrK3cc3b-6P=c873OOD"B(7C,bf,%0L1CJL8557,Y.0LSAZ/;D&srZ!Q/o+'Q\TI)S#&5>j+^JR)&fh
%7)kFqW`@$S)8R6\UeE`BG;k86%%'"f66e4"4Lb:a%Yo!\7`^a#5\^'=D*A3,).3[dbOP&XKLJAREE#tlf_U>ZXX0p%/C1*Q-,c5_
%m:*9(%<`eu'1g/bRaub[=<U(Z6e4A4:MkoX?"[@M[;hc#0Fjmtiho;+L-pNr;INZn^]=q]&]5ZuBFG#fV?RuCI\`k9.FC:!Yn2Qj
%4=?jG!oQu*HE)^d7faZPaM^UiO(Ym+J36rA]Ve=Jg)qDXRS:M9Zmd+enl,;WKOC3PO>?Kuh4<e/3B\uq8WPkDF2;SFl2d[n\&q+c
%Y!>Zje&0dJP]pq9eA/`6jF2pT=>;;L'\dcB9joDo;-^2a$*Z:BXg.pD'IF0td.0#hX\=h#^>,UL(Bj>O)V9+"eeu!u&clA?*7aZr
%E?ST\PV:g#H;"J"'Ve!<I%X'3;GCt2p,H=4Q1tHe#>5pJ;@G=kP6D>MD@<$@:Ku(s+"Ok?LU%MHltY4=kba2ILH2#A.bB@$^/Qtd
%=O#%qOjaO9/D&$q=jIn!>ke/FSj5\m&\]u+LH27!:^:4_F#Nj5m8d.?2'uXX@3.39<t`"iW:CYS@HLeAIiCZ6+Me+@#p**?$EJs5
%@0idP!p"Q0*ioqgR$sVfi"E\#iY2)NZuM3]3??dS&H'=a%$MOo6(tWh<#d+8Xg?D0,31eSjUCNA@jqOOlh';EKlB)OOmWl7E"<i>
%;PE3pFf;JrRo7upn'OSn&\Ik#36Y=P<QH?%.UeMnVhQ'C7GRBt^^A(7OlSt!9!GU"eeALui+uiPU]>IZ/HZ\$/l=Nia#Yk(5`JU!
%65*rM+IH38LWG9iZ=YW.R(%7Oh<7PK.^+hg;KW\c%_*mSK1/TUpM,l^k`B8!KKu,tqc^p2_6_&lH.f6SBu5AC)F$?C.M@:J_Q'o:
%,EY&XBDQnCbg`piF6CVaR<cgrnt+h3Y\^'6pp^1u!l'FD\S8sEbq.+'cI<-@n`O4M.,9"li!$a3+n^FnAh4LZ+ju9&+$O%0-9ZR.
%;_^P)GaO*/#lDHJ%DhTMWSR[76mRf+b0+RtYZ!8;.bDlMfYH8lZ;p*l/RPnsFZE-*#".]&'PgULD\^Y(Gj!&0[<4ncX2:b,&tH%\
%rKrZi)dXOM!XP01LkIqqitPiGJdkd/H7U5kKS9[4?s)P^D8Ams;ZOUgQkD7#?ru9[3$JO^i'N%3U%m3O4`odgMIhM!&`O&*6\3WZ
%,FW;,S;u'S=iqfSJUlSd">Ja_J0I:<'41C1&W72M,Pb=OSjOX,'SVFk9m"<i7]$>n5d\dbAlKJ)-Ld]g.!LC9\#.LlJ1F.*'p(6*
%dDbKu3,R"TL]qRCCiVcHYc4Nk;Q&3N#W=%>j'Jl%GQ;6+RkiR8BuInLYVURS(+i(RK=c+=D@39<;beO!d@u!lpfgj+.=dhHm$c4&
%:C,<]j5;WS'/n'Nngng&^C[Y#54_a'C:0OUhp0MXl3o@I%,&9$7gYr.'"Cn9EBHcdrDC-<^BEKU?C;k'9Fq\-&e5^Ho[\;ijK&j4
%4:3qtr(_):6)j2o2YB+J1]N?Gb>:9.R57q:^HBjD$aC=%6hUD^c@]1sEi]bA-?VliL[H3C`8'/%#qY;lg53l=*gOZ+kDImI0SK9E
%bDLlcN<,!j-81-7jPj>J!X@s>=P9q8Bgs:TbRjP7N6p,[driMkS&[3En-,:.SDF\l0.[[E(p3G=Bdl<i*EdmQig<(<_@ClY[t>AA
%$".pMGT^RQ?l),"<TdfQirGHolSO2,+JlL#@/G)?5+.Lb!*2$UT?E73>o9YD"Df=2%7UhZ#7P@_Klj[)-bR4N:_F'5%@r?+"Z@pY
%fjRJAp]4be@EPn8L3mrc2$?hZ+``*uJKBJPX<C%q@ig^eS<et("PEEi*q^;PHsejVW;puu3K`AL!(@OjT&-k12qMOMiD&fjXh&c]
%BISOpa@\58\Mq(^J2Xmu'gp]3Jl_e[pGE?RAf=UPja!D:c?\G)TfdN&!:ZQY_#esMd"TVKjo_`0@^X&LNm);]1?o^rUX(_1@;&T5
%%Q?7.O0O$;'C(tt(P$Ui:+!=b6-q*'M(>hX*<Y]Gm+p67IjcHK*XEV_L1#_&2aB`IH:#\De`Lk">_h9aXp2HV/C:5*R@saGNTl!b
%.j09U4uL/XaRnNc?"NH29Il2S7G.sD:Z+D\#f]jK"0BaGWZ2eKL/.s*2`[iFm[Us5"^QZOq9ql(cmdfl3<F80")\;E=cA'F0mm?l
%6O;p]6HU%c"H5r^i#p`K6.LZj87Pq@=#gcY?4m4iTb4=\ILHYRRf^2CFl1e1OVQ,_o&R$rEXfSu\XcS&[-s+OJ<ZBR>hYVO!o>^H
%O+?&A.a<G51LQ-)Fo>*Srqn]^]mKG7G;has^VB[<e#u"9p"Q[[)uJ(s1Ipi\S0/(^Gu_iH+VmHH@bFpjN[Z8B^haLU@WZc:M\q'k
%J-09E)+o(e#=5_]CgQYLo\,FY,b+j[2TGH9=/JgQ=AFo"deaE/RiK&50ZS0s6Q[b[?!`jF_0-QA4iD(*3)MJ##6fPmZh65!)-p[P
%;`00BL?.I"-&4aZ#rgOQJoO&;>U!kVP;>-LWt5s,6OBfAH;oG@'rO;`IC6^NeSYhU4$5`e)Pf_,!:oTob<s#qMjS8kE_,gUP2gqO
%NbdL<$r`g0B6hdadc6m(YX8[5.Yf-lf+Op4o3e#jo9bE-?.hCK=>OUY#BV6qS_psnqqJq'Zj%MA@EZSFR]>Q`g4nmEf#:O1TM%2H
%`rppZ[4e"Rg/nD2pF3l]:u&IQ0sin0n;qCDHeeZ5]enP(V.">Y>5@CQ@`<#@AFE,FU*>25L[I]*U2d#V=<9/b%Ug-MHui>*aJe1e
%nuSo%_7@Z$?K]_h)P5<K>K"TB;jSA`/SLZ&4%IeY6`'P%Q"BJj*"HI[1AaoSHDF-IHo:20/:9"8,oXDC4@"jcf>2LBq_IT;D;O3q
%I?sr<FeBR[^r#q;.j=$\/'M@<./_6<GtJSs+?gP/cdh2V#X$SaQ0Ve4@DTqZBZ>]\aY6mP;Gb05N1J2l2]DkXI&%B:D$o>t\a6c!
%+;_*Df#oqS(EG4j@FB.YFjGr_h1h[\\d%.TNs6f&iERHJJ-.pF<\g8e@]Ne[_oc95!ZXd):2Wuo:>[&+=&"2Qm@@ZA[3[SW`+@]8
%m6qmRB(=gg+97W<qaBfRm"Mb#o32'8<QJeY<!$*sCaag"%Q!*ps&;c4_r2b@M2+e4fS@*peP9+h_U!#IFf(kVRq_4tKZ7I!1M>e+
%c$H0cmjGZmj+_dnqS,2836oI)$e]qBd/_0TZY^^`R^-he0u8WQb%pbC>WS=nB4acQ/l1[2k!=r!j?@0]M-0hl!V8hl'&-ECI04PQ
%V/1*/TQB<./kq#k?]fW3=cMbi>TOP4BZCf.CaqK+o5l&P0O0UXE&O@ZZ6faj,j;[(HXXY+\jh!)Asd&G>JpSNZ_.CJ6g#!-gU+8*
%'YN1T5m;$EQ)pK<Qs38kpXL<]^j']AkP5m]N!B2TF-spFRC>3abVMC2jm&7'`HSIP<ONkN"9hc8)!f`9H(^fEit#iik"!W"&3p\T
%HIcoJSo.&Oars_do*P;F*Ch@)>,`Xp"qATV)0'V_'<](so6>?O$jYie8TE8DTQQ0Zh'+:3%O2:b.2Fg-XH=B#-V58L8O=[GdcAU!
%itY^A$U[TY`1b"6$/`(6W=C4%Un@4ug[GIbHm+*8]ul7p5.j)rqunZ$JVA.6#U(qAX01!6`G;E/QX&`rLc)W(E]"ObNK?9`a"rQ@
%6<(T;+;9f5&o35QLE;g>)64"+JES3\/=fGeLgO]fJE?tNek5%T%!e$!O96K]FWG7s'kSO"42)KgGD$5'aLE`#VODWD*8rb`qu*bD
%0bfJk_0VE_OdP0.e`l)LlZOucPEPh^MXO^35J/efU&ih?H(J!CHRT7W"-]+6#b[t2F`P)&Y=FS)*pCdEN:Jd!2UI646Tg%(YW?E`
%H([#;_G;&cm>:J[-8Z*^E>[Yg.0U"^HoLR_PiFkqa,]cHXbt:p^dQRY2Y)#B@?:g?k`Zn)l!kFC&*=e9@WHcVJEHCVXqX&4+,H^&
%9E;q)*Lp.m];1q$DK+Tt2F`a0:l-l&iG;SL-'Ql5?Ic&'Bor]pEX5Ke_'E,`nf?U*7`3A)cF6/O]Q*`YP6YpIj!fa+(RW$cW!L$j
%/H]BPM!V>)5)@?I'_W6$"<g)0XJ$d+oGS%/7PL#FPu))3!!@h@6'$/WLFb_qd9*03"bbW<8E7-9Ba0cCii(Y5%f8LsK"O$MqapZl
%k,Q2SJ7_jW?n[$I.iWQIg$c`D4L\UPe`oH'%9^08kRZ'#"I4GE+ZkQD#ul#*-WEq5^2aCOmoiC$'U'`qbK(\32'&2-eb[)9/-pN1
%aZ`%+&R%PY+u-6<i_b6(7*_I'ds2l3mDrng-V0r'(`NPuHe4WL6>Pr<*aBahnY5*0>'L^_@LCe7Up=arkNo&GgbcZ,+H22WDk^X]
%q&IKqRpa*p10"jp7)AB6EZ5<5!(](V$6^N\!CtEbTVA)6UuPj2>_p[[1+=9fX"pgikuZo#jZ1!cZ[&7%lfs8h4GE9Z,L0uG0_3M6
%'Jo1HA4f%rbfoQdNId<2CB=MDZT)4o.^$ca<ZpCX3!/#>ZDoBU$%.T6Dg-A`;WP?5h^&GYb:YI=-r_gF4I([W5>"jODcbbR.D\6$
%E%G8eU2VLu<1q.PO<_:'`hkCdQbU/W=PU%=&P-R8mFc,:SVIBV9J=HC]iG:<i[dpLN+d;&[+GsYLHSY76h$P6+N6-s/<e*o1&]+:
%XEU6`18tJ@QuG%VRb.H>onZ:Oo<MAgjh(H*2E[.$G<o9`&?$NLA;Qc,^ol/INK0r#g.C)HP`t-//=4Vl2>jPY>*\4mBU0hSq@R,V
%lLYh1R8^caZDoLW8oAkfQ7YRETh^M9HWr_Tq2s0X97r"oVCRZnJ:McJ&0SLc_$[80>'6(Re)E91lc8CkbZYhHn^CSdl"ekDA1WU+
%1r'=[=GW*X9,/hOctT`;]I]-0=%Zf]:f]j0@2[$O;!U4r[S]4Z!L<phkm2]@(o>.Ee*X_+'M8KL)>=k:9lW[r[Q0q7d%tX='ZKm!
%-:%M:/4M5J,mo!C6HOe$>#?.UH&.h4UWX!j/-Hscfe[1NE-s%$2![7.)Gl`%]e"h4"-^Ia4(/0/$NT"u8K*ZZ8n<o>7k&$4@`k]&
%M\Or%haf`E.\rbI9r`,t&lf23DM72FQQP-jKK/K1'Ej@P-!tdCkc-6tf6Ad2\>hE`"urp6FEBDG4(SqYXLB.kq!)j5^X:mKGRZ1R
%X#)/X^>!S<L,l9#a\dXZ)g"j1Ck]FBm"qHfh?VN9Mo4#(WVC5YR@QMiQfctq63q_t.5us*LXUQDiHcn[8m'P]SOR,lMR$n^6VpW8
%'f9)i:%gf&<raP;jG"nFlpQ.Xe1dgjnHTBcZeg9PCi]_r'9Ro#!LqpK+[Udq&RpE9]iVC`gV(str*'';!lc)\WH2Q'P`2ZP&29m2
%:@8^s:+m39D[,Yr(kT*t@VmrAOfq0u#3?'t)oH4L0![LO1t%R*g2rB2.Kj43^'oR*rjJ)5emYn3Z`'*(WBg_5:tO)=hO98Y+/Hj8
%JqKgPW"Jno:)pcn9Y$9"=B]?WeK%tOah/icI=<":cnr8X!a$Rt#M5faYF29J7D#Ibe*n2t^JN>M6-Em]L%CG(,+&pO3Wu3a:3.kW
%(*)jh\lMs.e6/q7OS?*iKYZufTm=*WS"!m61[t'1YamI[90.6'WXsEo!$"l)2Oo#&jE$1q^F"r%drnOf_!B)$2k_?=)L&T!Mn"_#
%K<>ib7,q^UHGoc.4p6=@(KL`<!;Tah#"nr@#BF,Na+u,u[AV"jfUbXM'ne]u;2AUKUi489XN=#q!QC`HP7`43D)LG/FWX`\:(P_T
%q_;<Q<sj&qU&g@4GJn^VO%ca-_fZHL.Q:IkB4A(V9Q'KM&9$U?3.:WY(pdV((mtFE+>`3bEm+Pm+EPdmFE1I0SUjkWA!6O)^@(ST
%W$MT4nQHLN@N8]M^<U4e6]-SfQ#q6j>_mNj=bSWIT=4kb/:[msRYiVrlpn.mUmtii.d5j\#Cf&&B7j=3d1#1H&qo4C'Z^XFr<2lG
%US6uj%N.mk';S&'QS'%+H@TNIGrQnLM(-.eP_l-idq-+re_^%_^]et'f>nR+Q4_&_W/2)\.jg=TW61\&&P\-<;jf_7G6rm\,d&Q,
%4!EoTA8S9c(jd6_9R$JiUUGsaG/cO.ks8+Xa0N9kN;GT7W_[m0EE#u^"+ccmS:*ff;YPK/*ciHU]#*at%XQad:s<6E*oGGWAg1cR
%d2V)aAMs8[&:TTO0NK'"`i;mu5iXo4\V!7m+fG,Y0i_%[+F`%b$%CsCn'umu?V4:c<EWT_&lC#1``h,:.f4/#PX0Sh;C#nSi?;0G
%!-bff)0KTt,/l%6hPYZ#Fg#&P$1_!-m($.>#q>p4!:N^DT.3]hb7L4Z<qY#F^lTL,Zlh_YjH._\f\EYT;+#=A'S=j49S=CoFDCia
%"VF#oRG<14@6T1oi]t-Bb(E7,8)A)Ddcd[`o^IJPAcaC\:fmP6Mg^,kpm5?:o';WL]R98"bKiAW1]1,m54DW,?G60qiU%Grs5`Qc
%aaF#EGAk7qip#:^btie7oCm`i+5^]or\r7G5NRhnTQfhcb'o<&Rh2lH]KA#`%]X$WX?a,mG-!LmEIl(bp;MF7P$cn!O($K=[rUUo
%L0m-e=L?+fD=,W,ob]k0F*M?G@t9Z_GNbR;pl;6]b%#gsWH"dtk".<7(cK9sHghtuiLT-F\mo+u;)K,*a,&i/_,4a`%1"a`h\4Tr
%d,1gg7<OQ8d7k_q@T$;ml?'uMe+$R5%c7W*"hGt(Nb`W`h$_JI%2S*!3Nb'_F#d?_CJdg^Q0,S;i7;%k&\i1-8?j-n?YM/Ea2!=b
%;ohOjR>A'2+?;n.8/gI2EK!FZ0);/"7X6Ub"Hb8[4s5n6"NQ#pUc&^3j!L)=`GWogq\*jW$KjOMNH#i!D?R:#mah+.K\3dXiC<Jn
%?=VnO$iIKl225TgcA=?ZEI_4/X7>W=hi$!/*tGY=;]<PT.#t@fo%L]PZU&8`FkWmO&,V7-q*#<Ij$$9*d?nlMfQO)INZp&f1IcfJ
%E,oHO)>>73]5SY*,ZYE+WJp^nT.cRjHhE9g1Qc\Oi(*8RRhN\9:!a_QYLU7h(o+*Q#UdT1P'ptj.l`LX4cLtE1!X4p[g7qj(CE-O
%0rutZlPKEWYq%+=m)>@BE*e10(s`[fj2,(10GtjiTIsiE0GHoO(NY]a9AY@0H?2_;W/J2]3X7C=M\kaI6=!:7)i4j6jE/jS^N(Lm
%:@.)P:kA"SEJ(e=c&[s&0Gg5)_3F\^\9L']-$Y>*ZU"l_]Z"-p&NIDl(/$^SU)/Q7`l#OSau1!q?&4D!D@kfHhI7B`qm`08kiRT-
%G^:Ji=GoIf60+3(BMk/DqN\@2WWG9gMo0lK^>eB3WXE)eKU?#\<f@"^@d66[N9=kLE4aE[13&kb)"R_KCI!)pmis+P6rZ;-9t.QU
%ME-K/'K]#DQ;\XB(RANl`53H$P2\AgkSkedbm@3!*6$/GMnr7!L'LE#TI:#\"1E!T0GHI,Ws(dDb+<UN+=P8(9k9t'@j,k;!ruo1
%-ROAXN5\O#])n;tR@KWq?"kj-ia!GE?m\@%*TQ>"9[#9P4U3\ri);fM[.8Lea+]hhHIYp?&q`KQX'C4s%'g<0j%;q&PX-&#0i\pd
%&b]6A,r*,Xd9RjaSDYn+6=T(XJGBj#ENPrY^<dH.=.I)rN50WhH]SiWk%^c$/mQ>:X(DYfip=id0G-N,k)QsL6^k9=O1\hFLf+'N
%!0UH?_6Unq@9TUY!F*hp`5/Db*5kMaMSG1rO-?kuIoI+@#Ijs=1%%HHIjZ"L.-8LtFJ^-l7E@S^MHSS*?8`Nm,(0q+jNKcGK)F'[
%U)ld8]3:+P80ku++HC*kiTBR;dgY8>%ME6<WE!KG#Nmd#V@i,&b$f\TahaiV!ku!Eoh7?(oKS^PK5[-`(54F$&R8\hCr7Y<`.A_7
%_rc<.oddP,)^:!94$BNsO`cGE&5:""1#>>9XEoUJC4H]<0^KjJRmAh=*Q-B`ZOGmgk_onkE"gD^:^eR[#LbgQL)[.kEk;qm6g3hS
%ob>,-q$4SeZqA#P$c>FY4f_Kh"&=[J&^8+"VZCqeKif00:ctuR$3OTp;dQiJe[MBbYR2%XZ.28m%+Kp9Lf-Be";o;Y67E<Q99d$m
%UG,sY4KT8(K*%:$qogDrgg$h(nHkEKZaE4LN:1JH/":LL,0C9KiN+/3:^Q0Pd]Q!TV.a[,O"f#7VG\1hE%,Oe$]?^EG?NG^*5oI6
%"Vs,fDYCWsmQr(Ulpi[$#2fdC_]TNI3"jA]66L*>Q]*0K&&qMGY&_.i<odGVO9_P,U@j.#(p:d-&*i(Iq:$p90IZ=75DXs>7.m2^
%hPgE+Uqp0F&G?IV@,NuKO=\]88pB72(_#8.X;d'OGZ4.liX;@;C:_gs,E'&(`>4CnTXq(RZQfc0$SSfckgWuIk!::87);f@dOS+4
%Q]>6+_5QXOo+imnnbkce*5^V>Sr+";q_./7iNo-oJl,o:b@2&QFKm7/:-@/)I\m>[@B]j/a9gI(jM3t?0&47+RI%M`J\a5EK-lt:
%2`fHW]a+7O@A/8j(cW41M[)'-7[RBt=(Yja=&E*^2=Sq2>ERMu2t4g2i`*)9^o3&8cm>WA@>C,^R"6-DDXC%)$q<gm1H@+mN>q0&
%712eM]KBU+[b6NU&S,H\+(:0S8:dHl(g=J3!i&>$\3u=m7WNBT!be<G%"17s";Y3E3[fP<VsFd\@"`I@\.Sif8e"7Shua1`B58gW
%J>%r\)^?.W?n=9f2[('QL_s5F'h(Fp7$Veh!m\N6QSSZKlC7,E_?&RV/Ct7?E;$A;ci><H/TN1nTJhL`c6U1ZgeaIZ,f").+hACX
%#?2>pSI5U?#_N-p30l;I@K:#@OM'Y-Ka0.9_^>/.JQ75@%/O?/SkN[-qVU9e[UB+e?KWBj^H_c16Zjlq,?$Pl+\qtD&qNXF&]qj;
%9RH5%r!WB))CTi[U%(Ab*L+8IT`gm5k5D-]?Oe58h^@:<pjV3#>sd`QD-/ja>dV7Ac.p2H7RYt@cd&o4g?2utf&'H?Qu(1L!\c>4
%Q9!@lVW,_Z7Ji#'QnJa!?gOScI6'!f^D%>h*o+Gj-n>t<^PN,WH[\<Y$^:iWj#D,Sq%p-IPjiZFXM:_;#C!EOMRM&le!-OLe,u)=
%$gTI&hutkKlS$O_L*TlN8S$S.anUDF5qE(>BDod[_t-O.AbZA6>SkgqEW+I/OT+eSM.$b>?iDN8=n9BBQA:e=#3deI?sB**kq>,S
%MY'73Mc>s^@SZcX[Sd/Q8:NK"R"@D`r\?o48?6h2P%U(H,3SmcjoGmR?9!FS#@Xlio,!I`<*aJBntHQd?:]QE%V!6sr?Y-q<4,$g
%9*rZ:L%Ue1$F])u^Q]:](p(K6Y^5?PqFeD)*s3ee79l'g?]4WEnO7$uc`Fn*e7i5Lm4Z@I9#g\NSBZVm(YW4M<>7rS_6X=P,pB$L
%qMWV?Zr,\Jo67Vk\95r$*nK)^pkoNbQK$-_Mg,dp39Yf/p/2of1]HB6Pd\1Xrm'bf*e_9a3KbQ\IZ]pe::#Gsr?</Z^#Qb!IQ6t3
%Z2I!SB)2ngn&Q!Y$a*hB`5q.A^QCUg1B!r+^%I$@QgqWGHR=%]hgq;!SmT2j6,#YWb:XbUe'g3q7FBEhcgPC]VN^p%'#q_UPPjE%
%XQD=Z04[N$]Spgg!fY)Z__5.g[rs(m9q)g)"i2jEo,LhoZ,Z&W(<\MO0D-7*Z@h,&/^LB'1]4P`n='g'0>mRu/:q5XLWLA9^D&X^
%n3QQE'N"+Ri)_q-R2<[mZT)?0\.JStWG254_(Q1UY`K++0A]+@WFpfiDGPhn6nnO*j)a?B__9buFb==a?V7TA42ik2a:[kNMI-XV
%]spo:65n(`]-^q;@MKTl'Q?RR1W;#pRfi^O`@n]EBo6=,rr<f:X;)P3?f=$4I_kQt_cRc@*5<r$M(UX"O>=!O1qs(g'[(D=%FVbL
%r'Er=A<?^eJ<`8gIOX385A-9hk]5&e43Oi$@@2DGr$&1:*HkleKp5>"Yl$gQ;O1_dV1=j!B:`I%XXSkbQPX*7VXs^P^l"HdcS,$s
%^fprfY:;o$l)_&\IBS82c`]6*gWSUP`BH[pe:Zp#W:&Zp]Ecb9Z/25P(<3+1nZpXAniMX$RHBi6-(;cZ9>l'P*^S@H%Gq*mbHE&J
%=nrP:8[tf7m!rL>?0L_bb:a;ibu:P9772>G_.e?q.A.b81qsS0o+a*sOSJD.1r#8/5&d4k9l'V4BDLYsa>=bc^VKfoks]Orb:d1$
%el]0SEj\r^fEq(U!\mVuU%ouq$eUbQq8J2jljK+d1kqA?/hFbfkrX6sZi"9g$/cXO^T%#]U0!XfQ3i7K'!rQ#90mNejd3tK.;-pW
%^Qd0t$^P-kr%VaS]k@&2>QUkW9lTl[k#^UV\Lj7WkZqYsS`X"k@.%*b?V4b:"jJ^':4RN7r'J21lU(3d'`JYfJOjl@-_(^9?O;%l
%der*Rb]!g305$-O4DAtIm;TqO")s#p+"C0?jHk/?S/-`1'\(dYQ0/t+bnHW^Jn/Pe4]m/Wkann]8U_i<S;haV(hS"\nI*u(XNWK<
%0/k1V(n%)1h7:;u(jql;?0Qe3^(LdKFmMlMlb'p`=L]AV^G:;/D9HL@3l9)KC>\f8VY4:NVtM.F3X9:NG\gNZFCt76?;%sA'&.NT
%qYJf"WGdT_daoP3\-])**?5#='D`1l]+76cZ$E4bi;gb5BJ+D@_lKJ`c55)$qC^EJa/39m+nP*8\P[>AG/jRfPqP*686'nHng1DR
%/W7]:hc!fC^'JmL6!S)N+iL#a(12I0L^=]$7)[4<Hfjfd6p-C-M<R4B^l]'6$=CfkF1O.%mVY`%JM6.-pkj^>\&Z2nBDu5aEp^1a
%qHduOKN)9^p[222Jhq[*AYM1s.N@PYJ'=SR"e/E=^30m@$/Vqm[mf)1jD*u1H$d@feoSIOp(HqPEaEDG7ClT**/aBA\V8J8SA!_P
%Q3Fdmlp^lg!&M,@p>S(fp;&m*p@;Y-C$'fV]DIOQf1QH/@%be]]e">ZH?-;tQGd4%3EPZhOV:a`g:>_$H=Jo(D,"m1klna*j$18I
%6TUA#Nn=Ep9[X;"RYjT5TIHch.!hF^lpB&ll45TD8R^X0bh(e9%0DY"4n!>Bi1T6:\=]U&cHZg3@;,0=3U]ouH#`GmFlg=X?9B7c
%ccj$pk/=pjb97\hJV[r(rliMHSSTZEH/[(0s+#/h&_aAS_%'@L8-PG_5`@+UG*):C;/s&#doN@(S74KKfH@tfAWckIRiP!1;L9bP
%`Bm)F*2L5$7Z1q"=]@CD5C]BfKu\mX@8QOcR5Q)IgO*S_+C-C@Bj]ePK9B<5L$4I9#j+2W?RU2dFV0kN&248'Pe7^7h"sde9,!9q
%n!(J\U#<A!:<EC)On,aCQTlW>0*?@D)Ac"P8t#?r8m[5?8m`">%*F^0s%LPXO:*V2T]@D5"tqW%hW[]?(Ih`D3Sj[BjB\p"'XApo
%7b@.HaK$mIA`S(IdH_&'$6AQ?)sS_ikenRZa;_Cr+QR+a,G+<iaNNc^L1_(g1:R=f/I6V>*+:W$9ZXiI8gi]]Gf1:(6Jc5$M_cOF
%=fU\NLDGK'QP:=>?hnr'YcgYMMn4P2aLNrfhLc$nbf<B+,8Tq0itWA7)iKan4\;")_T.T2'Y'u*aGUZ]o#Rg(GA>ls$QC`a<R(hE
%h$8!Z.u3-u,Q%I.B.dN1;HS#"A@t7WC27\:=[:?*E:HOkVI74RGo`$A7@@c]]f=>K]F"kK'#oj-[b.WTCqP^9j`I?Z7@XV.9<dpr
%=)UCEbJKB(Y?\_8`oTV$I0;Ehe5KGng4b7tZD*4N_Xb:ieHQ=upM"X+i!$iT"B,XqFQY:d#2UC?X.9QA]C4Ger4BXh]rhk]6uY[V
%IqITW7N>766,'tK^>.-\h^(;HgooMFi--A6M0&-;!33K9W-:f=eZZp'HgI[ShVFa]S06YD4i_g+ga*_)7(c4]@t0ZCWdekoeO6ie
%@GKtaeO\:Pi@aHFdo_"0eNmLX\m7W'Am]AdfK0_%Os&K_MeL:0aEHNt,.eUq]5S&L0c/@m^&tHc@G1naL&2WFd4R@J8n7DXJetk%
%8TmrNMH">0lo*@Z/qRB%Dub4!nEWEngV2loJ_k+C0:#k9Hf3@XaE8GS8TSn;2Jk?u3l`:h>`!T#7SeiOPCLr(LND[d\u;PN>l2aF
%$c3BkmGaqQc$'=$:0gg$JOfQ'W='jnBgJ^+ZT8EO*Q.rhaI,j@@!?"*SPL'$c0k58YZS]=:pbSp6%4I\S[0q,?+<BA[m?mLMHXOH
%/mQ!:h4pXkS\?aU0^/Y@9Qn**P:hBi#hK<D0&Y:LkCZ8@n7tGfc8<+`dgd/Ll(R\kdDbjid3?tL4od5Q,e=St%h@FS)#ans/nu3e
%`]AhAF>CgCd%)4B^(BKP)*s)2*\hK7Et8uQ@a;OrkYd:p*sB03bbfY<!aWgmZNe4]TZ]LH&S2@T>qGj]p]Z:fMEN?4%(aKup*f'E
%SJW'P/6G0]og5?F$3l5iS3iRQ=mj)n'Y6mOf6X:?V1HWl4o/"Wa>Kfbp.W.:G"4OY#:@ih*d+u5kg%g2hALDIlRa1?Ud9TT5<5M,
%J\RVu'=[1HkDTkaS37\O0o9rpcXkX=<BQAu\^O2qK+V0N3B&Q$k$6G)[!XnG]65p<)r.toId'Ot9*=#[&JYYi>N07^22M!Y]]MP2
%bBRG\rOW:97hHp4M@>C7m(F(?_br2OW[qh\Rmil@$/'h]e@@[DP9d)Jq;*eQSN:tC^JO)KN(gebVp89go9bFsQ`7>A0&%$Md,n);
%;!1.F'\/r'V6):@gf*SdN%>g'_46G95PG<j>VQ^:,3h=YF88Y/0&kY#]0ZX?0'a7F@P>[1P]Ee-rn(K+3,pS$*+mfV31%(IBQC`/
%IQ(5Y2\uNZh1[hTN[^RUR<&\KJ0u5Y\PsFk?\rjgVkW.%3#;[eb@_CL.bRtePrP-.*9dAEc;jEuVa[/7bQ&UT6Cgc4'G`PcFY3f=
%!J<F7)25M+WH/BR5SP]HF"&N3b2''F,2/;A(F_L)G`-,1PfFNW\N$=/-2p3#$W%$PMF!cUbT@l](ib,\.46<FcWpr*cIYpt1.YX.
%]X^SHE1gH\F!5*Q:Sp0DQY:jREA"Ob$p7gOF%Q65T/DFG+^c]SLiY"q]lG:A,nX$T`*.*b1*aV3E8k,oa'tYsEGcsO]9YmUMe_28
%#)>)Gi#_@nAtFg"PsjBL,0o:k2d$UD3N5!_g4_L&;VfWTF&QdZK&jk\'YqVu&EcAPS6Z]hnh@M('Ber/am!1D(*I#Q(q4\f13>6Z
%Y<e_k";gL]6gEaC\3+7?_2=]fShB+sSr6Q#@qP&2m+tO"k8o42H1$h"H#<tDZlm\SZ$G<R9m'gM\Lb%@(DO6e9W2YMK**PniKQ3t
%$&ra>gmMQpAP0$PJ9_iPE6q[/5Z@V>6?g_DbMU1P][5f(;%1o,BQKR^e<[/o[V%6C4432RST3[>6/#QP/HI\[2O@@co@iB`6Rn'#
%kKUtI1'e)&/d/P<0"e`V&fDY,\J4i,[6d\U^c_L^31%l!"42mGRIlL.VC[;(q_$V>i`pT5i`/:79+lo\h.).Mb$Luj+jMBu+cFEJ
%;`m,Rn7'\^nDi),=6<bD>HAkI";]>U/`p;1Qlj'skOOMkUC?9i!reQ/&*@+fKOR$!F(pal-0rL[Zros/'?%G7`K:;]7%ClBM`@%R
%eas;feWFMuZG0\$F!9,uEoL=0Qr./-\NE9]XCpNtMV1ooS1Ea0iDdDJZcH$s=6<b>!1=$$k$0$/`/tchZP58h=6a#pL"Z)aS]g:p
%,,^qEQSX0\I\tDea-."l%*j\P@pFTnDseck.O4@Uiqqnr_>(!(r[4rL=d;GDNY?32$M)Xic%V9U0.f/)&M?P[qa-^_.u(;GF*HT`
%(Lc`.q>Z^5f7[Gr\/Hm5GVCZ.Cq1cKWB?C+_Ah:VkB,9X"]MSA=0G<..$?tqKVL-'K8LLPHkWK\FQ\?*(T;@.'KAl@_J1JO%K]ff
%!-=4R1J9?RJ?&oH/n0@c=;8<E+@*'UKcq6<oYS9d7?EGrPFFmr+;`p4=a&cE-.B*CNM+;q`ZANGolP]oe'C!n\M4IZ]Wnn1gqA6p
%bM9lE36B?lil2.0#Xh\@[KQ[AeClo;DV;SFqO&'7VFH<4iM=!=M/Oo&',Le(FW4+)ED$mM@56aCn.*0b<<WF)i_roF>Y(!7$pIp$
%#B9CULKfWoTY8e4(@48I7>?`E/?6Kp`#o;&QKXS@[rN8.`IuDGgFS6g(X>6:%F.)GLj.@$"W);>>+h,r!8IB?SsC#r+bX7j#RXh,
%1eGjL+cB'aSmD\A;7+H:F8fBA-,?^(qHMl50Z;9'[m8#FmM)I#H%7da#Rg')(mE`?r_+2aE%<_\c?tO*fYr0k^%Ch]HAg:cAFrI)
%P@+OR/^>NGa-lH5Yak&agTa9_>BK9rphkX,b9DU&k\fpJjOSI^>;Q@nOiK^!U.j:!n8NC[f+WEU1Bbppf<L]\RFr\L8otFa/=YS.
%NEYV?\RiW">L&dBDRks"WJfh\'uW/RD=K+D$caiLLKWu169ek]VH/?.(=?Heg^CqM.65g]r3kCt"8E[V^@8gqEFlV5&-^6CD@;1/
%eCOi4/aejnlZQFmLfsm+&BqR:\ah/,fG530oa.`P+VB6'33+Wu:G@]se/#.d=QkIf(.'8cK$kF)QjD7JUFg`+HV[^4gRtJO6<egB
%`JYD`i[^Z7(Hu%[$#J.bZRrdV,FkV7V%cncB/3]@4L+l[FX/pn\%JYU;,`1*G[[mh[0+;<4na=:5!O:.OX],`Q,OO79^)4YZ,LqV
%YQTe7^8&4#_I8q7C:+k3D=moT#2;W?o7XmpGnhtUF8ki#HTUG,0lRGN34%5*OH*^J\RFT1^=9]/&TNCoGN#]q/@/+WF_t\=lG6^5
%AN%OAin>_?TuC6*Hpr23=q$:WY,o$`qlcnd>!"^4&'e@[R=+*PAM(D=89aN][0TM35:q)7hEBD8@]L6lB9C_fa6,E`D>&:S.p&h^
%1=11qW`k1o/uDhC)E]=Gjjopoi2P8<Z<1l//("tGQ<H\fkD>uMj-CWN3(GPD533)>D39ek%(4d?mNAH>m;o=0ITg,Dp:f0niHmEK
%G:[c<PX00N.64O'6*6'7[W2&f'\'Kl'3QH'Tr-Y]8OP0OVkun5dPpP/\n,A#YftFGRhjCuEIEn@lVF#J.d'$BcS5@WD/\W;9]ujC
%/^OhA6:"<b9NAo&M\I(s__/m7E9q"@"YVGW`*pjo/T(+U_[@tH'\!g\e@?5>1PT3gKC<*\5(&EW7EZC([)c/I"WE'$jCR$1Q&iA!
%6"^=s5tM6>(c8Rl;=Q3j5t3r!-s/eAf,IbC;pg3pa3e?$'.nl>1kLR-q?@:%6jq^D.*`22/L'@s,(bObAO)3DV6p[DK:3Shg+cRE
%'dU0(IEc/dm@J1-:s^D:2c[:Pi=;];K:RQO^0_.Z6Q#a-h3h/n=111Fb_:H\TMYno>W@n*Qf+H@hp9fY+UmMdmU<.=T']9@ET*Gl
%Cpo4[<WV&(4!e!A]-D_WUpJl91Ch^`mZ<rHR)MlT3pDGUK=$ouM`Th`E,PC-Rfu\CW)XYo/>@>W]14To_=++_dRHc-+KZ%-lu4/@
%@%/1Nhbp]'%c9SM68gp\;g,=s&L^DPRZ4uHR;"Q=P(I@j%,VC?G\2^U5HZiL_\8i^1-:EZI"GlEUpaFrl%<K3_H[kq/5I101!H@]
%#?0\M0KY>dj;<CmI;e"q?C#.T\R!m"6-+^5;io0tYMNL=Z><7mhr^St*DVk;`3RI9W8uEQAaq>,cM9dW)uRO1<>Np!;TU&H7Hk8>
%'JH8f#XOVt4L;_#PnB7da#2/$Z6N89:+/2gjpCb6R.1tN=b&KN<\$)]&c%OHM!``\i%A9?TMm#Y?q?FHR0Sj*n^2bKiK4;KaL8"!
%7[?^mD&b+4h%:kJ'%mc5^R$4(j:5Kq*s[M$#t2aV@?B:W@IEAfOG2:Y$H&Nu?%Okflld("m-aL)Mo2pb5_bgYA;RPL@I?d]\n4`5
%+]!Q\.CPQnKe0J$D3+(l@*)3B,BWoe\1lT'P",im.Ag)B@_DOC2FM1-JUjTE(\1[)B`d%q\7:Y,,?qZVa7eFE^/2ioTuen=S2lma
%<S(*HTd;d3&^/s]I%W['GRG)3<jU.SM`2DXMZRp3g=V;@@`h3!6Vt)"J5[/6[O_9dZkYJgAGdu<@nFcsbG'rDC<\m=i:bT[Pd0,*
%17$[91%tpLC[0P\_8Z4.&nqSpjnJs$LL_l;Qk`eIoTuJbJi=A/=XH)u(:P-$h8#>X;Y0,Q7X&mCV$W+7]kJ9$iV^7S6(Piabg$8c
%9].@2a@L1+.7sRfVGf`W17SUkhWF&r-[Jj-\h%lo+qu)6,dlBW#8c!]ZLj9g!/48W:7T6'O2VI)Y3^LrK,Q2o;r:4lP8"d,6K71E
%]u="Cg,tmX/WpW`k=M0Y3(hF':E^mL!7Sd>$42lY:8^#<2On(3ThIuRQGDV$b1X/d,m*"7mD@4thf<TR%'LS1?`/'9/fS=!W(,<$
%_Kc.c5c$jr("k#k&?rZ;q]1$j&q2G,J_lH60(*9]3t5Cs(M_=QH.fFV2(<"F+VVOjE$m6p9,fg@h(:_G03P<k9EtlY*5A8Fo>\qo
%Fe1R$i,>pl!E[tU*sN4b`?%k2O:dX=b2Tdb=OA]hI">$_1K&`?2gq^]rQLP)MqStb'jllBS7poifkma^X;=kkI!gV%7kf6tM[@6S
%fi<"WYf?lP"Dli:m2E5/![7)I7Wu9h3P'-1Nn2bSAKB`47"I@*_cWZZXf$lXaDEm]rrS%O9"4n#?BF6ASkFum!RmBa3]c-dZ)cdm
%@tWV=3:j\.@NWZ)\n-+'9j:h3P!spX\$_g_XkS%._rMskNP\ja+q`>;3R]/u^$@rQKi-2&-/XtT3mK;Sr@XQ`#9*^jLbn2<2bK?G
%e]L[kLkSqj5B>-AN9XF:GUIB98j#uC.A)0)n'-b0\5B/IPCStEg@njNY't7rMHS[8<&qr-#7r\HE5T5s,IfR$C6)l5LiRI8FlMMp
%!a[uc><(O^gt%M`)HE+g'FHc)B3'7FLlupN;BI%rO,YjsbQ@57</&)%d;G$#DZ`ui3)^%lVrV@^EbcdW6n?hVEFhSde@ak`@+H4b
%%"0L.%q!e#U2?o4-]p:>cVm,LSEK5AlcPhh[h,=N)2=/XgOJ-aJTFR;VFLu+9ViR'/X,')r\D$j^pc%^D["3i*;^Yl"C?F\#ssHY
%[:'<4pneY'[1HG!D!o.Fj2F&9:fJ$JP?*3p-t_`K^fk2-+@2A:P+g,C17?5CeEjOf^ljh)"PsfkU-U`^r&k>s-qR%)\h4(j(#Pd5
%p5juaK?CA?q?QDk$o'5g%P7r@1Ke6ta&bD+()aF(ljdp1Uo]h#eX^)eQP]gO(Lo;*`-<PoQ`1.Hlcdf0A9:U([:-qj-A:0<#M0q:
%Ur'Vf@AgIEMCD*("Qu/9M&aUK\iqqC#@K7+65CMjYP?oY([:J#og=bXZ)_NQc(nIhQnSTsc@FZDNb@Di![3:A6+2Z_"1!:]P#bAe
%Qo9A#a2=g*KH!G>(;QqK6K/:[^jIgGGdTg=OYKe#22I7-6JhVL=>uQ`4Gu-e"bHqUE`/+d\9Bh;Otnj@M)$)X,6$i43^m%LI>?hA
%.q^%o/G>:@(p$6SeR?TW4Lds=[q4E+S)6BWSIgEO/F>`QKjZ#A'EVFL5inUiR=r]uMTPYo$*3+%"%%>D'&(ApoQkLle@X-@:YMI7
%<'06BF.Z6G#dubj(+!jB2;bZM*Jg)b0G`2A`F9WWZ8K#'lq7m^mp[uGZJ[nqUn$VVE7q]R@i],0,5h*=hL(st/B?&iK+dB!8Q5mV
%FY33\dd4Oh2`g&lAVu9X&Ie.G."&Z/*S=0*+;P,BG"66%)'_*DRa\C1,XWi*bE`nM#UU6eT,,%j_ZR*tL9pXb=5YeN$gb=BmPNSh
%I<(OZid8[Eh^j]***WuPY*m8/,IlLtH.192KX*k[MBAG3ro43uCBl^Z*JTk<<$=5D#g0smEM^1N6S5o_Hk42mq)jnrVM'DC+"D<i
%p9!&^CriqcVs6-1$,>^GWqbZK5=7NIC1Aqgg>P!_fK!UUeJ2>k4Z6MpEhF;ZHd:q#>RhAEE3N>Z2BsgsCop'QaaICLj4Rg[ql-(C
%MB%^sC?9AB\`HSq!)kW8QaL/eD;cOo'CK?4?@psoMe/@D5`c0l(=:Y(!8YV;3l;'iP#/o3$KCPS6GsF%5NY[7@6NuF'NJf4:FqHW
%s&cV:gRbCm?""N+ZA]/LVj4"uTgG.^"&-r5!d9F`_l@a_a+;l-Oc*e3n[P\aCsP$-_R63uI=<>57@Sq>;6i%k"!K"]29V-\!`#:k
%2+VJG>Yc$>]!b?G*$`AGOhMcp-R:tfJW$+>j,h^?+X7ub.UU"f%?$>[)FqU5NPQ]&>+P#&U)5!E2q>PDU(p*;\G$$]5e(MNG_a/%
%KU:,Q3&E=@TY)_lbpi19&Vc8Gic.g1p896,?9:dJg+,t>AP'm*`-,8$!ThZ\5BV1@8a(aKJq>-ZR*V[4Os72*5BD[pIZSPU7R=6l
%6`O=ngl-?3&,`['NW\*)URfrT3(np[nM<PdS<04FKtIS$5<\0eHGK^dX2FhA$V7$uR^KIphhNb@[7Qb4Q"[RK&.!O:+.I0B#d51n
%P7T+c"(HX$W<Y;A9"B2Wl.]c`F)H)!pWZ[u]:_Y)/I9KV)X9`X&!]Z[rc-Dd>7hM.]ENq,?(:iTW([:G:/c$)?8dM?#:i2%EBm!@
%6u4PI$-6[#22R5`H$DsZ<#-ABe@Ki$Kl]Ue?FsrF.G6H2:bYL,+&6CWML7%s<(l4s'iu4Shh/uYfkm5A>dV[5aDdI"6MRp$`V(u=
%P@NQKb0[(&Z]eT;fMkoE+(EbgOCKX`/IVoD@u?CBQ&1_La<=\=`rY*O+uH3"K@b<+j]EKo[`dCZO3.!9W[]?'!g5dSpdh.HaLG[K
%GT\9q4kKF;q:>ht<KMDk,<-ok15Z;M.ZK:]OHu:3%tr":alYCW7B8koWNXYXk__@Z+PsEfgr(=)pa>\F,Yi2A%s+9j#D_F':m0n?
%gEk8<c_;#'(XK]WEP)tTgc\_l3bXdI^^kGZ6X15=`[i#mCe5uqd7mS!Qr2T4W<uU\F\qCX$^PEA)tWl6ipfqJ'[:P4!0oP<AUfHA
%H?+t6P8*,X1`YCo%1_hMmp^(T!#]6NqY"WmfL9h(B/2Q.>K3C'r*f7"4<23A>jd)aC;!jl[Z[][Js9CEK34$@)VPJ-N$E?Mkq8hF
%BI<p+!Lk;QGEDrZJCT\pe7\o>)2Ytq8\@4TORt[LUuS\1FWq,O1=;>r2[25I"*/QT(%8t<.\a.P?hBq_,O7H'*(,+S:%`LoGUqRW
%p]gJ?MAiEhLdbdh[ij?r=)O'3"G@m0.6]\+=F7gu-d_#k-iWdbfLuC,Qe5:Ibu\b5C#Me^L8AUh^k$t/T[]qBL>eC8NUem=g^d]:
%4^g*\J:Nj#%teEP.(0dZ_\DFG:*lSn+"CuDk$4I;!nbOSF>3q:8as/HM29r'-EJ-U\Es*CAMT><WZl#,@+5/r5cTVt`.Mp5H*A3V
%m,1S\^]gZ-Ai`\_!=CRANP#s1:Irt>\0]:o,maQS-JTBcU\_E*N7g-3DkpV+.Odl'1Glk@M(u-BPE,cq#elK"SIr%ldRjdk=SiZ8
%IM(!/_]'5SC%41V-R=(?e2ZT:S4WJkUl6#Y3$=&#&_m9Hck]7)*Y3O#9H6J_;(t#I\Y>'oOtTi%jrV$#"Ln+rA?]s;4'4:^$Jm6T
%A%B?*B0XM<f<,`X>7!TO*%H/2-F4@2>gEFW,!cpElEWsb!FGnA,h#M$0\.g483GMcGX"am@tQJ`]%!]9"1'.],)/ugc=_mpAgL%Z
%mAr68"#QRjr?^-ffis?r')1MDMLrSOOrR=i%M\>Z#CXGuK9^B/J\fsH``4bJG0FcY4&Z5K'sG99@d8S]"7pJSkfg]Z&3'<upt2$o
%&%51)'GluDa2mmP<SIS>P-]5P1!,,/)4H*[$b4d-]nt2"$NW5%k#-Z\mP$B&l`@pj)^8`tDt4Df5d;;u.Ks#m`M;Y,%GiV=27a9.
%:ciaQ`0">g:U?!bEGR.&fF2atj$73K0r@AZZo.4Pi&s,LS)ih]Ch1mpO#X!eIPar&plpMlX+]Vq,bh<lB=&#ULI4BgH+CsV&V+ZO
%#On,&_=`\FS:,<"hLcYX*(.FED"r8YquMs.%D[qiF9'nNB(I&ZJhGofhb):f'AfWcpgXGVBe<l$WcsL7pT=\%l&J9fW&WP6@cV5"
%fXc]u6>A9Z]qAoPL`r(\15+Q,KVEflXueD4"0gUqenr4MS*sV-5XgD^2LMQDH5jCT2(02G%?1EDi@G\,3XKmX9"#J>^/1OKp/M>?
%@@)![[$-gXTa)hs!-ubRV,?F?Q;t.tjMD`V^sb%G#t^EPi;3W9q0@p';aVM:1O$YjO-X:bSDj0A$Q:772CfgO0fcTik'@;?<Kgp=
%3Y08E(//9QN`3?&cP.6n?JD;n;p7[llsc'F.[9X**@2&tD^OU#.-`N:+mp+-,?l!V:KWW.o)Mg]lPDl>1nUFGO?1L1YZkO:k$q1I
%B@!8Rg\YSi%'^4^qifhd'd,N')e;BnR>o4Zk/B"bQqZ*a.#q#rjLAuHl2`.][3en_7q-P0*.*lHmikBi[\L1b@(DpL7?`HeSGO8Q
%\0_@oDL(_pkN4a(.'%r=$AR>(,pXa0]BA"@4"0>+`B94p!DL+kb6im9BP&=K'#EM4"/"/D6?AepM'Hn^AkK3.[Hj\+0B2&#?lc2h
%-b#3i%tfRBS&/%X;@jK"dJ#=(Oo8qNU@5+DFD[Us6eK-MJruSd]DFKLODr%r+hc4^bUkolJ7U'40U-M3'hFucH,KUA/E'RcE2mS3
%6_?!jCOn'n?%Y@I]e7@M+5[`,+admI)cMIoK#.j,IQo*`63%'Vrr+m]f4Z:CTN%.2o86EG$<BD.@XNf1+@6Xq&m\%SSkTjF&HJc:
%N!Y<ZG/&C/KbA@$*X=HY`p3#@;igdSbqXYIf/(94@UBZ9/&!oF<9T<_+Ds60kAfErif!m\V%SLC!\a\P`IG@mcCBf(O#i</pcT"U
%TcfO,]QKcNm;uV,R!4NfcR!"!IPEGpi[XRLWL+VHNT=DJ0,9[fj-6<>RPd`!*>0M"*mEW^S@R*D,!LF40Fcon),]_UNtVj.4A$m\
%*f`OOA-M0%BQ=u7RbF?i8U,to:`-_T5qnN16Yr4u+[n/JDUBLo&_`qsT9mN1KG?0c"=VZlc[rM8qII9@W^$oKZ3*jT2(G`ASlpHN
%-s=).[#S)=(X+;OI$."%k]'T)Kko4-;2&:H)3R<UN;GCbM;&`HA(5g@SfJs<A@uLfiYsVSXBTS:9jr3t\^TsKJ1WVKROjpuJA>I)
%0b_5\"s%L22AN/lQk#:"51Oj25iQVL2utXN/`jl/e`T5=cE6N?C_:#Q+H;k61I1*a`+a(VNSRt4@SQ<_$\?q@FOuQd'PI$R"N@Mf
%2I+QYM[O"Vmgq:Q!eH"^n,#57IbHi(NsuS\Bqa+0U]`1L#OhIll.!G]>:K;;cX!;3))p7ml)[`KU/to\CY,FG8I&kRZ'&pgck^94
%?4tj=:3Cq(3.p3;F]AVX_*dPsq7,.P`dA#EU')eh,b2ZbBS76@SQPa?RDmj&[=c@JZ%l0L1cQrs\,c&dV9#l""^MCW9Qr9NV:_j5
%/-'8Mg7\EjSrQY/"uF^qcHKgMZ\>%[<q&Re*YpfaF<IC2S#emGkG8eVS[?HZFp14!/#HU;4DG.Q1Iq5s^Q?g>iA(!.g!Y'"3NO`%
%8C,M.l3QecQp_-s>b&=tSa$es.3bs*<1[kViG.-["-K;01(<VC,\F0==bJ$Aen/T`E6%#YAt[C@lj-DWoFO.:i_3t9iKD,u9+pA_
%Jbs"F_jhu09$u:c@!^>9&J19LlUl+_D<n''m-CpqVLO^46i[qHhg<r,_m7ekKJ^m]E0@P^qq)+B#/s1MmuDm-gb\=--n6:sAGSM9
%bL%'_$b4lLkg:CE!7n\0,c2^e6Cf)8ERP7GDDcER4</6Xgd`np>D9LYUq(`,'@W20bSQE1DCY]kSYE8m"0bc+/qTh-I3e5H`!-R6
%7=uQO09GPT.?#`%,3ub&Ch<,;UAVc+\Usqn_I]7X]7s0'HSB6N3d?Ad0k]BT4L#G]NFOfUG\H35KXhNlD!7p209d.2VY&nJ;9T`8
%E=lX'I8rfO4lgQRrNI8k/3A1_-73Fj&VhgtXt98T7c@H<N+hMYMBL,6(8f>^jl"6*gmq#qXZ>2l3oc#R"$EOS=*@pRc8AT0q#r[q
%Rcm!Cq\5TYKkXKQ'/rhKr6bdkY"3dCoc'mXa!pe\SDiUThW/*\-EBZ.>>jKKd[/i_"L.=0(b;A(/6di3aqZLjSH.m['5mC/+P#>4
%e(Msm)T!rJ(>J$J?:J*l;.E2s\e5qjNEp+0`HP<_h1P1'F$ql!ajRc=42GMS>-6Z4bc7sb&049@M>]Dt\k[ZO<0Y3Y%W=Y84Zn&-
%7Ah/Z2Urf_mUNgiNcVLbIWNRD0WU-h!T4Zb.\'&eX<pHP"%V.22\\NkHR'?4LQJ\#2X+sV457Ri<J_oCE9:'P4\!Q4,VO3K@P4Lb
%qKq3;*2KuseJ$&78<+[$(LmbmQ,J7_LZftj.NAGG5l27AP4MU*$@Em.UUV`n$91kPG0S,Ap]IX+\9i'q.M/pM]_h-:b\o8lf=b>q
%&oHW3`#$)3'Gc@hb:GbBdmgLnF-d$7L6$W<bMfJ"5/%;r8B`80.oQ/[fB>(W.Sd;0Y<%%e9R(2lJ9ES%Adnj9F+B+0p8Y$sn$E=r
%.QI!T_M;[56qAah&@Et0)Y+eu]9?JtgmSdsg9^6qWjYgfjU[la;jSk4!)D@oYrp]:5i#($;s[!E&2'(4$<SV_)M'DNE42f`?bmH]
%,7'E=`*s;Pmc\lI,^V)!7)'N]WVfr[$msW?b`/Pa"?j8^'4%mt^:O_XGkGXNd+&]/+,[5b'!a"gT-amH*.aOI)rZA(ka`;&o%5R:
%]oX=D8PKUGMH#\9r+1:C81a#tD4$^fi'WTKCfC8hP>kPI5O29cdY1C:(pr$[3PkldoAKJ>1[,Z.Kro)#382T_7"Qa?fZ5K?:pi2i
%B_t-<Onh\'\$<eYm</dq;J'eo;?QeU?jJGcI@oqmV:\1UE8]]]QT26S>$mRqG)GBF@ZTU0badm+RBD8:QTSe%9-I;T*5l+[&>pd2
%+`>,5WC`<4=$HaH`s%rgm2:OEm5mi<fG2ODn`N)i0(Z_E'SeqIo:?hHNhR[J:$+@PfjS/V.0kf+,'j9Xk<4\<cJ9]dn(Xs7@.OW#
%RATYo?+iNPJmcsg+WdXrRUPH'\_356eI,3\:\[&g^)3NEDRX??E(ChQ7jP]lm0`5t(5fMp(<Cc6eFbBmk_cqoT1!QA``SY6%>c#^
%]/D0(N`5%(X52hS7[=Y`^s-GimLD6cr>lh]Wb?M<8n&fL5^6dU%efOrbJQskljsi+cY)QX\g5I2eBS_':>J%1RN-368Q-nkMi*\L
%4Ft!1a@<V:&+"mco%2SO@oIVq8Q[J\(gid^65=%lkk$,*>;8o8]go\lV7M7]X%2EIZWsSDAST17#"eDM-;sq@*IBhB,nV$6WHjY.
%<LTRef1h1TM/d,$(G/DA#ie`7)J"UJ&d$F!eC)\q$d_8n?BUPGCaGZrO%2tlR'a1H"F35&.1/^9ZC<5?Zr87roH-!K?'DX2AT^W\
%aXPTb<-q29FU[I!+h3s4<5b+Pq1n(:',EekESfY>Po>5K!#7:^LI78X\Jp5?lVq`JK+5#O0?`-#3,q"^F<f^c<(R?#*r1U)@!RR-
%=GuXW8dTj33M`CR,\rL-4/l[n/=r4J&9NsY1.KB$d;0'H_(k#o(7e:XT?:"h$pZ\EQA"e4ePLn2"gKRS.cT:F6BIus4cM-qR$)6h
%]SFF(=$:^[MZ])1i]:k@M":AGLcC>a5B:^.B&>loR1b0BEA:WIW)M\*hOK]QE=[luW[JRT(I)CbK5=:]Z9(e^>;m/7NU8"^JdaKn
%PltPJ[#gB("Ii-&S)C9Go@rBMXA#lm:*_(288Ys(KhVn_>p05"8s?t>f;81X/SaXVRnQ`j<*MA8kG+6nYBo"5XH($S+Xk.Q9reVm
%!O11n77AsWeVd"[ICgrjGQ:#13hOGe$(,Vg`MKl?Jh;F`dh^_8DkK?\hsXmocGWt88$-W2B#9^#nLM8Lc-+&hJ7[:H35kiqcN9P-
%p>J%DAD4%8XK#Pf8Pk_d]]LN39pq9j4Y$h`R&X\(6^NYBdT/EAMX^u9&HVe&br<h5_ojNl'r8i9$SC]pe#pZ,8SJ6DooiB-]'2W2
%[da/D^>e4H:QOhXe]o_RBt>#QN1hMrRnak5741KZ^bC]baY5dIU^UkN*m+s)j,A;?O[)fQAQY-mT;9<`b0-3-ak.R9Z!%E^&WIK4
%eQ@7A(gL&L:A4JN*70^YS&^F6O3+[mJ:d#olT(dhOq8R4$2O7c9)92jNa"5ZP#][UZse*3,)2>KZU5!DXW+&TLgpNh20H)@-.?Ms
%8nX(mROtZCVshLQ>q:HQ:*>7bRRdibA`BtKiF.]\hfB:eVQoH4@DN_:E3;lQ#e#ilEN3tQYkWl&*?%ARpp(!-),0*GCBo1>_P4L)
%&]F;.iUHCh/gO&Q=>j=t9,T=$EkDo+9r7^HYu:u"AW43j.MZuD>c#6@>`1]fcaYPa0oHL!+JB%T"NB^_5R7UgXrE-V"9PDCZpn_9
%51`XEQ!2)EcuNE1jhE(;4Gd.lh8Z<>^".+a8K`Q'pG0pOINkN4gs1gK\)R0d8rh9W2G[c`G_g7rR_RI<"In&n("GIc]2tL)%?uO?
%d'.oD-huZV%p"gKnnDd1X)=1!&2b3^LpdB_KA7+D%O,t`J=KOaiL%!Bem(@A6^JHPRd@DAaMrK+dI&>Oo!LiF4fOp!a(uLd&sgja
%N%>MOo0;jidtJ578KdHCGao\A#K8hOnYFkG3V0+A8L<OS#"!42.UVJ@am]F,;OgVQM0+]CKa:TX^t]tM4>IIL*-eF\^/q:?ohoV?
%5unF([klLALdd^he`t-1iI5O"r*f;@G\Na1>a-m9qgS,gqZ=^qVG%OHmY?P77'aOuFZ;>bZ[4cWDV3_Y"T0VVQ2!)lPG;m#mLBL'
%nc)GrL6<);iB)B;,b&NeI",Jj`kc%1BWq93qEbM"'_N@mPhA27/F&[mK#ZZ(<rCI_ks3Is1(jmI^-EcDU;D[1*Z2;,.V4hjMc;$5
%\@@0TiJS/DqGqLX2'3-7OT1F%$qNI7`DOaR'W_g%D@YR8Res>CPToZYoma7@DS)/R=5)TG!56:a0jkGa.c[&HJhL)f/Z=/&&g[?m
%%2t3-`S+4p`C'STQ=]l80'7%X@:!@p#FLqZ);K-enZ>`#nkbT_X0hVuGKVS#Mij,6)%eCMnQVUUqT0LEctH!+5Z*r-h!,6XI]A,s
%2TgBS';GJuQE[&"0;?gD&YJO/jAEpPLH_IV"RHHqMeCh3;#jN,[H]:U,q!!`U1cGk4MOG!,F<b?$]rXd:6o!kUR[>e0J6ns,srh<
%@I.(BeO@>?[n\-FQ&[]BM;*$Q23hV2W#!N;+@8ka!L^U`KPrA4Z^!(Z$<^&N'm:e>_2@JR\ud6A9+pup15fZG-d??<<e$p'b"5ku
%;2bi*'sOFbQRUjDXQ\&-oR"$pP'>K`Dhl4b`;)hc@ZDG%3Zam;-f(.^`>f0=/Fkk^qoS?RMEo/mA[7MiR(i[Olm:XZ''qc^J"3])
%nk-`D_)%'Kp4J_8`=elO$+XUJLu9OqSo4^A1<18C&Jb0Tm"qft<ha8te:b]".1"Mi#Ed,4;&oq+")m*!5ZM3COF^2Ab=(T+?6gTt
%AETZigCT67'^mV:6,s>C7bLBn=K,U6E".aE`<S7N[KRj\ahsa5-eK;0(>T[]=d8b$ZNM+BWYX/8ME_PG<eD\V,VY<?Ik<J!9,<R8
%&\.<u@9\[Q=TgA^JUq,@3/NP=KtW?Nk^o$NkRXtr>)OXt\e[0Ii[9SGW(eX'Q`8:55#p%85c+OlTHPEp0#_GM6)W)G_N#"N1eKjT
%k7:bE#,SBqQ'A=;?s:+uL4XQj5U1oJE[[%dPbX4G>U(:,"f$bnKis>_5`8#o3D#R2O%5iX:*X;D(t\+O/jQ1WWuO9fQm-h0JSX-d
%OE^9D,1n%EpVtc1/,(1.OFmg.KC4$m2AV]1LrY.jDG^hs+9Fk<RX^nh%fp!VZS>;h(%N2l9XkWf`:E/3ia?k[]gPrYcmP9iP*]Zp
%Aa4(G%qu#s%O[^W//6:$JL!LsCIkucG1RuL\m]tB0:@a`^GP2;&Xt2fX`EPb@H:=V%/)aMD0!+Knn$DkmV/s?"ngKpbq7W%AFsF?
%?R.6u;i\D)+6bR+ht_X,TR@Arf:YuVJZUsk:DWFr<.t0D60/_OV_ctZaD?(MHjbZS8W<(-M=?1[8h:su<X^.?-p*A-qu%#%/?6ML
%.dXi;]GZ8L+PDBXfg/S,&n/C+#6XNFp!"r,T#?*gU)I13+j.TgqRK+p=aUNe!=kWr:.X[ZOBS#,=!c^S\jCtF@P9-mY"DGsg22Y@
%US0*e+T-cl_`)7rF_'tS\P@l#?-P>2JDMD_T.6N<p9jG(#td_C!3-D59ctrS%+e9AB2ns)`"s=>)B@VM_&fh>;%urn,\N>Y0,3R6
%"HX,D1+da-]Z+)>+%P:OT"$K^.mj.8M?cT-$:.poK=^ZN)$#Nh$V?(3ftf(OZjs1'R'W&phLf'?BLdCjp.^FZW.G"DPV//m8?%da
%GD<>Wj-IrXdZ>lqT$Y.S\^4u^i"4:q0jSs0Ne5pE7P-/Oc7kaoSi]^$;>kH+A#^.V@?_[C:M.l%)[$]Y=Q`7\]j.-5gPPiq8eF()
%AG8K187$tf5+NCc^CQMf5pOj3l0:XK3e`V<<0Uq/;8ILWT/th!"mZ1,8JadgCUO:uCZGURb*0XK9]bL]iWCas=W0&)8!O]=o[`"L
%'R<ZYUO`j8)B"qgC;<1'"Y_d\rZVRODqcc+.:dcP81T=k#,iuMOkA("`<aoK/pX`Tj,Aq^_MWX%o6LU,,3;oG&GjKqCf:ZIW,+/a
%01t)+:b"uqEkE'WS05\JA5l&':;UNYi6Wo0=-]QKWR-<P&A_S4-mtk`1eu3iUHC(tHc2li=IbTG<[Yb+'sW?3V77V[hK*$TY#^*?
%YU;GU!)AMO3K&iK8>uNq,Y_0G(A49i`6mnm5)9QWS.-GU%1$PpJluM9frDlVMTniR@u2t0MeI$/Zq*f::Lm=ES>?M_R,nSBkhqAp
%C-@ga+p^Phg'&CLVmJmrKt-J@&d:OtBQ'VAEYcf7=b<dL2;759<P@@2&?)<QN^1bK-<X2KMG[o]NXS=?ZVKn,C@QQuh3):uJH(gG
%7k);QM?)736ejld9RuIJ"G2dn:!/st*F#bRonnn[kt*>Z6"uMq/L+X'AX6LRG";U6LVOPE5>Lm%,X@!'jMNqdd44K[i,pK=VF/@B
%h\18B3t*K.3(e94G"YC1jHFaB+c=986.=T:f]/5&Itq:gKPd!fJ?lKAPU)HWN5;Yl_SHA`+UUOE1cr^dNEh0k;3#B*4*#NC;4f+"
%?!kDj]3[alW/2mhK>7b(G%J"<^e*3-JlX(O!XN"PgJ\(n7rJ%u&gtc,KQJ]+BY8I<VsZ>LZKFWr*cXTJB%H$XP5,+o7d9E:?kV0!
%P\Y#3"p<6l\5[-KJM\d47?LN>,]oA>,`MJ[HC3CBc1cbb,Uin^_YS/,?q3GnOLN7dIlfc6c((0=RD\lUUe*p0LZ.#-Fu`Q-A-9s_
%b</bt8/mdRYkttT5r+4G9]2<p+EQV@Ne%?oi0\;J0nV39]#QGJWSJVp=H#6i+Qe?\;oY)2R"N2KaV;X_So^EZ6O#bs?OX,cjGJ1^
%IlF``7EAO)EgW?;n>b^6W%'n6^.15/\Q0Y)m.)Q"&Ap,]'#Qbc0(2c]gEpd.!m1\V*8$;TW&)=C#9FRGrXH>!"ta@3p)DM:F,jIH
%h!uk%dfs"d1I@gU$>b"9.sVJ+NYl((5>YiN`@s]'rfNb<&fr6P3>k^\;D4tXQ6UI@>l"e1:=0f*]S0H_Q2&e[!R">?cNf.SVr.%b
%XINt3G-#`V5tEa<<K:-X"OmjZ4:,,b!L:R('sd-jj\R"V+?O[u?Lg`Zf3uh.5l;QnGoe97D2M2N)Fd#ef]_l01,)]i<J5Btirae:
%/r.hcT*:R5.SSER##Bc"RP-\A-eCaNK-r%:B)t"99I(1L]WYgX,EIkUd=P(f;8/V8(arLo7"nF(,*NhJ]GN>Jdtc$1B"6ot/L3dt
%n$(m"1I_CeVV$=\,E+e&T]GlRi12s<6rbo]73kCdZj@J/]Lr.e3?J!``BgSEjM9/nNbiCiQj6W5Rt6^ROm?Bo(-1L1"j*#P6S]A]
%@Aq9cf_ZfaGmoV$C4n:6\6tGO_Ch)k(:b[3gM'&,oTVY!r[8I@&NCVNS0@!*dA@Y9*-sRfU+6p<<$lX:cB-,J<4Y"2En"%HFp^W4
%eP+&e2Zk7:1;S,@>W=.%^eb0aDif@m)%nsN"Q6%?jAb=hO42/%*]q7_Y6).N0]ZCV8l<ZlLlt082[j_3-$Yb#OK28k!9A:P.(^r-
%32knk<VUR$8;cKDP6R'+,XnQ<`,:eCB022_O/),#Tt"j9FY2V?Qm%MX@4$bm!frD!6"paO*#Zs7q_s-JcVfPA:rcL7a\5OO/]2r?
%3h@Uq<'\J)?U@dD`>f,1$('b@6B3ENr$gWM&p.GI*!\dg.Q\Os4@,K7/9p2Y$s)?,.7BA_Br>Y)j:ZHq!=MhC(AFptNPj7AqeHBn
%%Smf#/L]%,6ItME86o5=[E`a2UF*N#c?L$ZPei;',;_ubBh'%r:F%u\VJg8\fH4A1686DF.#N"_7OID[;I0K7S=IupcPa\S;]ZKQ
%5plBd:^q-@'ODdY9[8M.FE%S1KMOc6(\bJ<8o]ZF>]p<'IReSJ2Hu#3LMT6?jYL:aj8k8,W2761>_`3W!\4aXJ9^8d<Et)c$riaE
%W*WBcW5,Mr+_Qnrd$Y0c<tWFA5#N75-_*dh%d=b#3;bG:I?[>A>*V7=KI3k`L?Dt(nG#iQ)oWGN/1ha&3#mMaaYEr2:LXM^e8U@]
%MCT/c3=7Zh#8'`5TOo&#+@&^\#]UCmV-o0'Nd-F,0\mG#Ja&>;?Lbop@1"*Zae4A0T%)c!i8H,)#gs\S4D@YJKan>KGo$<r1.ET>
%L,]8FVjnMh$PhH9k`kEj'%h.)?`q$I*Anh39"nei",DL_&em)`7Ichk&ApfaqicWS6#_Et5t4oE-GI>Y=?*"aG_$F(WC0&M=/^)r
%3&.YU'Ib"3@iDo[Kh$h"<h/[C'RY?:'-9#;7o@.^NFR3?!=99_(XFeP&K3oR_$Ubq-!oC=_Ll=<cN(h7L;,-%3""/9\UFf+S1<)^
%6pue8pW0d_r#>grE2c=E#014o\b>)ElutJr$4IE.;PqAf_$.m)Y**jCYi*;1n63GThuPCF<3a.n(\+),JnK);.<-J)eaj5G0m<`e
%'Id$:5m/PU06KPLX>u4J#<mt$E/k,T)7ggsHk;p;@=\sKL7Ub`%h+r[Oh_27IQJ$!`%ZBC"WZ,>VfE(LGbiKq*7rMnT96h/1C3K4
%N8>OncNrH]ABPkkGSQ"Z*<3X.4&Y%P8HJ,/htWJr04q],QcO?&rha:Z*lBUbaq;J!JA9&GBXlrfoBJF([h35NhaUVmmjc<eL%6R+
%Uar"O_b=P([:UUZ)rPof9^ocUW,UYNP$\sk>IW]&m(6.t5[5bh2j>nOLf:8@JaAt[l.lGTd0GGb1"8/"3CMbu^'>"C%HB%=mt!_Y
%.6L&'^(9/r'Bj-2qZbId?c"V'DhoiFJ,qWC9n5,1lJ!h<p^HC+3]f>n'^3/lN6?cM3(%4[#ch/`hoIer'[teKLkO9_<g7O`e2&Gs
%%-8E@'WXBSni[OB^P5sGb[r^>"djjg#6Gq-5X&d9pg-^i/I+HP'M:S[q"B<l?i]*#F*`T"H\7`+r6lA:)dt<4IAZ5b_2EqN_7bDs
%cJb?nCi?M"#Sl(J9;-#dp'-)$lPZq9([%URH6[e[CU=14(alSNbtu(s96(06@+%m.r5eK+4@hfoc/WQ!l"sCRoL?b'V-#7D2gm'9
%g3Qd&6,[`)=nZ;.8]3AHDmUW%@ts.eeAA/'hM@Agr,G0s`WRQCVPe\P<r_AEQ?T:E4;>rm_XaQphM@pO#,XZBa:9AHGX^g#/e^s'
%#38MT8XN>\i[lQXX:]&0hOQ,]hPlC/??*XH#i],h#@eB#_C:L(QWk@iN&QIc;;.c(GZ/u7j\a6@]Q&,ZO;X';)DZ?1icnth\RaG/
%a.'#l@%_2g]\<b9=UGa;5&U)'E4iI3(fSBpbZr^f@(bau;6ZdM#o%jIi*(d'7P(H=-pom6;ZKhU*8(h^9b82,\Y:e7'GjB%,DGY7
%I&%t%jHBRKO;ZGK@(^3I`::im@9u4fk:#1$=[TF5K&TKZ2.IXgMDmD4!e!7`k<fFSV5l)'2auO8oW=d2,A)`d,%i=\'XZ35b_"jA
%#\]XS-j7L.)jE(5B.2UNXR/XcnHOQ[+q2DZTr);4"lep><6m<2Do>;R'2q30.IrlXh(oa`O;[=^;7n>YNmO[-`L@.?k@ZL*oH^9`
%.#^)^@%]1jDc"O-5DSdK`!C*^;7mKj:?d@bj%U+bj@Yu[GZ49H4]ZANJ6@hZP_.p).gP%X:3!pTQ6UIU_Ka\N6+_m2NRE\hnoFll
%?'AlD$\gUJ.]Gd[US$gh!I.ZL,?Oe\1?Xdf=WtF4'+.d06[0g^M@P=aGZQ96V@)6Ui5YnHDYW%l]5e3O_='ii%OZN0HoFLY"KnWT
%dCW96ST:)4]Gh!n7htB.4;S1X]0ge[.%&Yr64+B/*@^bMJ\.m@4G1"9J\,XM?G%`R'H<hJQm$Yu$TKNKRKIcc_"hr$oE^p-_r;#<
%2q<f3gnKFEK,Ol,S*V'WL/#u&fhF?b"l.-0],_&M3)3D9;F1^WX,u.bb9V8\FNA@>g'^fFQ:fmD/;9`@0cg_<-&Ca1+M0r%]Pp1'
%-3B(t-t5+I'^N@UFq^9!Z4sR5hE]$d'X8SkY),2,m"T5D,UGhEVXt<!3DdY39M#eUVhj/n1I?ZG$JCCi%)t_7aDUiFS8gU/lm?b8
%81HN>\0:sbMV1]1*$fXM0Y8cn`o+R69IQ&iV3p(,iM)c>b\dcfjcCt.m%sh]K`7mBh710YOCSRLc!e&*X+GLn_^+07;MSR`8TW[)
%&q7@3V;QN$4KcPEK+J36];'P%b(6UFg._]B\P^joU2WQ+.;Ur2p_]M`.+YD1hC38")6SeQc!\.TXeH@BL$]'jZ7AOT]8=B)$rc)%
%-<$"g!-_@SSC#Hph&p\8N>Z[o't9n#$3fj0`Bg00"a[1jR/7BKc.*oB'HQ9DVBE0p!dBj"UG1FC\=:@]L$oRj2as\:&J<f9U@;<Q
%icYu<S9'P3JqZR6%CVb_ae0/CfPV2qpRFo-L.=3;V.9S(05*3B*4D?t8&k'8ghqKt%Yds<DDmDD9'dhA$-!S&2m*Jl*Td,rgho$8
%A3i:3ghpcdBEYc5%4r`FfPWIi<!>AJ05XX!Bhi*K8Q]M1].1J'HmsbnL>*.@K!TO+q@PP3:5C4KDM#KAib\%eh.0[NdMr>CN=AAn
%;1n7Z8P:I-@Cmt*N$<lg[[ZPJEa4gDG*D,c2%=0%h*`Se;.7))18GE7I913OBG=juKB>!-DDtg_S6`)'h2^D[W4&EmK>:b<4M;VM
%2j"bb-=seI32Bl#]0YD[q\a91aE\Ib%E=)?U]Q8/Fu+iBDH#>.]Te>7.;h(lUhor?fP\25'dBoXG*>R`;R@.G)^#[07hq+)r(m91
%*Om$m7s5FO'hDMu5UN_k3GP#2'X\n05qHAbpOL&P7=s3`@h3/>3^FO2O!/[ZAPLl0$eEiJY<,CNFG&l`ADJBZFg@"#$@A5YGI*6n
%UbJfHa23,]L=L-o)-1sZ$<HmL2nqXt"!3A!fVVL$,t[fc2.N_5_s,b0B.2S*A;or>-'D:`\q.fYdqXoi9mGcOZUt-pR(,_[<.Jit
%\4kiqT,Z+]@o`$/d6$H?-p75`aOZuWEu-F"VVp5p_;S:SK$=bK(Bt#56?<eWF(G.gfk6++<^ZuN/l(mdVmtM)d]lbRD@iOQ.?L;)
%#%[u+m\&?Hk^e6E,6bpmq$\"%)[$L(S3_1.O]`*T)`C^u,?I;$U8N5;a:63O65rugm]?)F'oj4UXd&?06fTMnTU8ZV!1os+^l$+e
%#]*P26#gPf$j;D+G$hE,-J0.>76\WJVU/9lnL$$GE5Jpr5Z"u\FfCnk%"t)WK\+p4\?i&!.g.d86lAKN"E#+nR&0q(j&6UM;#G/A
%8?e`'D_")GTl3k1ALnjLHeM99hR3d:$GB`pM5<2d`Z8[,gOQ<b4D2Ld/lF4:d'Q:pPW;+e*j^OT>I2J@U1%pa*&3^=i\nW2C'#+>
%Pc/<U!k:C.W65TfHW5f>`S3jc#C-RiDB#h>FD]7K[d,%?7g7Y%hG*E[_:l?TB2I?R.S/=0a3cBdPe]27nR`!3>nqi];7<0^R`N>p
%+V_[EjU4/m2TVs%WDS^cL!g*8RkuZbcgE*N&WT:n?]),u9(@Mcc".pBVNro'fu?1u[tg\of-nED$F1,[Lpk;3A%PHu+Bf1`Rg)>(
%=Y[>k!b#%rm%-9@JWo6!(u'^p0FD&Ff9CA\XaPr/9rgms+bHsngOoEXMQoki`X8;HCf?m$SHTta+X;$D9?,Vu.leW<<:p_U[`SA:
%?t(pND'DmuL14u*<AKf!W(ki4Y50llfHtYV"Z@gL2HEu;+W/r6_kd5dK@n0ki5A9Bf^AU@6>Z6bY>S)h)hG[*'cY(L;.p0UXJ8p0
%hmml/TPY*H)\bbu'ngErY9gV46eKCP3P\B%[]p2X'h].I+V8Z^g^IW'Mn^$,JaH'e^ERJMWlN15ZAu.P+Uc.FQ$4Q>T-A*(631s[
%J8IWr+Os]t[N2'6$g7RX,9TgM\BYLj)]P1)TG1e'U'itK=9,e7bac1+"5$)C*atrq_DZGc)!##Od4:Q&R_rnc4AJNOON%8,gl$MP
%Nf[m2B*PM5js+?tMQT\9,DslFFD[bJgYgdZ:&H8*V,CZb:p0$9oM2PY4@Rk6Ms.rDiUj`j?rNi:CY)ElcmSVB81#NBQ,7<tKb\8g
%f;@UQcR@Kf>T77'fMtN[&Rn#I=f'3n71pbV\Cr&<do9H:U.O4!Wa5629gQ1\)0$gEZ*k@c)HKCG!#F!74%%LM;IRcL[7emUEl$3/
%*ZLMt-?.\;#;f%b3-go@nm`4]$<@TYB5Gn]JnY<!NSl9#9KNJ:?3liT@ApH+\g(p%X6:cng?<1$U7Kh'3s3kW-kq6`VH=1_<YPNA
%aqhrQikXaj*C:]"'P(EI"DtXVal];tg/162B)($^0ip@BO^+FW?QcMQkh34[8CSVB)j+Hs(+eCsM!LtoDoL"^)@8-Nc:2mgJ[-\E
%2Uuu7EK])^=Qao:2&kf%%!!MafnhG9'JUP1'd_PY!4+uQ">Is48!k#ojqRD*JQRm/1.BA]P($kJfh%&S:ECafbrJ\1Q!7.ZCsk75
%nJ.R17)"bDEs@hf8T5+g6-2l*='\+tO^H+nY,3&h8\lhi,9&+_o,<nM4pOQq*DI-OERU"P6ijT53u('*VU3g<8U,<(Ce4J'^00F"
%0g+1KMN3[PXH=&j-K*NV[62FJY"=O)$8cqN&dLOQ`^YnD"n=&t2W-:2NhO8@KU<XA0_XF;7q"joMd==%@&V^#kj(8Z2YgD[770qW
%eHKETfSE0FbMs!EHRr>/6SPdG_ON)$G#cHW'G29**_mNtjoeMV"qB$.bpc2CWK)d/A28EY,.8_0@L3ea5r/ifbR>+'j@UO$$AhLH
%>6HaVOP%i.gWUeF-Tqe`2CJulV3oo\8cITe':Wr1B^HKIS(umuE1OMQ4<Zu.GRG1S`'k:u'GHs`c?.kk.e[.>Z^VDRAlNT&*.q2o
%m\&4?&jh:<@KU7nW\5kH2C&\Y&D93+$N;/g>:CUO#[Yr>#S%g"OcsU9L/")R@]Uk0lmdhB$?==&bF!05@1s\OTPRPD#R!o>F]L3_
%M$%[RL.t9/*'4uqBlo._:b6FgVJ;E6#IGhI.\hV((,cUS`"%Jq_KhBWRe%o[;lNUG6t,$#U.HqCnnk7+fTa4hFbU&-Rq?!*DQ.#P
%)eFbXN@,Sj7^91;9W:(*@:;P&MO^_'`PMhIlTQg72COB'>8\27M<oh54im_Z5Y%K4$AAqB$SJO)8D)FD(2a>19k,CP-qN"9.a0:R
%2J'W79:d>9'/`B6%E:=/Kt*6f@1t_u%%J1J2Mn19Hd,`Mj6Upk_?P^H)J2OmUde97/;:raPS+fm;OL#UL,/U08D'_>qj9GX2KWBQ
%HVl&)p+fQLZ7-DEfjP0S7$4]FZf7u,JqZp$FA]3qM2`UN%%JOe=P/9q2c^,Kit_7p\2M7AVN;TL]a5H4&V;-4B.f11(m'*%KFRCL
%/:o!Q,@H4`F=@h\g@.V%+^l%k-!="X$(K_O1g1'mL.i\dd+I=d)C;B(g>R?fBGLWcL<doQBEj,a`b^A0(*IG7UoXhM&iP[[CgNSS
%@5D_!oc4@.65TG_$5,6o-kU<NK[&JK-$1DK`Y'N#j/dBGP3h$C&iQ0='c=V^As!`Y8Wg5K$Y?:2.2"Q9.>Q94Y\=:M?m/(n0T-6h
%a:nq"A9fUK@?^MG#:E'p6m35m$jdk`7TpKOChh!t7$+XPF!lL`*=82L,=]7AW)3[8N`)"(S6\UOJRM?qJqf7dYe`dpY/paaYm"&_
%ChT8R+1-c/oeJtRSku:tfU]*WfVB.#,_;Uslh6m%@69#siQ+!/"].I:ia@rh;_"I4J5;n?&KR8G^l:p#(;jOD-^'\0VD-XBKeFr#
%d$dP]HjYL#D+J60iF$__26$p4%Q<'6UiHXn*FSU[V+,^M_'T<8J\9?]K2''-_TPaqCc[ImCbVtj'Nm7i+D_TEq/mDXRk/-(:GN$h
%-9DlL2CK1r;>>lU,]"ZD&B#7hRoY*qk_b$f*dB;\/P+MJ-ZEhd$jiC7`1hcJF1r04_aWkRYa48pa**Jr9q`q@$XaNMn;?_;:tT<-
%T`X^>-u=tO`nd;lM*d,s:tS10kfObW2YBTA6jeWB7MmV;Y#*b]V]!W/,]&Wo]p&X3A",_$)%nhf/K!e_MM0g-MM+^U?d5u'@FKE>
%6b\8-%5RB47D]7_,J+WrS(^]WedMkSaL#K8K[&G0U[(b/'EZBV=f,>O'\YPQ[!1I*3]!6[/8T>4GnI/?(,f=8_=A!BRo5_)H;Yoh
%+`S'tmi2_)e1N\R<XfmCGZ5p3J?V+8YeI("OjkkY9mK5:GR+'LIJG%gjtPG=^9_#]$9"3>$:l$?G*X%fEt%CdAf$*8c=2no"RJun
%0'3/dUDP!\`*2a.48ecM>B#=G4d)(KqA;R8)t`eOkqmJFCS]3P^m75mdsakpOfoAS6ItWDn?q6e)t5^ocA:.&QF*"&i#1l=L^^X>
%W7PuN%:dGk-5T\l[ihlfU^J("2$d2Sj"`k*KQJr]GP!nI&r6J(Gh8m66:p,o`i;)l'^ckW)?e`oB\/,+ASB[]bCe-VXqC++PCl2-
%;nt2B&4O/74Ol$Nl]>*2'U7pVopZ]WRN,PLGRNOMNcFcN$,e^L*iQ$G6<jbH4II?tK1M#/"h5$\WMfgKE/%4ImhrhsZ@AnCkgo6<
%YZ;lN#rsnC]mPQO*NPj4/$q/O%;Y1Kela4pB>E*f(rZf_21f?E;,:&k;>>]33<Q\7U(J6>24c%CC5'#aa(4q6+^-,=U'`e@".^S/
%cI\(hNVGfnJ290#e2X6eY@uLCZD%.n_5uT&-h2;5APGeN^aV7iTF2=7'ZM'+:^s-:MD^Vf+VKMe.?QTc$=Sq7W6EKp_AWUubOD/E
%i[CLV$=Jk_5VH]%4+9'LbF$ra?VN73M=("IrhAV<b4*b`,F='D_lfjrL<+6YEkPAH`Q0VlE]'e[fVu[:L(g5ieQF%%B<]oc)(2ZV
%5rr^Uj;-,-TKiZ:ct\6(dZpbueUUICpdBh;:4alN6`_WU)JC`)=Ig-09_#,KJB;I7<t-W*i%%tgE,<V\VdS&"Rks\OhbObeN"i91
%+rqiU.T/-Ld;S&E_du1.5)#s?8e<"(7B$b0+Z'G'%T^2=0WL7k_N:Vr;,,DW'LXj5W&B_b7ApEAY=3F;Jj@^71P"b`'`f#@)L-_L
%$P]2di7Vc,eB"TK]M$@468Q3W(n95l3P7.]C9LKeMG+JgE0=g<b:te$l3rss^1+Z/'UBX?Wdqm`e6YeEc9S@u*5FN:L.ND.IgIBC
%,5u^(OZF)@S,cIIiZJc=i_a38PK.\J8"Gb,2oM:o$"h<iB`Xu`[>GCY1GJ)dc<.P2/F"W`i!kRTE(91G,jKQBerb(`p-q$P[2"I#
%6>#C7e0F3c6H,50_1QH5+OhVZ0AjdB"saSAb"rB/;=m*WTN7!K/bj#dfeW3aU@fi9I+iAEh&Lf'F#$>-SsGa9K:XEV_]@fPEjTM+
%-4[Li=U$sIrS]#CYJX*[)31@<'Qk=`>;R0\1rKu/)sWg>6%gbBSG"EY.,m'0ndEsU!DXlu06?D-a]$QAP#R^5PMOe_.U5csVBoDO
%_57n!)I1=O*[lFZqHI(NA@&$t"c>/Ho.5[H.b6GqUCKo$n19H@eV9;:!=BW;<3YW!!rL<I'S&%sSE^5n3f7k%Ybi-RcCh%u(UWfP
%dPU;&N5d;3e%c=L,1D-"SMUe!"u?_,&<^N;AK"Afm!KP0Bb60/kiu%9@K[L'BfLPjTM#loi@`[W6p5W>Br\Gjkn3_`**$sQ;6O0Z
%MhWiI3^GM6+p%Hchm'#Y@tV]>=rL@4'2`H-Wg-^$=W/^#PWCT&QEEsi9.I)$ZI.;_.*_5dnd3T<V8lHuBIg+T.#B,P((FdbJl\7I
%8f'e-0PZpG;hL;m_@0:FW<Oa[k<5(C<L@I<-'KZ=K9Jbe0jBHe3][;$AMEBJlP)uqW<OYC8D&(O8CBrC=_9qI#dB<r09(mi,RJ-_
%(hjPg!96J1eRJ%U,$d$]8eIgk&pNUL65fi2>_AFVUdm#rTE*D"7u!(@&CP'OX<^5r-:5co5amYn0&=C**Yg8"i1ifA$)d:?<.7$/
%>NjIb`+5dVJ4CiiP^K'S*K:V.qN`r$BS.[2jCeV0,^5aY7um^P4i`OOZ52&Z/XAoJQ#7<o)Vi>j\\<\c'@hku),8G:hB8SE`D,Q4
%1W8K</XHbR8+>;eM(Eo!P^hoG/\#HoU6,mZd@q4W_"fD\(/8/fKj.[,UEJDC;D`4LS>.W#d25^&@?)#'#iPt$NBpERYG+G:^bNoO
%P\?RQarOHCkc1%9M@i#=W'`t6l5s&[k`O\2L'Fd8@1Eg-fNgt>(3jMC[GbU6k];T4h)GLl7W\\tK.7VmoK#9mVPs>hDZN5CKgf[X
%Jd[Rq#tn3)U!'+J"K/3Fn;N?i8^Fo2KA_5.-8_6/"J7],K[,EQq@!uTH8`U".OMM7At[MA.]C]sTVDpY)!\B4gaU3q7X5*=SLeLb
%o"),J*>CP8%V)&>63Ef0ai>ZV*:tSM4!6?o.PGDcmL+bM"u4EmTV9"EWDc@N%KmC]B5#Z-`$L@F"bR#8'3>MP/Eih<j:a*./0S=(
%"\i0,E?,CT:h<#(K`k+ZS9#\V=uBdlJgT;6QWlGrd'F%\7_a55$o(,##(_<YB->QOl(WL,$3EqX/2_MXkhD9JdEaFlD%m*KXeD:-
%m/Lt`hmM?*r[^21h;pG<,7tOo:HuV*r3B&\VTnA`5j2"phm_!,rpp&8T>.&6NVp75f<8LE\%[=iVp!8IMtODVro!``p$qqJ%BFDr
%I/gl]oY3D,oW\2Dp="LLg5i;EqSVUUs'o.oCCbjbebeeUKEP6FWa1nbcNP_Ze>UA`Km8!73,enij4WJe''8XV):]Pj?U,nV'<lh(
%$&D%UbK:t/'"cWohF,lOCiToXiEbIT\^D"m5TqVK`tHb4-P'#q1k\4C_qE."dS_"r;.GUOcY#S=$&QSoDk]ae`j'Lel(POiL:Rh2
%40J"a^HMN9G5r^cV8!.V-!_?.7RVQsU0\@[;KrXi)Q>mA<6#OAF0)PFQ:rI>1];$Dnd>/=o&,m1_,3nu\7URgOY6R[&N9e(rQ*=k
%9J<V7nmG?/hJJ@RNJ7\q=JT"ZFDdr,4R*lDcdI*S20\MVm>F9.*NCYZL7.HrkoN/50?#?g6/Hmmo`==m&Ljf4H]Zuck_Z5%fFspr
%;2LJXOF"`2+*n0pD'L>C05[0u>*YJ?G\[r@q9AfNcrD&/504I!]0><VpA`jOc,kB`7+=5Y^Q<,D+-b?:kS.0CXRmG(J:o+b7='-B
%`lM&DNna>rf'Yp&c;!_%H>"_KT8@"+Db!ieH\Zc$)0LPqM@\AOCt*ES-D=ABg9K%HPU#C>ePVN(beuejqjj=VCK&'SBKR#WkD_-k
%j!(!9B`Ce>P#IHO[$d4&kM8-6O/6hpA>KNLhoYsP>399ulIOUb__1Z&!E"T[_KgrDq;5"jCI0]:2mtRU+rq@=1OA8sC)gb0&St'_
%4<SQe,\+utHcL(^@8Ldm,t8#;ar"*3#h%oBr>9$W,:/B(5#(9Oo"ragOhj;MjOFZl[!1sHqcNFMZpr,n(J=EsktN#W:R-2Pb[$<?
%-cG@^UL>7dQV)XnE*IS`Ng3@ZW4^(mBZ_a-Jp^Z4rGqARVPB`tdg"X(+h`%1>'=`,CNYg]0#X]:3;E.fQqT_o8Jbf#5)Sa,.RWs#
%oPI)AQU*Y.&3BVf2k;T:%aG^T(2PFmqa^JI"*DasV3f$?(JZ9P:;>=TIg'9Ia<QocFJ3e`odmWn`YB/.jKFCO9co'[^c5Vg3RSt+
%#R7e$KsM>ROc4s:%Z$@,TUZ[&`d4S4e1gs\6Fq<m.8.oX]JYV]8p0\Pg.3#Pa&;/F/lbA-*\$M)b5M(]n-C:/^M52Y(Q(E8*hXV1
%4,0NP&eAm04]hOMO?T+jnR^SWKp_q5TPR"'\)H?l3:BOb9g.$uh.2]\m_@+9et-r&8ka,Fn(=MTDLIHncGdoNI-@D8ctgG5@Dg%I
%N8l-F7Ym&;$8HUnJMsZ2)[iQ5,\0d3kdB/LA".KF]cfMYHlAKISEG?Jan,fQ5\^'*I1pH;X'R&%lVtoeN3D%U5p'?@@iYHH%"3)O
%_^/DsN2*[)-Sn7N2[f%mh@Ib$-q2]HDb=$4"^dEMXsu(8BRK7c:++q:FG'Q!Cq?t*TYi!SgfUXqH3E)\W!cO+Q.8TbZBUYB(1I]"
%HLH:BnT5qD#UV3AT;N4^mN^.D<Z+TNZ5l0Vc]g5O>%IF6=@8'(<hXg]P\j5J())ZsU'&kbm7]kn6MM[T1<![`]b>-\:74TmEN!Hc
%<cc]1d'O!oSF$#/a^0h5-87Ts[G!6fEREo,f^cPL!(]>,&%>=U)8`,>4BC[!m^rm+:/>U(aPP*8\2+7,*?h5I:kmKA$_n5YG5TFE
%+P_bd<O3?/0Ctj;njn,sj5$S$a5JQ+846-H`J4BaX`7&o92<XP+p9RrTWpPCFQ(SW@]1c@ctt'sRiJZQm!CVs5m<ODD7PjZjA9?2
%_hOkr-h=]C)].OOYo</`,c8%a29Cbe2nMNE0ZqX@7:dY+C`2'%Z;p"^0I@Q"\O9(j!>=]HS`V%r4DDh0No4UAn]@'7I8:QsE?^h^
%8_>(1MosTf@PM>P7>Xq\`jqhm9.'-fB>T)AH$/QmQ42*-RR(,`aBbJb4Y&D'IW)UZ9eR>D%l?><T3?>CG?U3Xdh(mS7:cPINa=q7
%!X@dsQ'd!PE?.K?7?)j@#:h-%OsR5uM=%1fL;bUF6m?tsdPqq$RZKXi?<bC(2k>/&%YX1pS!Zk"*h$i>Q`M-8midNo)beXIc@+c5
%"c*TQJUiN3=A#*&%J$1rf#^Bu9Ne_jbTSI@La7b#lnfSH%GHBnq]F4%5)<h76rFJ'Ca7r,a2nnT.rfB9+:SuecP`JCRS:[g67o`l
%M>QQOR_O;t]]DKE9cXs\6Df<DCL<:]?TH76V6UK7jnMY]V8Y@Wpa5<b.bc$-cQulHUmIV[j6P>W,4(;9qUrsP1HD&2^Cl]4"N!Q`
%+O:7M)`d1o]N;qijL&a>+LXt6n@oZ-&^>p]lk"X378k1(e/mg6&QOe),LaU7NS66"5H#Q7G.>[L[5,SV-=[mNR<sUJ<'.'e/k&d6
%#D=#<%@UT!8>n<sP+2kJ&)I@GggTjO'i^[qD"<ie;lsW5P<%]=4\mUT;`Y*X.FAh?i0N.E)@lj3HfL6sS2hJUL7Y0`<`Gm:`^>Qb
%2mX/"%,Nm@F*,FqWa,Mpo4Z/k5h3uEn[RcMDH&Rj4A>n+'oLjSQUa1[D]F<>UQ)Zs--f;B%t):OGd-kc-3h_\k+;6o%6O)<LVVLf
%WjrgT0so9q4i0#0OiSXXc"kIThYrXfAsAUHVQrd*K-al(jr0r/aWt[]:)(07)0[(^I_IUil/7/@;Mpa0$nfUA"N.2g;JHPp?1NTE
%R$&",WoAP.4Z-/85+9a7l]j0O=Wa$fi0)=&2IPO?H@FV9c%\.AI5r2j8&)mAQ'bb,*(B"Da])A<SuA\R<h43=K=X,=hK'G='(1fX
%ViaGKR7HA=G<YJ#DUYYYUhl7Lg2U/?lB"]+7.d%nPDd0(CQ\;oig.su"-:JIShhr]^`s)IbIo-gkt7`9P=%+W`C*dJm/FFT^G@K`
%=5E8_Y!+=cd2`AC?9f65jTWVkV$AbHb]7K#XOH\ArR`V#d$'mF9:3YOd^-Rf!B[(%!=1n=$%8bbO<BG,U&`=iY3t]14re=]anCLh
%c)u08`PtJ@\,(pmk9X"2Jc!i40?JT*`I*A`Ha]7b`Aa5W.60Q8W/P1,f.sX&6cE_=j7*4mI1W`Q&sIU*&k"j#2lJ_VWFrh2LT3M8
%C`451VL-?q_p/Mi/&G?p0]=XC0#ijkVI([IWa'W;Cf^\CW/0>#VuBWA`S_:fZ(?eL"M`$@#no\nb]jQ0LKM3J/VurZ]1lSrS_ZAc
%klfPM9>ON;"+`ZcIN1bpk:Bst,LDp6)hcO-*FY-n.MJ*'hsK*'$AdK3RjWA\)?MS2#$4p`5?9fK4:7Vsp*c2uLmZ/MHadX7Br(Z&
%'d^G.,uPp_e9dPX%M5]G26RKR73RhZ=a!bD.47_1./,8o#@;&o'pV/TNa[5`e`#Vfc6iT;R"?AJhBFX`-]M&5!Kgd%FNgQ:*Eg^#
%ilr[!J/D6H'H-T3&GjFg'5&`p&mm%MA5eN-S]g[_oL/8a7$:@e9]RWP5bgl*<s`.-#]an.$pn%glb@l`.@"o`F9kVE:LZ"M]JU"d
%?Q)CglsPS61pDMoEAWDCf-q:D36T7F'1E$N/-WSGM(ZHBW3(].=W<8)H-[=DGW9J9m;H`k!nA*0<Yn7a)A&HFF&Y)KM$%49R5jE]
%+M+O%@M#1RbS$N#)0fcsAfO<A]XM+k^)Z>hWP=AhXO:3!RD&*6+$Y(EgO:dXY<`oG*.hKCTSmXuI"XX7+;T)"'JTpuJq-Z>nAJuA
%7!9$D.JCDZlA,d[/ou4>p,S6&P-]+HqU-0L0.or^8lXd$G%l0$$h;;a#hFVVKg`#r\F;Y'G77!*e`mJCAWZT81A)E&UeLC*(o*O]
%P!q6aJ)Ai#RltUrIY(<hqs0g0)SgH2cJi;JpB':c=]`F)(?//T7B$'8k\Cn[)FpC#CQ6J47WE?FA!JF]^^cdEA!d`Z=YN[3(.^pa
%+NCKLd*ED`7^UYZl5RHC5_Q^*AcXD-$S+NPp-g&c/]AWT)agu7*K'[+G8@W0WAkI47Yun?U%BIi,)NW@L$2Xt8iCGrrMW,^l4Tf;
%A.]phEAW1oAj"jfI-oc265LaX_e`9Kg`8=A+-P(J4&Pf]r_<amB'V(*WG2qelc5d?`@9V'D(OX\a?elA;jlX<7/1;R*Z1A$X+UIe
%<\';nDOVPEgI/)t(U7`TWgH,MkMVc[]X3^3Iut7><F!<97NMurKlP3:)eda%#6Nn=dT+g4,ar5>e+<a:1S$58!h5dF923)%kZQtG
%`,Qh]n2_+0[T`f&6ghmdkZ'^32npJHFHD'9XoDMfA^KbkQ`Q_ln"k"p8gC,=VO@Cf+ApD,/RBr#D1r>oaN(`OAMZY=s0CsBFKC^L
%fgce%e.R<`Ju$>sg6bE9FpP%ZYc1lUs,,^=,gJd8FVVMI3llpd4%"NF-42#+2oaW7IRqKur+K_nN>KY]P:m&D3`.GjQKDb>P+u"5
%(sR.Wq/QJC.GBF7a@4BVPEmJr>7[`3Ap299/"OJ3jAZ7&>P,L'FG9&HP4W!o8A41/^2YEU<h2dCJ;qbRX<7QUEKH1IUC!@(X"V$j
%amX5NFS/Ih/2]00-f+Ao<f_8sj`#n#U*fra.]/Vr9>,9L-)t_?$CeQ(=/S\0bW^jD3p3(%$Pn'prcQ_=;2(gsgs"<sC]s$(Dc;sf
%Tdka'MDA%WA$@_AaTP.K$DrR"QZ83L&2o@VjXV$'"u7pp,\%k>aB"g"71uV.OLFF.6aVek,KIPtXZ^rSYX$4F^hWddP`T%J1s*[e
%P:(rb2lm7lg)qf6<tViD"t0;Y$J,KRD!0N(LB@>)e.F'@XVA3$[)Ner.B>=0%jH-1<+U6dLGBd#nUi:LUH&c=bF_+cW3^=2+c&uQ
%o8-g*"-m+1BAkOXlue*1;.QD-adHGVecY;5^4$]5&nJd>rTkH`Q8?GIF15Ybmt5qgEr:/6Ejk1@N/I?mLk?>@q$$j`?^-c%G%IC$
%HGuf'10k)li#kq>La.*8-5/n4!&P;iZ?2gL@`_;ApY&W7?;-#J@X<VhUoGqC\LB'W,/$h;W_!^e2B(THZei\>4E;"VBe<(3/Q=*P
%3`26fCTKukoKraH-QSZ\WC;fk6*E_:gf3.M3Z*I[=ol^f1fa5nqiIXQ;-8o@=sfQ=BJ*<:9iOtpdj!He][h8'f*ZhIrVLnDTj1_3
%"OWT!8X\/IkY.k=n;T!,.@@(2+86f!7?Y`)4_1gCVaK9hOX%n7cj`#g24EQ/j"`S\cT16(1BV"tDOM+5/rO1AJ5g@e@.&U/_?KcW
%W@Em*;MEK87,k([1nf8;^1Ya(@%nI6$_i4=.;'G9_5A6EEb:2])CS=4e&>+'LOeSgKHZr@T,5guZDdQb-^Mb#8m@#RX(Io,eelNq
%bpPo!cdGjtZ-7B;-H<,/LOs[F&>F>A_6q<Q05AHW'&eRj,TU&$P9HSuS.`l9?NZ;r<q$;3A9)YS<V[8&09Ul(X=u-q&VD]e#nXX:
%C$WE5:?V9F,`+=FD4:G!U0[q]-;N)XN(%l%U.-u:a]4:ge&E!c_"UPJk!=hK:gJblF^B^0c^Q1#RX(o\7Nec[4nDAapHkZ\8)_T6
%p)XDSolA1j7#lR97:j1UgB9D$Z\j^[HC1Ws?@[he=W-k!j\$jP4onn`W`DSdH;h86Xj#u=VM[5C?]@b$@dO1dA)TRJ]ECL5N2iLq
%n)'q1Whh2'71'm"3U&^@5o\1T<PM9M-3NR\;UVUDZ65fND?Bt(eFe[@B*jr4=VjX19H:\,0+OJm[C>5iQGGo7[-j6=NQ0?[=1JU9
%ba(#pY,%aZjIg@RMq0ebAD#sMm?JkYj\4B6OTMH+nBA36-55/>=^J$>&/o1k,Mq\N1_#5k_#!_5aNA6_#FJ"=As%c]#M&Ee1]].Q
%o1ilJ#L$s`#<UOoj+3A'XED5^onuCeCF3L\Qp8fQEuMc]U5bX#Cb$ss%"oLDFk[$tjjIPa&HJB`n,u]u%8eC6/-3$gr5*5#[^SLH
%jBYgpa%g5?!%O;%=%Qpdf%)tg?kB:h%45ZmngtM:QVPN&F&Zn^dn1dH9T3,NA?n-b[ncaKm1Iquiun_k`I\?BXdKHho"BSpd7hJ"
%Yo[(m6D"PLT\"3WiWi_UYeJ=A5XH/r&pqK_5cg7ta[kLDEDraIhKca;'d8Ni/!chQ'ouB]X;Y#tKOD!-1tuZB>`nE1WhcGRH?%d2
%,.8G..blURSM(_XMph/UqE+Q_eP#6;9EYt0^`%=/Oo;4L2A`8(mNB6^@cgk?]H<m(\H&\QWZ3:lQ"MnEQN"S/\Yej"@m-W^XBre%
%,JfMa"s+/-XJ$h3e<g]F9Og5!;Ie$iNQHe/^os9T6;h02liEIV`N@<AnEh'dOm(b)ZNiP!Y7PYZXb5\7I<=aD9:WK5h[r[\6L8oA
%Z)\IM?=%2BJq),g<3D+iGB!ZJ$(NP$E3tdae614!!#6pp@,S?7HD>F;Q4QNL/Q(?EHD'"lLk?#kSgT73UrtB&@>WA?'M2f&,&no+
%N\p2Ip=.(&M'_;/E>BstfhNY"Wqo:Zm_+&cck3+?Uk9l>#S><Mr5UiSbC\KsP`<M$2T73,!utGqJ3R"d(3R0_!`q9/X6ZPA3`Z!G
%=;)?h*q^EmX*Umj1FL'8[LP,U,$Fa]*3TuXLRU/)Y>0?[fl*sI,_8)"N$5G6[`Qsm6][I*/C967URF1hZGBke/*XuX'?#!Nl7QUn
%lCXaQ=`m:@Kh(!fkU,gITlP/T+5L]*(_fh?RL?=0>Q?@WH3`"D@De@mVO1:A];U7o,3',;;NeX<7)$GkgtY1MUQT6t]6"&/_U@jB
%nU$OXqQ7nD.$efo\S?[)6(OMOM<;]C-o&ks#0@/[,KFFPENH_F:b4Pl]Y_]I3Do-o\\o9c0_7]dMe44>>-:tG,F`fB"1pkVW7f(>
%igZa!Uj4H3g_'VX[2$PRe>O9#No>1$"s&<"D/uK;!M7q6d.*dG#iS`'.pW;]0U/U:\A90,'AoE3;1ZX[Xli!E=Fp]QU*a3Rk^->?
%6T![s?u/ncA!0I'RqbJ0_\OiE+nT7Y9hcb"[e<DZp!V8d$iprB[>,l"$c'N7K>iF-JH[UuWke9AA8&c%=4*%k2ia.EZR53A&Z>dH
%:XrS412-<n3f6$Ebt?<R0fK0EBbO\uW)B182-M7P<k0.Q]Yf%l",o1j42.sgNKfS$&^=DkL.V\&^^#nbTI')Pq.;e)?W'ch[)<E*
%OViEU`@71jQu.\+f_rV-:p4qKNu#teSeUN>Dp`BrSW"_,SfWG'9X^SB\8-#\@*"XM.lYAZ5'h(I&]\F1R."e9[VI&[ll+q1oH&nO
%RHO"\08=.:P"d-9#;K"=K-b8XEUX.3pT$7[d?\F()@[E[hbRsLl>AU.mEfLj6YrKpHJli8[3#3Xa;d39FNpSTW[!s9;k:Jba/U#8
%'\mOg.%ih5PL$M]UP:`?15KmsY8N@hUO\Yrp+pg,Q_;R8DA/XPB?cmgml3akM6Xsf'YAV^$t,ufai+uOTV6&ib/jAjEWfqI:rofY
%?/"[=Q`'7phbe5UcPk^/9G%b4(/d'LB]=m#"'V8:D%DDf,tfNXE[sKC)YA-),Z6YrP3"3LY/V)lT72]Id7%tsJ&a0bQN"ao+:jpq
%#bY`8/HtmK':Da.\d,Z3+0`P!)>#rY5":MD&Z?[BgErBPOEuS:WLK=GU7'<H=K!WC:Y:b'*NDKTodG7:!.<<JH-3HIX\<f^7T7Dc
%MN+\WW\%uLZ=h#'PW`#a]t*I&>2"9H+J*:Ud&l,F_1:<!BSai"gXXY?5`@a(nV\]R7c+<%LWP3,\2HAEk."!Q>#t"<MU!Ipd%eT1
%7c@;h#*$):1$`4ZS+2]T!G\[gdYc^FDpu<L8>$rYQ;0c`GrP/UT(D8*10TZ!;XX;;JY6UhS1T_)j.B<Vp4gZk@^$Hog%1Lu8mmlW
%9QoQn6nfba];HeFSG^tACl_S?Nd=K!cbK)<qA#`Ylr*hA):d5+jZ'JrM*8j585sbq!%d*QG0NopbG$Z\Hk2!3k_\B2<Y.']EVb(T
%RaA7r"Mj:C1kq)!BciH8:j!jE9oB)dI*oab;>;2kRs)[uU&ZkY/K9=1HF'#_KH!X4L=+Q"0%K?EQ6Jdac`sgF7*fH@?oHk(N/"qU
%eaBNY@&b_<)+-:R)00;U76I#PRk92EbKS*:WN$C@gCbqT=gemCPk=fI2,9,*.ZFVTE(?"T@3:jG0jA0iR)0_l*j[;>-GlWr0&"F[
%Mab3C`_T3+@@-Ia[Gr=qj:?D5+=f$TrPIoAF,$^S)4Sb'2[Z&eA5?*#"bYs"XMI"^=-N,?.]&eS]!t')?kdIphbiG/Sb[peT@QKi
%9mN(tR&E[EfOf4j5/nWS:A;Pdq&X$Ak*H)R:?e5SF!+M3f?df^Yb;rkM27Q[E&B$]YL/6LUD"/HY^=K3)*Jj<;+M_tA`Sl&jk/D<
%rSCECMT5(mmXb/D]A?O.%u_'14ifOUB+Dib>`7HG/9g6*FqD\V$!.sq-;CK9#lN2F#Zjd\@4'9:LmN7SoFU\S:p%nC%[i-a4!lZu
%)Hfh3)f5ut"g6l[/2<k!Cc.0:XFV3<:kslh-c>t_.I9?KTuCo<@&?u)*208_FJ4^e1FR#_1#Q0uh)_?o76oQ:rMW3qBSf;fQ]&gK
%jc6-iTIpV3bB8ud2Q1P>j?1"-`D8m)?-?]TpmEAoU"EeO!!2DRif4+rNslqfPUp<@F$kkTjMko",WF;4&5^XJ0i3AS/(T5#C5BPY
%2PbR9Lu'occNcOL71P`U,!Of$=f+X&TSqj?.jfR8EMThEXQ$JJ=m3[S2dqEZ>=>d[kc3K*epB?5c*<'i(*r6N-_[a`DN\N:=S4s3
%#F>)s-93]I>#K\9#t+pNmNl%=[H@rj-MDh6$DD!>Op#iBOuV^"p.Ii;o2.S5=f/Ctpe%.!"68T](3uWLNPd$l7u9\.jFd7mGp8Gc
%-:T.HD\_I:hTNiFO:P<t?$[p]pRi3>DHnQN$XPB^+<&s6l/$bpf:0$Ulq,Eo><Z@GF[@0?Pu9K!'kIK+g"+5'n`VOH-lhs-3E0`N
%Qb9gF7VAk7#Sc!*8;89ARK,/?M4gtI)'bCt](O_W<,]=['3jTIV1JDYKB^!=;0.%FW%4/6dZ]OWCt9m\HP6QE%g:]&S0Gck+I[Hu
%7r+pC`7'';3p=[J_,BbmWmr>la@j%e3*M[U'e-@1+>QftP*es8*!$5HO<7W8f/Rea1@LIK:4-I(Mf1InW1NZe`OZ\]((E.(*$\88
%MX>PfL?'6iY+p3&oSt)VRU`1T6ba?R'*e\t^!8uR?U5Zr?PB:NpPd5tK7QsW)@`cr;neDsK5*75c>u]_koieeEtJSn6^o?""GTr5
%HHc(LM+jlSKMW3jbtP(XP4NtlO/uip)cf6gJ^1GcJ4*=g<:pfb*\G]N$dJ(M%n>(YT>RV&;BId3Ug3@R71Q8^Bem"u/CcFV%X$#0
%&>2@FY%CV?!b_$ZYlm5HK:R<&/hh-KY@SCrY,X''&f"RgUS;jchSZ!E:5q<8jG#Q8.5pRd-:710K-ODrVG\"n$m<S_f?gq@.A]M;
%Y*uH2QJFTBH76+rC2^39Br7ZAU+OOS3jhUO[S%NbW'jGr'+i2Df^5TnmPK$l64b[Scnn'8E.eRSO:meW"cK2\h$o5hc+X8+a;;fn
%aH4(H@i6#F_*SDnf6BT2aG/Zn9C7HG1E$q+W!n/^e%DZ"l>T/o2i^foT>^sFUZ!VtfS9HbZ0HFnmqQTB#J8Ve'OhqsO35qnJfG&m
%J_F[Y.Iun>5BYuj(=2=bIT&;#.N2GCQPcQ=1"geZA7TFXe6CrBD[?`G*=FO!!Xj%Ro1E@`LaM(N-[V^G*!RK,mBo]*=VAIN@TQ#%
%)37r>G`V</l^YdYGQj(%/:8t;p6'!EcjiE`F4GS--M9_UPTCB2WUl8Un:rf*dmTi?Ih+DsW`_DD3$:7D$g)q6*5,j\NZ,Tq-s9X%
%T>70nU9l=Ac"4XH;!tspV-k(o\0UaiH0Z9o3I,pK\>_DoW2)Qh;1]%NOUm9m>V2Cpj(LF6=7\:;KhLe!fAIQ'=G#t37bYD7Uoa\7
%A.;!.Z"O(n[DYj%Y]PYOH#KEr(*0U:2C6u"9:<VNU^).(23c-orAY@r1a^PR)*cN&VFaI5e!p]=6N`ds&:NH#\pG]9k#gjs=Q$*D
%?0*Et&rE=6BNmt7m5#\*k_%LV"3E\t:ntZ-EonWOc*;,E(G9FS,eYgGV"Vn+)bsHFm\!s4-E<CX1TGmgZrI@4T6TRGBP&-HM8<o]
%,afCK#B+;m`G8-tSc!6=7^-nNQPl=u9LX,uJXA$E8)-j-Ph?ec#`X83n!%S_Ane>9^qpr9%qWm6"&)%B*2CUQ<kj#n^dmCb`R5Bi
%)g`*aZCI=5*@l3^]?IQS_=A?)X&'4V?7tr2c1;7Qg+>,$B--BHV9\>Dg+O,[*ep*g]hYW$T]M2!7c^M9?<$U^=QquC=Q1&\lp7gT
%K`Z0.TZhV=orNtZRBIKj$EAg5HDd+@.V<'KY"KLUS`#;1b(8S,=IC+\((AK/gCnqJUkccsWQ`6EZ-osL&b+RJc\'o@d\0p]<$5>X
%mY'Ue3%>hO.`_q$[KAF&6rm#^3t5M_K#6A4b,]+S/s^S-">TR0><la?q<$ibcp=TQbQSH#/u#&j3m$p@`4n@%P7-EV^c"$8b7_WF
%?3Ni1#`3PpA.6?@Ac\PA6e1BL1@m4tUK,hJ?*fr914.<XYadNO22N3>Lq5t7XsRR;BO8kM564F.N!7WA7Hq$_WKnM;SScAUCl/p`
%dD"7@g/)c]PhR!B`I@qn2T2\c%07rb$+6f^=[/@0kX,(`p%->H7Ga.qiam3)5mL(%BUK%4!.(*q+A`^6_#mj/9HPf,fL`.\\fEVD
%:Da<#PnlsGUS167eD"%J%PS%o;Q&8ToX(:e"'!O\L+mo_McMAr9VNFQP$$t;fHnZlTu!Ap8Q\FqS%U?6&6lBHO>O3uF);kcJm(>e
%NR1]2ep,G6erY+jE3n%"gQ01D_=Q/d7-3;?R"\H,Ng63!?>s&QASSGa5q$t-C8&*EX%ZA:;7:@=h@KfR]mB:P0TY:L^+,2@#YO?s
%Es`P`Yn[29SupPmX+i?/8.&4MZ'_ScU<\Z,+gKaQ*Y_bQ)#er[==Jk10T06(fW.G,I&OpE-lj__;=.][1:;V*R\(FbM@'L96\isL
%I#^6]P*IHueTt'>YB35fTH9(>3=/)[*DH&)bOC]M3"&`(U:H\kW-k@0I1)'=,>L4=iNkOF!u2U>E25WbbBOolg*Ne!;!(2-]$[);
%hnDH^Fl[8T_"0WX7'5`s>-hDlZp7LIT?Q*PP+F>OEe>7TU9Q"@!<lh#(!p1r72^H'Jf`2HA"[EIM%@1[>X)K@gs'=`LE-@*G\<eY
%@o.\#Y?`VI.+Z7%QLH@;cta=8Y@>qU5qEUF"R]E55*`D_]%Ka'kmk.OK@m7qn;q2!3&-5hMjA*Mkj(';W`YW4^4J-tMS]#O#SG2>
%U)l4MR^,d8k_j8%2"'TX&qgC_CpF.%Yp3o,g#MNG!W-B8:co^8p@437=m(Y%&EH\%<X.Ai#\R-ATjXB-QWG4eI9ujWL!(V\.pXAc
%q>h\MDHGIob!`W]@gO`U%n0O\fT)8Z5B]8,cQS(k4=d27BGaQ?%gXed4[.NBeE.'IHq.-Q/]2G$\3/kdJtFmnZ9a1Q.hB]uO<f4Z
%&CRcX)4]M,PalM!$jF1,m8hn&NY@V%C6D<m=%Cc9fODq=n;LK3^?3A.=5tJji[;ct%62$!o>KbM//R3%gRg0'Pb!pOQ\g$Td[!t<
%:ISHmM7A<<&oo^CLoSBt+>64f3TF/4W$b?R4IJJ909dOSedd:K-]uMZRY_29%&[f.,b(9a0A3UgKAgae%LJs#.<idNA/L-=!lbj[
%mMAJ;-$p7PMbX(oRV#Hlk'cQn:(1EC5mp\W--@dh!/3.sP+]qBGD9M#UYpUoH;XV'7Am2k/k?#C8L=F"R?gHQiG9Z2,!'3f&E9XF
%"<j_Gchl8+YNM#WZF6H:b;,1;KomrR75I/bW*ZVLU(rL+@cb2b$$oUtS0B4%^=@#(),5Gafm&qJ\iSE[k`q`+e^kOW!%T\^SOq'"
%0@`G@a\;!K5VL7uPWePO<Y?flSdJ.d.Zc9BqMjt;b\otA;uOQ=k89@rpg`_/Uh\-B.;D9#$qWc)3-["^Jjr/fR^0qU0O04^_%l*B
%31>GE)IuUI)@/`3#p<1Z$\H?('K(]]L:<YJW:9t"O4Phhr:aZLhD[+jj['0@;e73J,8G4IWJmu!#/k6oOg:0XQZ<lo-W<VYTSHAr
%VWuC>4,/4DTg*5X`8#,cKeUUXTEGKmZ7)KYk=&,Md2.cQeuXXP&6-ufJNl^6I>q.U0n`-31#\jNLXnsYR#Nr.hUK^l3"8@!4t0<R
%Y\]b5j;ar1[O+N,?3_'aYHD??iq0M[!rbQp*/ep5JAT]35OXVLqQ[^K:F4Q-5.4Xt7=f!DJe/()KfJ!!Q)p"O8T51'(2+P]=pg)J
%Bh^qYd@n#j%pD4gNXB@C=La\CX501/T:<;lrkP*I6a5/&WF2DW8AL@,q9V.1[sTZqZC[(C/6RTB'NPnH/G65;73T<"L8,'Lib5%(
%5'8tV7>:5c0FVF@<.uNZ!f1<cGH</4Bb(QFin.ij/D`ua,]>ii7PNX5MRjc&aOmY78V-7XT#Zk!a.H/@0&bW8Ni,^DFp'5Ic<s='
%3_7\M/^$fW]-8UX$di,&Wh`W-AuVAsC%bZ6+Y)m_%766Zh'Ab.2R&r*o]ier)f]B7$=X\a@b"[X^CR(d?27g<-2$>^BEk\S@Jo=H
%l9TU9,484.o1Z2[5hs^%9EPH;ndT:t`//Q(%+<0,o[=VX)E&_i*OnqOC8HHKZadiuc,ig<l&j\7$,W"M=?/@#M&fP#YH(i&5kF_H
%KgaBHan]u7\GA]59hQ2!NshdG6PRsXO!%%lMSoZTR&C8rBo;U#7ROqPD!g6fhDkI]RcZ6t9_SF:fhXJ;,P7F+fl6UN8#Hr=`P,:V
%QdM27d#jerLNgEfL80T!:oboJf*QD7ib1HKO54agajhm-E\+*_h<h+MJKeu6!=49cmj:@i;?L+K9BfPpC,\CQ7dAP\6NVBD)eg`*
%QVTRr66)5WS8(Nm(Pp)P]Ku%D,CiVcc0$CoT6KF:1n!1%^282Dr'ap>(JVh)!#MU>c,:YdmnAV^Hij]&0N"$`E,'ur>pai_PYZY"
%o]ig-;P!USHR5#86g\bEa7b+.)P"qH;%'oJh(&AK`(6A5hnh)_g'ttAe^q`^p(68S=[:GDE<NaWB8ZcR`aD?(^#gj/P+5S*@<-1+
%F0CUE!>KI@@3Z+*M%cpDbk09bYFCid(e:u-kH5YfCuS3`,^cY/Tia.*F'XeJkf2I5%L1*;E[K4gdacl/;?@`be80[n1!>L/Gt-'s
%3I4s9RYKT<!-^rK$dk3J]))()X)J")cHj9%pp9MTmk14q\UO5Bq3NHf2s]d&U*`^/IXZG8jn7<gc.V4Q#7!SFZMsjiEr)-shu!<T
%rQPfLa05O?VnYGXDdC'VhM:grl<i7`hu)I.o;cM>qY?>]e!m\EbEM7ahXIG(<knXW`VF*Bj$=XBp"?gXDUpI*=T,*Sr:p-bjE@$A
%k@`u(Y1K#i_QQ0$m..%R&c]H<l,B+jphMes^\V@2iRb3\bO=VRrd8bc8m4AbT7-b;k(.]B-PtR>NBeH^Auhj$j4Uc.k6klHm5?hi
%,uaW_Jnb-oF&Vl/Z_nn;^Nb4ue@g,WB?q@;"c]s94apQgLS$I`Kr].lF+&B+jQb:WZSo`L<tB/?ac*qYhY!eiZ^[9hju.#RRq5OO
%2P,0blMB7:kNg=?op`]+5P<%B@\%FJ6C1b\hjiMm5/d"=ds4OPrciV#?F&4ief-]9LI6CZ`4eB[\c2R#qL?.mbIZbnhJ0g)an[mA
%m./]G(T02>IpTKke&IlG'9:\6Vff\%q<E?aaIs%Z17O'=ls;X52`&SK+5b!n-=_N'Qf#lYI!t\QqK2]#ouW-TB;Z.*lH:Jtp#Y<o
%fn0Bs9]G?VqYK:8l?^9GHIM7F2.r6dEK'_1pl1o4UT9:h="hm;Q5u<91^XjrhE6<!5?WKFqIm(TD;fU1Wn]81b/M%D[o_[77$[Z;
%qP8t[kFZ+P^"b,Z4/'kM0GNoQ0"6@LmWH(R0"9Hop:B$cQhtFIjl5=KjVCR'7s)9Ds#@Br-gO"#cbFpXo'GY^8)^%D[P#b2\m<g0
%q!'4ir=N<4$RFl$2pXZjs7u!aj&r2=9Ufs8?Jh?hHK_6[@B'(OP?0DESt0+MH$FMe/N5?8DU4WQok,6)lV$BEKEXQoTVB*cG\fP;
%])(j,Qg:-mS;&%JlX/#oG4Lli6PN!Hhs&\eeb-]Tq#"R6ATlDtFM>[O..&q#k8$HP]R4l#h9"pXldM&/':Lf9Z\3gA)D>I!:VV/I
%d(/rWq8%fuF:37sS+WiRPO%-)ji,d3qJs]bmQRq]#qhk-dFI@%S!1=M?[lTV'oo/5[JtUF2u;ilO7Lm3lAfT+/@Jf_5B+d]j6+sD
%hj'/jjji&Gc1*Osf5KO%0YWjJH7X*S:'s.B0:o;\66DaSi%7Y]DrVM`m]Ep53mZQ+3OXnL/<F@j#R_CMNODq)qdIVBpgJfqA&7j9
%_aF$cc,"8k*$-k'c/oQrc#t1iPPjM<m,n,_qI[i[G3XO($diPOn&Ft*RkIR_*n1bqQfDs5_/EiJI2bY]aT_X\qYL(H^>r$]43J/g
%j'7Xh3f8?McT]M7hW_Pj']kMob[nubJKKC8o]YT*r5nVXrRV3:Y3h;>=`e!DGoOAf\)@f5A3O@m4?IntjGR]hc0CaY,qA66g%i`&
%QhaBjR0sdBB7.!X2VD<=qMe+\=4]*s?_(PP^OW;%Tc3L3f[ud@D(5(&7k%Qp3gW#$qLta4`t1o?#^Fq0$iF>CF2!.d<0L#tn/[O@
%I>!IIMg![[TCk^Gh7l2phU1]h"d.CuQeh]/'('7C/tN61fp.J.`rQMgMDL]A\#&<q)pV*$%!U!kPHk)&(#LXr<kH8O(//?+rA>ZM
%E7Q!l5InF3T7=O<?_8sW\(lCB;tKm$JVWa^kBHZ_%Gs(9S@s;iIWE$6=C9q_iT.sQ?9&fLXh+b>[[kceL6_bE](;\drV5L]duR-)
%;Jiqo*-(;Jg''CBh79;0AgGGlo!fni"97>&9ObX0gS2+.p=$8lf5`8/4r+t?G3@@.R*<m)lF6/fICCo)lFXCoo48LqkF5]&o<ZX5
%ab%UqVJ2\%iG(palD3[A-?[!KOnHu*3dLGcm,mZ\94l_DDJE3"k<GR9oT6:8B-oPbf*f+q\(oJtdXp^G>664kXYr%rbH&f4S*fk?
%e]"T@6m0^^gSFAZ<bI!'FL=MD]%YpZ(5NCJ-.8-0:;_SQ.a?^d9I3q_N4q_l\g8C4DR[S_i-3dS(JF0rC:7!aioK[s@aT2qc+=n1
%,62=;)#'.@>G7^\5,Ll8-'R!so>Nm+AXi%mMg![[TCk\qM=QI\"tm`&gUUFNe&N/\Z=G`&EqSdD/BS%AE^sS9*lY7fk[\LZ/B[3e
%MFCZ'R=-X/4r37H\8CrE-sNS7]HI::EQ4_(ieUfgeNTj4PU2OH'o@7g@o4#D`O;D!`u9kVqNt_hQ:tml:ArN'V:ihTRRM#f(0k@5
%CUr3XH&ElZp+*CpL`<t4&FX]TRiK8>_Cti^Z_sE,T$#NSfg<'(pX^%9hl\+#4>q0FGE)I*;9&HU-o64ap,7:Mn+k[h:U'"tHbQrO
%CHKAaIWsTrHZ<mUY&,t!>@Wlb\_<XU]cC2/$Yt)tD9pc+>j\e8[Ac[[km%(?g\+2SI"Hjt-+d(c_#6!6qdWV!a(W::fH6me0q.Kt
%1p#,W!'["H=,UP_->b[fOYu:jjk4"lk?jgQr:KVoc3E(FK_Dg-(4;qDou5I6GTXO%hK!f8D#N2Cjhld2B45(!egEDK/-=:f[,'6]
%?G6Cpc'tW=a/.JLdes#AE_?s$p:rMSRb!rRNBO#Z2BfZ5gdcfq\^^UAXP3](e:)<8rM]['okr2E2Q),=%H>R>M+3Q,:uO(#k\__2
%G>Y((SI+:_2P#?;0`GoqNbq#Y%hA)AE4,%e4)FeXjKC1B>eOsRlPH`Gi`#k"5MIG.37?LI,SsQj%K#+X&=VimT[Cctc388kE_(Z3
%i#,[*FT(0lH-YR1[X/Jpq=\EALqCO)[f1G4\N[WNI^-UiEg,kJ/\+u9fr7((*J#k-MG%t+*>*5#[eib5IAYoYs81+>^HXM"hqnCF
%X_`4Ms4n.an%LErhZ(2Rj2'UPqquqXqg\A>hm\mmi;rYi7ggWb^!Cmq/LF\>f\64MpHIKJchFPqSY]QVl\/1!ZdtW"A3[3Bc`_eF
%o@2(3^41U\)B>7KG]U^fDEk?[)0LL`HM60=Y?nAmXtH2+ICY"ggj*@=;SrQ:rp'?lVG/YuQ1O-BcMP'KVNlT#Lb>OC1OAC*@XAL9
%hEnZU8aS*?]4)r<QgW[A$eZ`'G&J_^+u:,&.j'1h]j>&pe>1%U8+#_*qu5lU5G)5PYAZV9?9e>NlMBT46,3-MI^TP@3%cmtT)A9J
%iml:@[1m8o8m?1J(ZknM=eE1\(>@(]D)Z:.q;dJkg1)hVNQ.iC_MZ@<E9NkJp5KqQB$8?Rpor;gLR0[FVbOn:IV5&NgUlc^k.gf:
%M^GncZKU+mA7H9XE4>%EhnioLpQ</JAT)hH)d`5mQbD?hDg;*>RD[nNZ<N&"0se+C7BA1RJ(YcI[TEXf)d_C@n?P&TpiteG[`3ji
%[4".!D*`Iu*Id<+&s!`FipgR-^2oLc-99OmK2!lt#hX=)M'[5qG-HfLJ/N^<M-l/55+]n5NtuSAH,SY7hiHr52d`/H4_Sck?]J@7
%PdgU3g`nQ@0?7Fk:[RViS^=cfk\f0#0Kh#kVRK[Z4o3SJI;)X7o]+8hIf93*g!u/\+uTBO+@V>A.t7T.eikU6CIEcF:M4$2..Z%Y
%>\=fmo9[^=XX/$j:i2I9D>3SQHL>qKh01O(2`M8ulXpT.nuePZ05-CGN&nc3Zau2r);)B_H&$:!h-#uUL:.I.RL@$:hRl4JYEqZf
%=i3tiGV1V:cAuVa(.HeG]1l#^^nh3u=X"Ao:`SgKJB*1=]PL0*Lpn=fDYJ=5Il]Y\hV0c.8>k-d43%%$lkiCXYd\+YXer^GB7=d>
%f\8-hD.WEaN4g6A8*h'h1N-#("XIruP.B2j(4;qHY"qf2:<l)=3a36:bg3um_cZXPRF:?G*6kg`h"\'kc>HB!19\q:::0oYg%hAD
%j&t\B9l;pq!-Ii"aijAGYLig7eb\iYM1T]IrMJ_c"QJS7e\r?leGX[?MG5%.lpr]^3pmF!dZV`=&YAAVg]J#QJVNk`6Z8RH,6Sq=
%is\)\h6m;rBK06nm-*SHM7e;F\QLHqo,[p7dLqE2]BcMU-'p2@>:=a/)l(I.^]qJ&_p9E3?%;b:]^;0D1^Yju6FU5nh1M:M=WbE;
%e,$LE?@,'(&iK]/"ahnjcAi$T/XacTLO8^kmHI"&rOZU"?a;*WJ?RdQ.,;I,/DE%+_BZP.&!,<V^EE/^k:H-_?B6aSB?,/*AW*kG
%k'lP$mBsL<2Rh<#p=e;FBlaXbY.Za&fB0Mn0g<JDYXbkB/\m@u;0?cmbkC>W?CfiOF*i%IYKm)fX)mNFWH3upZQnbjJU8@Dh7m6$
%4o>6TA-nIUH>RQQRdB^Xh:Lg2>@iWp3l)l!@Ikoa$PV`JU^Z&(j%A\.1&&0j4,>Dl_9"h]k4S<GA8K7&IGSLPY,_CQhk$I1rp\<m
%8QRQ?:=!g,qNjY%c^-RTSM.6G9=mpc]7n5!GNKksSBn>XUYfSAmGo^"\e*VFlT@6"k2-F%Zh:_I*jp+ZOt\nW*Z&aAo_%d"f6i!m
%Z:GOo[GKD&qsjKVo_*>T#_)8(/jGo^m0>O,^BLYb`AWd[/u]3T'&E!L':YHHJrlUkYHGW%3F+;oPk4$a"nj%,`o8bV4**&,0228a
%JPKHPE;!'+H?SgnOn6e#DJEVO!dLF3H2DHP\U2bJ;cBD@BEOVamn/!(jG[uGj(7*/hn7-`&/.$h.t/kB\]6>slm7:dQ42WMOR:=a
%#>6c9FQU@8bDWFEoceDQmNYr;:$?!B6CkX`aBg:K$UsM\.,)j45Pm^[Q8?2&6IB#'=5WR1p<acKhdN&Gp2@EGb>m23A+tS5mtZ\F
%A#>087[r+<9BNJ>N;Tor,I0Smr8F>-ZT5P_?AF<q.qWjYRqB?p-bf97qX!A?`HkBIL7Pn#QQ)m4s*d'p]D;$Ylp2A,IlVC$;r75k
%EQK3/rGl.`Z0X-aD;nLkHZ:ETXo7)N)",CLZlngq%;r5no59rnm]=Gj*Q:eALe!9[o=1fX5AET\`sa[!-u6N0&\Mb3A[WTa-Fu0N
%h(?E"fEiVe<eL<khbQ^eo5*[3-)XBTm_[*"qFg/'p@QP[KV[uhQ_8Gl5J6EcD)[r/>gh#0L%ooe)0)-.6T^?kEUXf11(G)@hHQ&(
%na<JP)k"tf^JI,\-;XXOK1rq3>dO*-mEnARrB4e+#Fm&Y-"'W#I$A<[],a</G&+GW/AWne7(\ZRoQ6cBA/"Cb.GB&uqCu9WfPBAl
%\%_k?g%>R:+5=6@2^dK8=l#XQ:AWKBgHJ@,^FqH/c<>.RS,E99jloi.a[R?#-9EcZ@J/9^fr+^a[cqYk*^;H-ZI.SA;K7fhr5\,e
%bEq*<WMHbPHiEE.R]RCS*hDuaXclt4_XPCJg8lR52gsJj3Y_/YnbMue_teZRlTW8Xh1SnEUCk.M&Yrc^r0\LqrpK?F'gj0K!pSt4
%=-m:&?3k')5j2"phk+1Ls76/9T>0<5,6.3!T.[jk3eu2Me]l@hjTk5bX,l.fDchGZj88;YHN1\YjV?qQ#q00=?Q(Thbtn-%?e\BV
%fk<UQgp$XmlJMVO=?UF?I.J*Pf\Y`1_dOD1lG0s\"b*;?No,?T@.IeE%_\Xp%YA%.e3cIM=SS5g3^O4h.brOWnE5tgTD1-"*7d0Z
%2ma'!%nH7)mT<iA^S1HWdVmQ,qh7(Kcg[uqq$.pj5(Shj-dp^uL\\?=&mTe_K)RhQjtu53o!SFX"$VMM@*im&3d:N/N=1Jn8]3M9
%mO7s#5Ki\iN/iA(hd`W9Hha7V`ns_PF26W+61_981An-mV34p8rK5=$214sHf)4-L]#5)+[eg""jOm\"1fr]B[.FS<gV?P#VqgQ/
%>O6tCY8`5ISSt:Gj%9UEPpN63.c]Gghd"B0VYaToZ?gQ&[*L+XqJ8m*:KkCY:YO\)e,/UaeuYunhpg,9Fts#cqU<7_5>Kg?[SlgQ
%&+gO](Ac</i!j]`h(&0t@(Ya;0.sH1DFWGK[Y(IC52?au=e@mj!t]pmF:5HV3R8LM`,`CM>9M_Yd`4FRi8Hk<Dh7f_/>J\QJ[PZ0
%osEOu2tQqE=&0cBIr][S^A<!4Pi9f/4g(tAIs226o[?lScfCPme^Gf1J(!V_``6C&>a'*cO*VK;lD_PQ&u\g^2j6.>Q.qWF=-5]2
%LL7/Zc8d9]J"/Z*^HOkl`3mV65J97-p>=Fc8LM"pSml40qLd<Ws#.PHK[\i!r0s)Dm1h*Qh.$DfK^n)iPbkHG+5684+0joHX1n67
%s.&QRBfpKZ2VN)W&Tp=uBA1`-JTisLUg%"E_cuc`7h9P$qGt5=mDhsMU!R38h9U?;rN1Kas1)cD5M5_$IJmR2GP:b.ZKBKlqP(La
%U:<98PjeQjqLN9d?5>qp``>PFDR,k>a@F_@5,eG#aj-!?SaDD@5E1FeY&nD,QTG(=6fIjf@/*7*g>tWE><g,C[`R:[HYo(T`>NqM
%n%JPbDgVN?pL(c1gj]"+]lX5PBu21Mk8Ao5@$u"V\JG*>L/?5q(h7R\D][%<n+kq3'3o7Y2<iQMT8mVjC#s>#l(=#N!8GJ:gIddV
%nD1;"-eG9BDf]3nqY5au?FO2!DKi^:LFII$,&(OFK51kXb+\D<@e8OiL*dbj:Y97RX/l3&#EpMG-@MJkeDfcP&5s6WoXX[&kuE4J
%/bPB$RQNRu&naran"2_Ws8:sh/6Lf;9pn0Eg;O$DDYCNNl_05RULk>&@>W+J_$p8+%N<Y6L3BNL8SI-9-.g&%.j#`m%/4\\R@_1i
%nFN]MYL]UQf?`1?B[IWVkK]ASqY7BmAU8k(mcsX8A&!::[4V.>lJ)!\O$B[@gRu8M?(e*D,kDJ#cgo>e]3j"$iCi%dA,I@QmU*R%
%Gooeji.2gX@qohX/Rg:6WB[&@jH@n#Yh3C.+H/%$,5<hr&@2%uL"gQKF)!IG4q':p(8<$k$DP*)4F[#Re<N[^eNln4+Z/oB#heB/
%gCc?8*G?T_g-[LqY+'Mm[.U;CF0&1Sj5Dt0QGqUDd-e%pUr+q!dHcM8p1Tr:@34GoZ@0>?;O^5;O"&Kl;SuTuiKS5`*(lX-$*gr/
%pqu+h=@$n?BX@3qiR#jM?69]Q%jBBOLb&%`BYH30he407(U8*gdp:<K8!iK7=E0m4?hm5N8ra!+i3rSRHGkkd+ihUl"+H<<->ejT
%<1/%m/>9%6=H2#u_(jDRE4f_XXUl8uNQFm1p"%8-/N^]2K2oMfg'<GD<,uen`h$sEE;+3:]X@r,;[<0B6#!CIB%V9'>L0`:MQcXC
%$U[?e4P.:h?%1Wr/E)5LgUD+fVJ1AD8o('VnV)[nXK?V)Cr/Gs[$*$6CC*JJg<qS[D+@Uma<mqF9/hGUNNL9*Q5Ut.caN7oY%:Ps
%$L)$leNep>JM=YL!u#DPTapJa,CQL>0CAP1ii#TAhI6(^c".#dCg.1g>tYi>Nqi5Um?5N$"J8i3U^rgV]L@U$1dW$//T8;8RSd*!
%ZkR#?2/:%fVd^^(d*<08Mmf%Dj*##Ac><BhREok7E'sNbm0&Hc,s$TO;BS<M0sW4^A3piTC0f#F%'JT"o/VmWg"$engYn7QpL.kW
%I^2<3AS`Cc?AqqY2a:GSHHCh0N1`5%:@AEC7DYq`g8AZ.$)Vd>49j5F]1m6%$F=IhK;L>%B`<uf?"6M%&f%9p7\Bk@#c55!-eYq-
%P="LNV8@&Pd/lLupK6%ihmp+Hh[$]WbKlJi..(",7]"@?Udh%t&0f&$TPfL#N5oMm?n,P*IE]QrO)6CJYeRW"N=[$BTH0SCbI=C(
%jP.L!LEkB)H>8qEm<e?9Fu"XTo#$h>BKjf[BZJ*"e(VS1m3Od(B:2jmKRMuYb[5>*g!)oTI:AE<lE*g1'=?ca&+>^1&mrZaCrXsM
%P/](,TXOXCYn5/:kM"V,H#3]QE:pT/<of]@9p$R!Rm3]_*oNiI`hJq^<?7*JH^l#%!<=YAnu_F]40\kjcc-8HD6:'.bB<22*?5%0
%)Rn\4hj"`_F.;\*DUO>X:i1j(JD]+pR@#Rk[aEi'&su81:td#s^*?)`)@pU6#VL]n[I]hV?B$Kp#3O@pVNF99[_GK8-?hWnmK,Cj
%rGV(r2=ZGZ!h<]VC$dFhTt6ApkYQMZn_c+D,!.?`*s]AB)tW/!Z*sP)IJ_Mr0#US*&P#nbcD'fjeq:.NR/g0/#ofPBB3][u>C'a4
%Z!A\a.`%C4:/g2[,gWo1b,N&]bR>KsiW[W)XM7-;`/W[BG9sYrGSaa<aYi,<D[3Y\5]\1#'[O/"?CF.,(<;KMZ2-q'WYq5`%S733
%VbT8#RO%'!PARo<(X,2BJ[SY7.hTu-4J3!&*kO7fM++UQq4>>g@mtVZlUWPb=;=SZ=miBId66f@]_L?=&mA2O6GsG>?F]bL7r%Y/
%kN4F*;PW%Fnk0YM`rKumTts(pM0/9;$OKn:\8&#>"S6Da)uFqpf0u0)+dRRCgaXT=J>-ko[&r*6]Fc,h^hr,`G.6K^0LHN)e?n2]
%Ni8jm6%$GLHYrq#I(u3c&R5R(fs#dE:E@n'kG*9]D*<>uXZVbO"-o];ij#UEFKuVL'pBQ:LR#3ZQNV'iN5h,&D4;k-@>@:-Z^!,<
%`:V.U&H[]@UXOAi%beUW2V"YkZhCeq*6]VIPLI;@X\Y7s[5$ujmBNdf/P`pJQ<A!YY2g+o;n0VM>s;K+I"(Wq]t,=6j&BOZ[rgn>
%f?;M4Q>TkL4W^[k/9hXPie!2"q]m^"2<IVl57`d^*b)e\kR$2^='`GZh:QG$'t-7<.in5iE5YtJmGZLuLhj)gcu";S0T^,(IV;e'
%<jV2j"?t4DZN9&uj83=`%bu`m`\Cn1b"[4+,p\3gA+A;Z6U.sJqZLg'U#d$ZF[-!Ze9sEqj9KDA=4?s>$>eK4PfhuS;n+S8fi*3.
%%(O0ij+e&H6k]0jI@q-B.W.<+OQinR9cRRnYjp,\$<cS4Y]i>JLs5-R5NWi-,JkmGLh#IBP=BCh^^c1IA.dh&.3uX>g9hR8^&be"
%M5#ns!:-iL5\ZBfC`4QEk=csHd)A=I[DjgSN>M`(imoF#UIk2$KJ8F?0>Y`X&QX%1NbQ4U8'aL3'4>k]mg4i_+kcXT7#Q6)O_qG\
%:4ZqBH$N?XE/5HAFEHJ"fjXA"OQ<iYBGtA!kXqniYUn/hq'Kb0hT2m?(IcdMg=eIt&6pgIZ>RNmqnVT&]8*<CR`CEpD/2$e]D^)_
%&d*X7868s+%\S-`O>DWMlT5_\o5qsYQ4]T&K%E03`l=.04pAE(Bu3`ZLmb=BSaV!4oXuDXc>=4OGo7^2mGSpmK?2"5Hs8.g87[=r
%+D]@]h[4-'?e&uohuJP8)2ME$iKQ<Z:W&t?/O!<u4c(,>>r,&O?5EL(KSu5=[PB['e>+;T?"+6;0U_VNo*:'pRFN.]iEZbe;on`3
%$T:,8#O8uAjVR*)0a5dra@4ldSg0L>'&qj>V4-V=Rpo(8!o-0(k(*]u`YbtVp)&GqhepCp$hhS=i5Z*r+ARK#)cSmq9fBZYDMO@5
%>l:fK+VLN?Ds-B^[fb^5VVbtoV8%#0I+[(fV,I@K*]L':",2JMhilUTc(8=\BG)\`J\UNA:DUZ#\'5N<=5.sbNq;Z<lAh"3m0f!$
%e`?`kQ6<&mKp!:upd!ttVMSn^9BZ8e5nX9p:EEi,[Tp%!i^sWQh/W1j<e)#Ya..g2QH9M+2IIoXZ"-dA0$b)GTZK]i`?:l'amurf
%l,_\/Q38]$$ojK2/LT[aJ+%`V/:DFMfFO[_Yr!6b]$C<V60ae\o!C!3<Y=c65b<d&HFuo=(O,`REW)5nO0@._&%R,0Srj6jYhMp+
%J>;gscp[(+='X2fU@Vj?\3DO&N*$@4pi.$e\Vb?f<tQMW#HRlJXM5e>YP7sl^V$?g5Ko<m[jr$PT@K"kPKT*&2SHqU44`:!o[eG=
%dpHF!S"gPS'f^BZr'Otj1"55Ms4P=[qX!dlX..j*C%ustP'^jM5rA"6LjnYo8:S>92uVj0/OUNXZ:!M/oNU34qWg;Zkq?8ME?K',
%0GGo6U$9>k?#Q(E-Rs6!^O:D,Wr;gQDuXm,HIMR*Gp?BdY$\ki^A>ahjiR8_ldZg'cdp\i]]kJ-rp.tRq>&_<S44Vqs4Go\_c9gP
%\2dfB"\&:*]5?:sh"mC&d8]Sd4`[HIm\;r8`LfrOhtXu/Y?mb`^[l++j5k?1]^;^P0&%R5T07Pnr8d_HlK!>8Ykn=0rGd8ai<QDN
%q5eE^jra7:/C4L*qLEN0qcBQMnK$kDr;REY][r5?msI@'1R<RK*nii<'bs8Wpn,4t*PQkUFhE)_n_kK`r;I/uo(`NB8(\ZpF=;U[
%:k%h\F5M/\q!N%`%k(6L_j(SRq88KsK,+<'7=bWFDl-Nq?[4$JWr+dbP%]7C_uFn*p#@@s#(HU<Im*]#qWXnbJ$Ae=o/:,SDJ0j'
%T@_ZT_]pntEC;rQeY[e=\`+sNQQU]cf@#Bus8VuLbHlA1:oF&0o(C8Lkmq^_achpTB;`'WY-3:V^J,N9rcJ.Y[64;T>Ic5-@TYhT
%L@R3&%grC37/4+$ccHKopYT3RHIA-k0!priF^at%QRCBDpWi?nlLNW/Z^YM>I!o(`qceL=f7+`]f>#NGZCO1h]<bT=:6#c#"Rtkg
%eMOTEV?o3bi_Z+:4k0L6h2/"S_Zt@o5HkTQ5-O3JIsS[)h4N;c?T`]/(8(P2Ik/GH_X%=W:`a[#kNj$g!^4bAW:11S9pctFSW6DQ
%FX'=eD!W+Sre!?o?XH"o)8@$]pNIUia]s0/YFSX>k');XT>&0MplCS7FIQM6H_[4G3ktKO.DPfWm,H!0kEk1Nn,2"`U62l]SW<rJ
%Tk,dCi_Zt^@mK6R/MUH@q.l7T4&^=6bZ&<7oi(Y?s7s/(\b`N0m;N$nhu;frrh'5ehuED"rU'X^g].4Zs2PUDM(Z5[),@?B2rB['
%St*!Rg;*=To%UVjpoj^GWnI<j#P8J>q('2@r"&82pZ:Xfhs&bmp)FsJo&n!Ll\*P_]-D[CLGe3"XgC-0T^2?J[U4IZAG+LLRD!73
%X`oZU4flcAZ(tXXRfBSWoCK")m>2fU,50foGh2N9lh1,&>,F'>&?'N66BXXhK^lk*:FEi(%<34VSW4#:g]!>:r=c"*C&<'$^dpZ)
%B-kqTDVk:%9p<0$3O'r:*\53=^a./Edt\pKYZJtj.H%%R`XJsj5ElT:4SS\V`)_<_>M*eB)q4_cB1aWjP:'GVJ,hs("U5<\)t5f<
%pi@CSFQM8'Iem85[]VrgFB.%a'9-lT?NPF)bWa[`k'],@Vn]@OmCq$,g)SMV:oa6>B'?Lb'$kAZgeI[FpP!T1ZCuD!9KEPPFt.Uo
%<.qn\B4F>/(?.2Z%RHa\E1mF#/7Dp'l'(#%g,E>5*5kAiXDQJeT=ai$EZSp-`H8d*r=09_:XF[LHe7nm]BOam]D6[564l91MU2ap
%+c^G^UH!RSJ)<ds"b8905d8@[2.n:GqBLh`AlVl4]#q+KJ:Z!4DYH3MJ+)H9+e[d/QlT)KJOnq5!Ws:Un46r+B?3iaV:;7ZG4??6
%%8e458?lU6lqVjqGW[t@E'e)WH>u$gC*^dbA24kD'M]VXdL5q@0X0>_p(Ycf1A6lN;N'?@k7@]iftpLINWS?0e;'kK6+?Fm$YXsl
%MrZ#dOpkYY!CPK*Cb7?7T^NH!*V@Y;Tcp/U3T1AXbRAa/J7e;!LYWFrmiY#bfBX[e7o2$]_Vt\'8manS"re`r8`t+K_f`K%AF>9X
%/Mn)lNLn;YE(O*-+?>tDdFrCf=9N&"KZ9Q8(O@+7"h/]tcl6)&DC6kKDn6*r@tK4V$nNML4Dlp#B1%<f!PMd'BVOfH#a/_;g&Z./
%%FRhR0C5=e:,(1MrBj.:@$OXs2i(d8aSg(b%_/.WknpYb5fYu.7cLsa0$8-c`JZ]YET08n`9)VrGOU5$c7^uaFMA(]dYW_DUq;>V
%^)N?=TP8PCJ_=l][gT;a3'[`^VcSP(KMAWUZll"I!PUBX4dQOgl9Y,/aU_?(E<O)!a@FTC;QeA^!f(P+9G6\81U/Qf(BJU8Ft]]3
%=E935DD%e7"t_Je/T\c+>sUKd66`b//5V;#;;2AcK@H1i:9pSr^rEPt!n1Q+5r_?;K;Ab-?F!WR#>?d?Ci;gI!4UuB,meJ*,H8[0
%*nf5I33gr^o<Mr)(M6?dd(6X&CgsPV+QY62Rt=j[*518q'4J@);@_j(Oc.shTS,#W*8$Ar`sH/J,EY<6%H3#5i!2_kGnDENd->"9
%dH-&Y%1jH%++]t+!;5`8F)5_!=rVEQ.+.%-9Z0Va$`ZR`_hlqtZf[cQ_Vq1<TMQf:b>'Nj#Nut,,=O+>>37n+$4R7CW6jImHe^1?
%EB0+'Fueqb[$4iK5Rn>#$QL@$$X*a4'4iPf2[.h94,h`H_/Q4kG7ktH$"-EA@%,%<37Nd#MoY'Jb^#KP"RILPj0Z.j%>oX#$5\7/
%&0klU*jW9\d+*#(1]]"D6j#O=[\8*Qg6H`BZ3Lj@!+PR.!EZlBkphab[/b_05]bs.#kXRT^n#-K*Ho4:?C'_od!D-Y59.q%'GjDO
%!^U]o6mZf=N>.7&.,E:Xfj%)=;LAJP(WC,Ih?6.t7XC]38DqLd'>6iM"bd)F'?hkn8N5E\78lJ9=DAGc$uLaC?:YEda:+'Eq>p.(
%&c`fi^oh`=cnr<7kp[sP\ne&W+&7].$7qpU"%d0Pai.).,\`[9hFTMmA[jMs?ZtrM[lF[iHFKKY-SD='$n+eR%L?_J^XlM9b(+GJ
%8cfP7]<EENn-[k>]&GhI-RktpkL`?:!DXjRcq*(kCuo(Si]*I#,*9)N-kPu97[^bk:=99<ZoTZ8_).fbi1ae7S#,BM0H0ur(4.FM
%"U:jMKkAa>1YF1im\G0mVPfiT/JpDqBIKNsfL$dqq*6%l]L]^GjYTV9Jjo)rY7YY"Bc,mGZ9UP:EKcst]l2!l5g+YuMK[)"/;"%l
%fApB@2O5@R/)00.PP%2VMEoC(^]%#uP0eGn6!<A[oE\kq2%)CdKno]d5c>k^]%ooG>k^,O+"4(*['66Ji+>PmQe.)TV:,T:4ITc@
%b=0Pt_F#Y(?iT<A#k0J]R>bMU7[:mYTl^pQrZ!!-Aqi<qaG+]^IH,gM6/.MY7c"mTbCI%[Pe+2HJTlgZLGHN92TBUDQVr#17sC,"
%cK4!M::gmj?(d+g8BV$t&(VO>iBh9&pN;[epONP9-Ijk,DVQeF!L=JkDIN6&JW'aC:>4qdpDXu3T'QD5kMT*GKKq[$r\BM;NBgtX
%[O#(LN!&O"14[&[^\AnRed.:`0$*0u`Z9_8>bo+>jX@DfEKk36HE3jiiVn1H09N*lKTcoF;?4lp-:2d5_`YAM;-9F8P0kdTFH3c6
%E>pMS62gL^+Io!5!($Q:S<OcNTHNs-&Y*)/VQ?3#027"]kScmT`,9tU9Xj3'n2qu^E2ao^b&Yl?XL#G?*fHY4KlR<pZ`a;6^q9r2
%fTB-,7Y9Ql<9h1mZT\!](`lKP]B>$%`pgh#o/X"f3H;h5:J\"<E]X<>^4.ROBF@@7S";hU9k9?Dh;%Y3)!lFT]mms?BXciX=4<#-
%6./J7aV<&76LrVaF^O!104E.fXHarAG5m&ar5XMCmgo5'!OhrR0KC-9)#,Gic/1earC^;CG8e>(/uV-gTTRR"ru(."G5nkFs6Ta_
%f36=pfg#H?r;Aj2,X9*jbPs>=n%kun;Mbu=VT\d%f(-F2rEG(q)^/^1s&`%A@eZ=4a%!K7>7Bou\F*]$87MUgN5mK)&+<g,M)t.h
%hdf:0]Q)?hN-;ukh@uinF6U3)h`lr8FlrCo^Pr8F,U7U0F:>$)r]Me<T\05ZrRafi_[/$!?I0SYe"'?2W;)0"Sn#1j8tXa^3h=cE
%q^)]ZMgh%"mmb3;Fh5>h:\;>9r-,2<?*N5K5)*n!H\r"K5OS5!]L6Ao$J?$hj\?iXk,$@(/+8eY1SU/;H<F%)S@(ap8M![7p$g;e
%n@54Wp<Wd1TE"@Es2TWe[t"DOJ,\@*r#bt:n,Mp-]Rq=*YCHO9i8ak2+91^mrqCV]UHrD%*!7D5KOq^\2L9W0BU,]r)#8r5<h6DZ
%].2J_ZBo-I83[q&H>L?>oRW?FI(>J)7??WZDKq[J@DWNu(8T\-i_iRC/m.L:&uduVT(Z)>&$Y,jT3C],7l!#\920k&5btHS^n31`
%6.9O4S4jbbAB-XHdu$AWdscN'[i;K:Zj:d&_KrLp>3Jg[5E0mQ,K&ipm!JAFhS!!GVt9Pjr+jH1)U6uPn+;3V?Yt#Iea@I,T-&9D
%]l`#jBt#.TVsbjtKF'Wu[^GjX5MT%qn#,:0Z=[u)AAf!p18JOCI11%Fk:%Y.i!cf6faiYH)#jp=[@@5Af5\Tj+-.hWG<>$E7<[EG
%CS'uQ5$m81n:3?^GZ,Qn%sQd6qf'#!dg$fmNu+U]dc'3\E;R]F<+F!\j%O%[3'BusIn\a.o_L^2=e:DDja)3L(P_@Y31VTRS+l1^
%bk6Z^O1\(e"QLDg"tntJs.3E3iiOf"F9MO>cB]6KX#Pd-.8EZs.pjLg@,[ecET!?g8sf,j0^#!n=9k,HoWKt(c7d*2oY%ol?Q%Y\
%\ROMNCF%;ks*ba4(,9@7E"n$d0IZtsYiq\4q_bV?j)AIc]8=li`SY<0idrJf?>c\0B/"<,9aOkLiV'p3#I7i1$P+7?H,d_8TP>4d
%VCq0l9r]Q(2P;CA.ONMe-<P,rc4&%WotkT/>f.FDZ/r#gCG>DF0q7+.AO!B9a94m_^q<"P32,o$'2KZ9^7i%L%^pBq64SJu9`LK_
%"TZ0lCR=u@nF#N]AHTT3rg4c$E0l;,ReW)i/r=\,Z9W",pia-kYT6AlB^>G8]k4HSQW1j^0N)hV<)B47[tU%D.`niirG]sd"EY?R
%nF0lHl;\h74C4(CU1K9d06Y3M'@X\".9lV*pQZ^7Vm?lFRrD$"Ff)cpS$Ml@jEb,+lbF_q=oA\Q2gPO94u$WL@LPA*0DFZuV=jK<
%JP;[<kZ:L).`>o5E^V+ur!2F6cih-<*H&na6D"/$Seh&^R\`e]FtpTg()ph(nV,p9C@ONcLa:7(G'R8A-&#Zuj"E*%b6-(%\I/ct
%J26?^'_8E"<"sfc'q$1=<BC`;fAI0%9$%P6qW&k+eip#3&;8+"&-u/;E1dd3i)?+qFY3qgOHOLKE\*-3E037R8B+0@DC<n_Y>*'L
%mGu*M;Tn+b*[8NN&i1m.hK;B8:@o:JYNP]giHC[GnFShGdnDfO!jaF(GS"f7EBR.9R';Q!fTmh]V%"NL5]qsa+4N8-*)E?aq0I@r
%3@"jE[JUnnS3VFP1b*L7X1=c"!tZJ4^LrR_P_"V&4.@uuXPB#cn"#D4>6tHUVeMbZRuhJggY[SB-=ohkXZbn05r1/$briu\@k.T`
%0b+pmS5M1DNhX'u>GA4!)TSkp`L><p99cQb:`Ihh[l-fh(#pep:>6Cg2p$&+P3(C"e:OgkOc+lAP?qe[qZPrf';68r81)G,LjYZE
%fKT(Ra!gl[jd&$?Oh;o9(+V2J[PG*ild'HZfu)8kJ4%<EfM+G`HFR;Qj;>YbBsl`W^d(tFg)Yb/IQU>Kk`cP@VSH&81O;E4)pI<V
%5eG[0%#]Ri[6$pif9#"&h'fn+mG;!+bWUi)l;/cf$qE6FOLR$US)0a^CWhA6M)p']gDu0epS\m1+]LHTm3hBod.LFg^\/?:i5l*+
%jqXTS#>Q8h:8.ip&_-nc,C3W240;3O:"al**iI9B&SoJ@34+OZ>Ah4`ZE/U<PhG]A@q$2`nU?X\O/tNii,r\,h'Lg>HSP.D!#>]8
%C@XRbo0%'r3q4U]/J--l,B7X!NVPCFDoElm"L&p$Q'D?iDg0)*W#5q"h@V3#l"N08ZD3h2.JYZl[Z2VAU6`FEEm6P%Kgj:$Zoi8]
%HhgR!4#+3S?QUj=:=)S:$#gLW)k:>Q>&$=,kuH]$aN=mR:2[o1a,+AOKP(f*"_)`SQ8>1r(VA^7oI:Dd[\pP@,T-\-Sm/"YO_R;I
%DqT*WAg_7F?D61lprAqfT#U[#peM4L75c'&DnIcQU[rNN$."Ng&kpu)\<fJkWhIoBp@HPO1.B6@8]k`!luYD*i@ZdYp7tMt/J^?"
%JQ6YqSsf7_Z+C-m+`%N#!]88KJkEQE,8^Qtf4]QemI.H6[aYrB$2<-o=[s+[`=&H_UZ(_g25SMNJ;e%)+rRN/luCisbZ75eB_0L<
%\2s/+,,7$E',ce_4V:k#ZgHF$=l5?tA>B*C[bFE36eLgK)-p=C6YNo'@(;_OZqut6P'-_gi1utrgZa+,g-c]j"^M*FikE;tYT_@d
%gH3d52@+6BKX6B#iFFr#L;7>l8l5u)R\!s3EXV`acpJ?cYF/Tc)uTTi_MsSMmKka4*r-aHBZ!H@l27EX84-!\ZF4J#k*B^PDIM=7
%$<3ZT<k.6IjSH;//U.)sPf,j>:/]Q%>"gQs^:Ju:#4LG(:4P!@P+bKEZe8nOQJrdf&JZ_(o$&3RJR074\(;XG@>>[W]BaEp2f),[
%GCi>UA<V"8o1m)"\aMM*)di]Pm6i,H'/Y:^)\X5*km+mB0])^Vj`.V1ma*,%dM=<HRL60XHhr<RI`RW1SG%OYP6:f)RO32fZtV&W
%W(6)2frd@tI,eZoPKV.!T<?Adj(um):9o)Qa]K=,a5Qo74/'*p,r`?U[gFfK'KqUtTq2"K\%&rh+OJ$IaOas1H[%dR)Le]'L\oX(
%Y\S7Q#@Q]nBf_%<?8MCd90*7iXi7VLO"2r=XH/r^(m_gZbIL^sl\%TbKXI'7qGTcS0c6t9MTUOgs++V!(63+!R;0ZAMO_B'<:Ti=
%:T8D<Ubq>Qria*9_D(p2JRJbb!lK+?"T[k.'p>E.R/[.)bT8cFZ8V2<FbF,f;0R5u"s;>0n42G/a!/thfd"`C2K2*Rh1Hbrct^t[
%jC"M&_68=[2<OE'_shGuCg?u[qr$'\qAT$+*..0@VguPb;,@"##!V:(n7s&;8S]nT'DQ$eXVB<mHM-4sT1g?rojiGqWa"F`e5]Se
%;Dk)^#I=k&9uX$N"8pl'?d6\Ykb*PML>\-E'sfP_8+`&dN>M5HE,CsHWVEP6r/:=qp5A"1N[n"Y`$K/<'Z(&Eb\Ab#l\CZbQ&HUI
%JDRkTEhr8S-"bki3g%0:HAH<lSdk`Ac%%OK`"r&7ekre%<*qh:d'QgQqFe.r*?t]L>L&):\asN2@cj&#YmD<43<?>$J'^U$.;[5,
%.5\+iaWFY]<C]:pV#o*!fLJ0Cf>6o90N;o'#C^#3l,F&PS>&n'4NUWl%_E>%`%&1!a79+:Z)(s$cYBgJ$#=!AX3uiNUpJ8U4_#\C
%$77XB[NQ[g-3g`?DdnSD3m/@uUDU3]aDVVFMZa^<l4De<k*K$iPq<S9Ib]l8K,L:9=Y/2LL[`r59GUMJKL9l"s7M_$Q-3[Wd.un&
%W3jhFU,>k[)dgl<E8SOGq$pO?do4nir1'Tm&`:XTb*nq?SaOahXhj=!d@WR59$%Z_\jZ-1jUBArO"k8?<k]4"8QH57`R^0Z,IVcp
%7rGg/1il'Gj/gM8noitY;,hQ9G@;;i?*K#;QF+ud;;9K7N5W-!W5i^O,\H1W7j:tbLA2ETc0/MjRK(-gHCGdN!nDlO-CGqa9=14>
%H&lqR$g5g>V[@1UoS0LMdsn_8R).rC+D*!6(GqgdYHA8J.9!gK#QK]qRFfI"8O)sb7qTj'Qj-K&\irf%8pk"r]5`M'h-^t5JgD4<
%"^3">`cU24(T(!ZG*jHA[p[45,)2MS]d@@j:B"XeO]d`JkK>!&Dorg=G&gA5L[qO`*1$k\\MSjW7[TE'b\cYf0i+V/^q;+/#4j^V
%*p+Q>j'Ap_VWGfaTj.m32hQ0&ZF(RTR*Ul0ia9hlQIHmS=K6b)?lAY:)p=Q@8h=np7'XU*h8_^r7Qjf'&6Z(iMCu/;[ckXJGe8Ma
%00]fF]e^t>c[Kg6d<rDBDQHoBIq+,BbCkkDeJ^>[moA"V&h7:Ih=-B*1jB5Zpc8Xr=0eX,_mjj)c6dm-JRsTQKlS7c.PrlV7\O%n
%)[^(;N%<+"og"'ELOOrp<nm[3$J1=lVso(IFUGm%qlL-<LB0j)fJtA>MeYtKlK+RoCcAt,'YZ@L7;5YA.]VgW<m`lcl\Z/^!.@Ah
%$:V^aobF525X"^Om>>HW!8&^o?,aPEa[.gsD1bY7C.FOeis[T*qW4ZP1tRPBdcTb<PV.s5W:Xn\-Y6]DT.)#8T20%X,?IcTC3W?R
%BWZm/nor'PXT&FJb)TB'<Hc'&KlU9:*gP3"D57$6kC3IMjgH(7-r6;q>brj&B.C#45$&VKl%KK=kC6G`XKbWJ^\\79.)3f%nUsW;
%auH,-<RKH>WN)go:t;lHd].5$Z`G)AP[CFn0u$Pe#,dAoInj4tR/[d%B[iLE7mV")BYW*+O5X,6S>/Pri'S/Ua7*5+SR,82l=)rU
%=4c5nLq9?@\(/1blCaaH/.(uFIo'27BB+sURgbi+m:oPH=>ZM\`p$P!286B`9+tGtFT@CJ9f2I1@XGN5e2=+rk-L3lBnlE2WL6Of
%?^bi+A^Oc,qNb0'C72KlWO8jN2S0a,^Z,:E`pu3h2I!1U[,paQ=PI$Ep=eA7;:NmIN`!D;AGb*P.M@Ka:`BaN3m5b%ee)6*V[NKK
%cFRQ/hprNnN7?Ce23%&$HT9SNEr1H+*Q&3>3L3b1[B\suDiG^ZH?Z%odYE/sM`uP[SFgC9C8,Y0i[t+:LZS3P:`Z:X+4_L"6(KtP
%%2R3TdQhmf#=CK2>T#:,e^RFCm"U8?DV?n*f#)FDC>&P@S9OobUL$1R)XX,%hrrB77`N@HT,BjeM7'TgC`eX(`CXqE.=*PbZ_H^h
%BM?"O11mhiZ6,roH1tlBSl/3[Bm`gI3o.*Z1`eW>VTif)1+Tg+Q.`5K)9m&k3GOS'**VM&HF>Ug?/H.`i4DuGY:S4Xq(hug/]QFE
%d6_M9CJ/3CLM/77VQOKE('5u/0]0rRf"(2%WlR1%<cbZ0Z?diiQSj66oW0@rfjXhqjEakBN\9Xkg`,35>r7'n)Tid9Fq%ApmT`fP
%c$?%;O"(VU^'0=0lE%,gd+E.VHE/W"dk>Oj+^VN5G&Fp/A;fnmgJ#.l=!*`*]03)Mg-`L5g7FB"3qg"uP-tIb_ehUPPZii+;;4,;
%VgdQ[]*8^7fcA6r\mACTnPbg%S;L>R#ABXYF55sf#2C,0Y%(EjgBQ3]3UNb?cBCV<EZ%r5Zch*D.pV=`>jZ9.97#4B4NC_4PJKs1
%%'_MFYmiHV.V>dpokLU)N7PQtEU\-.DSrrIE-q8A'\%*d?G>fEL?pGbjL@"U:D9[CMPZUdONHiPq0:-Jq$d'`4Ni-5a/^a[lsBQG
%?hVJrc+UTL>Qh]lW=#_S:Vc$I/3=T=0;ZI7p^3pIS`sVP>LnE5JB"e8YBPG.4Iu$j'&&PaT'-sfP?(HE57d9b!7rZ*JOo]O)(7/X
%ftbu+XUcC`T7`dsgkc8'L5A+h0jKZirMD%dguhq&O=?_bL4Y7Z2tW4kA4-=A,%Q8OI_"'`c0"dN*;VX<_khdT*$1tNM=>LLoL>pY
%Zo&J=41(-=:5q[hS(0][ot%3&A,*Hj-7>@0Zo)dHU-IAj,,PgNIU_0VAJ<8UnRJX:9.ONLj4FXa`%<&87m(N>K]9E23>\<Id`mHF
%I@2A9V2nP!=0bp@h:<d=fFNkIUfA(3-=\*L52#_NU<06?dn+7X5Gsb']'uR\VQ31$<'$Z"Qqnet]?HjQ3ii:2B[U2Z\<oGsou@L/
%c,VVsno9q/09W$Q`iu%I:%`l^)qF8(ZAl&-4T"/5+*7::r?E,I.ZLuBIF6:kRaY)>=8Fu>K:fhh*]PNR+?Z"RK$JH('S:`p4BeOW
%dmae#7J#iCW4-3[@V?X;([I'W^%`94@in27I.7dpP$]:_Qh'0H'DP=e/B*jgPj%*"d[/s&.NO[&D:uW?.a-N7pSHY0pWaMT41eHS
%WL]b]o'4^)9k@o^oMqHiN*!oW+*Y-WZ%f<KO%-9aSSB(N['_rpoh,(/*E.>)l^iD^:bV]fV>C*P)`8&aVQpg2b53*L[7I-6XSZ'n
%="e6&()NZRF/DP.[.LVl';0&.kHdYDe"]sNNjDQf9k:h"m?1?0DpMM(EQ:%8\N>XcA(9alffbt[E&mgf/ILI_]#hGYga)QH0AGi(
%prY\\]rt"G'`-Aca4PT@^&7g-*pl=#XD?2`1gU-:Dq&W'C5))Y^397@6UKHV@@sm_dVW[i/WE6*T@MWMrGd0m*9`sHb94O,XTlJB
%o6@4VNkU;-8@(2ON0J+q9=A(Cq5`WJW&\RX7n:Iq3qdrkRfL^CG-ZOUGPUTE6C?n"PKF_,:,^?MrR@7Q?.3i`1H&OZrRI;\Eu<4q
%XnH>7RRJ3;LY\)`QYMug*-h)-_GT"_(M2p0\QH%qa//B3mpB*6^9?YlUAtbP+/1mCrm\ZAS"KXA)dIYGlcH/pLq6ZcTD`^L86.k=
%cG_]t.,(0;-5*7o2EcC:\(0cVg20`'qqd@8G]7;9>L'ic`mNKl7\RWSNgH"-EihRYmu1?YTK.6$+kNEQ*@d):__OAE/D]HnDfDUM
%HM,MZ^P8,SJXmMa+@@pQ#uhC'HJ7k[<`W\Q:"u+E.7S1La0^(oT9oHJ1s3uk\<f#p'TcI8=6n>g11k)%dkQpMG4c?kUNu#L=C5"(
%H%,aA\@mWpWI#<$M%l4i"*[giq_OW\_bFX`m7-Ojne!r,a6i"9$*fs+Pq1YNAo4a+T9;JCB=Oc51'UoJXaet]jW'_P3>OWP2[eMj
%Mrdj(8Z.P$LR+-]BOm9ZdMHVn6UbY?=8:>^,KJ![SP%Uo*]9<Z-'"T15DcoW=%3$MM]i]em8&jChJNL1,5qXeUg)s+Z$E3EL]j6s
%)K>(1j+PCGS_r?T9KE0I4-<G<gn3hPihm`:I[X!H2_:I!-_)!m&>?b4&l)FWp9W>e>Ab'04?!n+VK.#rmUkSH4'I\LRc7H&m<m_\
%@$U"HHmd+WQnYKm.:%6T")&7Z;M0G_P*gArDWhbBIC%Sc*+-3?D&eEA1l8K>E/4XIYt+otSNb#>oA0t)dN"oeM8d]1+'#[[<c6#S
%["jhQ5i_gj)99k(X.kM*S:,l0Wci'7Yn,:`3g>V'I!RN#RQ9I2\5:'Xr3S:-B8$MGg4igemc.2&n1B!t8SkL=CX#B0pEa"ABb#(^
%qM7AFJ:S!Chs<h,gTbp3$l8eBi%PD&*9Ymc]7M"MEi17WS6J't[iG1][u=OH@$5BGT[%AB`n'SKL)`RYTT6ss!G*cqo"(JiR`Kpi
%b)e^!lPTfLad:=;;K`Z-crLU1'I!rX3%\K*Ml:G8WC!kTShO(Og7/jr>?=s$=GHoO$8[,P+W:DGkTM@Q#sa-('Nlg[@LT(7e>GP^
%R4$b0:!!DBc/,^<!=-)R@jmQufb<=iO93o=#5j[WNujb7CQAM/;TqS)!NfhACDXQU(MpZj't0Pld;LWgQKTQ6_\e&jp`t=.d<afm
%R$_%JLZEEQ<Q0bkUZ*l+gPokq*\/UM[H/QPkkaEqgu.PKq]nHlM90D9D_j:]c??RZ9)Q'mn`:9ip!5P]Gq)!6fDl@J"1Pm'feEaq
%[DO=5/JS]i<'igkPLQ:?9eHIf!p@7n@LP2N#BE?Y_D@/GlXrYnSi^:s#KJ&AM\>Ym[#Z%5WWlL#.1VpHjQAoo[grQ!"J5IM3"R/7
%#(]_Tn;+nkN:"8@rd8^BbFVsb1._*F07YtfklaMo-<741NqRNP`&@_WhEOQqApI#`&(Ei2H;uU`p4Q'Ni_oGE;``00+(#T0<RP!R
%U_nOal_(RO_PWWh5Xp``e[<eT_(#'Iq'(*)qo=\2eGX*"n`QU9=Z8@V($VOI2"CuJMg%&'`rVWB]f7_J@2&2Y@YN*"W5#8[X'N<s
%Sq4kE[,^keZZsYWkAj1%?MdY-f;IFA8e9k-C<Y&?\AkjS1?!8o#]lu%A<4]qBpoUaKQXLX`.$!q9l.L[m\9AC>6SEqNE6,WUhTR3
%:MJ&@Y@r'ed"9l\RM]Ha/1AoFLETLroQRbe7:NRUcHm1E@*!QXN`9O1CdWJ48;s's<j\PAT=F8Fd;&VqmJ0nS"%^!XH3'aK)XMKh
%+L]_cQ`37(VIPJZc`1Ep-4A0P/CA=P8!g#(G\Ah#L\DK<[-m:PK+:Xl2[qkOUHa*o!VnlZ\mi+kqC>_gjPnZfDfcNsAE"BOAC(JM
%TV..p4tlkJm8A-`:JkUMe%dW+aDpRqOAj/*W7F]d>`*IUmeflfI,;%4T%@hBi6N['kA?D2q'jo%HGQM&#lHT>Y^a"(A*=AXL>?rB
%]p[Ksj7Jg*i03#%-=<KRV_O9`88.l7BG[h':Ho/k$.X8rTt,=X[UK>*BJp/\$s*,+Drar_"P"Nu:U#$K$KqUZ6]Mk3K\Z^d"o0)@
%%?1ahJZn[EFR:n,CEYr?#J_QSo+blNSi`8?TN*3Frd7/fe3s(S]a.?R5_VW0P,+`(%iS%naq,A`iQdbYr'!.Z]U<0SfWd8-0@3_!
%rE"e%'o*uD46A'81l-Q&lJ#'iNCM4#TJ;P#BTU_Bc<&(+BPp5j6\76\Yl]8W%):TG$U$agK]ki7(D2:s#]%qoYom<aK<Rg>d?#Li
%J)K62$K2^([l^\A8e1VH`5)f>O]^?]EnrEJ`gp:rHk7RV*Y:\Pa\XK$^'<0iRoL''+)5\$K1F%3QY@#]gZ79pS9CHOjs>%2cJuZK
%7Pl^HJ4ZK/2%?hVM%]an%1*Mt*%QtaZY`#r[,0#F;\AE(%fCjFSZP,hd4N_:o0R1gm.aJG_#i.*4rsG]Zisi<!IH/uMR8V-H$n<2
%8!;o_5ssoqQAsiaQc7c$[Oks)+a40;CKuo*FYtm4lbfMm=O-3H)5YCDa)GUcWRZ:SMbE_!Oj>+Yllj@EdqEln-q.maj+uJ`gXs#L
%N6&ErIGjF?^cY0TpeS"!r>0EPS,;:!<4BjQPMOH'/T%c?4>A]=1Q9G0%&ht#bKu!LcFuFfQ?UBX/:da-*FS=s[@<:jgC8\A'>.r6
%=c:i!.-qd-TR\W_qL$;.Ol<hn"6rJ@7>BtlRtFd328d7mN]"jEm]@<:`j<)n1XnNDe18[XC?K'I_IZ9WJGLq^GT_L*p:)m8M0t9/
%!Y"p&X:k=a`%('?)4AWl/o>Y;OG`G*+RTaPGtT@YiuTt?K8p0^*]4,KD8tC:([BCG,7iEJ/5q^%R@]61*$e*C"C\gCK61p(beK6X
%!#$'Lm_NaAVkle-V4N9]<XHS2`u'1ZS^Vr)aQk_[SKD+H"VDh'TV[<93a,`XN8XC)_)AHN9D1mYo2>!mh(T$)=ul$S#OJ'5AUO$-
%q*:#<I@:>N(,0,(PQJ*id0L_Wo#uAb-pHiRoO9=t&7ZbdGol]S2JX:-<K?*2'<tLZq/*Z/EMn+gK//_I?JtC]X1]G_a^6B[oulA:
%(NQcQ3E!<O4.?b\X-\i->5>*SThA-FB`0n=1@I'0HZ^3kn\X.g:7k/-,7cZF4F,RdN>c\Ad%$M]*06#4doU@>&I(H@p(*eu(rp:G
%Ga8NG[#\d-c:\STR2RH31Cmj+W7RY#?Q[dg#KnkpH>?)NjJ^.2;?jhV#t.i&3'a@_(9"9K.b3-\$TM0W,V\M#,HZi#j'*@99:ua-
%5D\,uZMGotOYJ5(8&Kl:Zs18\Os.-qFX;+%a]lc.,-!pY&]JSSX^hYMVj(N-XId4=%(sR8/A=4u#o%hBIfZ;gH&2&Wb(p8+i)VP)
%bir^*YbgCU2/;-WH*@f-"n\AV3L]Eh-KJD9o,j17AE,Pp/>uJIG<Us5iYa&ASBO&GA0D$ZA@/HRFSVd9c'0DPVJM6o/QE_i>2(6*
%"J?oXIPa1CAA>&A!o9JYO[H4J];i*SQ2?(?-<+_F$uZpHTQtQgrEO@p)^N25OGco6nA6.`;!qA(?fUEmZDfqD85>A^d\m[-(-e$H
%1OX:[`4r'BS[SYg@EV$l#8DWB1(jjO1l:R2q%[s.gQlNl:nC1XFX,\)9rl`KGALi[*8(N)WF1>/7/!ZhJ/1Zj2$(!D:_W-.VlinI
%;LPC=PF)B6`RZ)q.?W*DFi`WPU]</'k3<]>%'RN4;q2Wb=Ih^Z<_l;^JXE_8*Ls<]5Lt`L<TirgFTG2-*$`a_'Qa[lY.DTrH)ARM
%lrQ55_76LM'\=r9b\"Sc[Sd7:Sgg+#F>=&o_/\2>i*NCt]DMGjC=P/N5K<[8YDIb_e#uU'c1`se09`9hV[\GRQRuB^V7Pp9fq=&d
%I]gQML6n,PTNd9]d_#l"m<&7Nh@/umK\H;_@UHpH5#f?l7h.)VOTL5@!/4YHV?F8U+tsNCYYaoo&PO3#J],.X@LQd^,'up50rkb,
%nYJS6!rVF:7CSuW:5G%Zgd'^HmDaKkEFuUI9>4q#ifEK[Ai\DNJ1bk!HS82^8##G>j<HDN%]mdukuknKWV>SSXTMe#f88o2,m,D2
%QY!=#'`.[NF<>TTS7Srt-qH=N\AZ":-L4O<[u0OoIUZ><5p]5t%B@/\AL\bgc;X8S]UD\$D:tl>\r$hRM&Lgec$FQ#$7*oumJsf!
%<(),9krdtY+8[IN.=`aZf,N(a!F@6/jGoM4s0tl,l#guU%(Xh)W,E0<rm#Yp*'e6c:GB^o!BfqJM)8l<$O_38aB]FElGSWZ'Np_`
%perOSWGS0Z]"+uu6duUT,%;La%lmR]?!A,ohLHsIeB+RYVK>C?HDa]Y1eK%rHBl&B33mU]D+Yu'/^mZ55b5#@OTFRQl%%-%WdtU\
%[jG_[,Obs.fnQmKZ`!46X\N=#aALVP-YBuc7=]<i5`a4`E-%tKMU0-LAf9"q%C?u-0RQN^?7AnOB8PAKX$n3Q;GVl"i?cRdmC;t;
%]#+-<FP04n3hYA,>-nsl5S#mg(F.rb?FPb2#+aW23r3'r=A&T]9=C2iGiRa_,S8Z[fo)$%NkhQLPsn7AAGRQ<%;.H]1?U/aACq%3
%TN8"l]p-2_W2(-,_DXDtD#nCX75$nZD:DiAVSG<9b0aL:V@u5tW1Wg?_9`4X$D73Q7L.;BFU][5a`=n`RN&L8E/iW4B<[olgF-qM
%V^d5)#'b1D3P#icbl0jd2XR028!)MjmR5W>qiNcsN5=:^N^Y(`L:XXt4/,'5#.5UH^mte@i;uG<eRtHWNn:PA@hltA*fmGTqZ5$h
%B5nh_Q&h(Q4J69?pCp/MHk9QoVf5F!#rd5#BQ[B9-VUASKJoK(QYX&jq?EY@,f^7d$ToHrQqD\))868paA`PgSbCAf)@c3(IgF%^
%'!M_#5^k(4BYko2#t)Vf8fC?+,G8Jk/Cc@P"R@eG!iT$5+k/2MS&X<B"P,"bgHaphX,/Jp\<[ZqO/-uM'T=bgqXcOp&rKFDWh?Mh
%mm%EG_n&hD!gKf[[n?>F<WWP#@NBHtkK0YMI6,9*FE:'@1H4@&`oc?SqD9-FlDgG83cs!so+FXYn9E(jSX69f[%FZ]";8JAQ!jk6
%JNMXO]1e956+f!!XK4@`Hd%:e@$K\Zo@AFH?;%+=F27.M97:iQN="Y`,>(3STa5nAAHt[sTL^H?)n$_CLe!ZhMkWuoRfcTOi%Z+r
%:YTU-\XH3JAu",Q\ARi1I.9'k5Sm*+#uhnX6p;\h>kafbY<b6%2:Nlrrb_g?V!a*P\!mk;+S7m"5Rl'5dH]H9ieZZ(4*&cY'o@=`
%!OuJSgC$SS3XMJWl)sb6n2sq%1`f?7?%aD0\pQ/fd(teHDN`t?$DbZU;dO%c<D:g"M3;R#b3(0gN5:<SO[."oTI8R*]/J=GTW,Y,
%oup)te2NeSlTY3m:l_[&[X,O`g"q=k3QIN^+5,_M2nGdhh9,k""sE*N]J\61BJS3RNh[PnW:YS?\HQT[To3eYo@$^bEBs6a)l+3O
%GoIa59jlTH/qAZs2%Xbm$hKVBZrXQjE7YuuGup-#!Z:j4`<gTP8e5)jBC54f'G#TX=b0O?YF%4E:DfDKEPU)Ga.aVR(;eNOiFpT<
%^"Q%ee>F[M1B!BO`eobNV0iL8]?WL"&p@$B.LMh!VI0=2CBkO!'@u6*3gK@*QH<H[d/^Jmg_"3a+<%)[+%k0";W"4a;u3hMQQ-Zb
%=0/@P0AYB!`J>LWIMfZuCk6%f$b0C5R5B+Mo9clG0XFkhfe^mJou+s;*:h!d&9uP_i-bcF>_H0,#+4<9+8JsR7!I<]ZInOO#eBt#
%#AqCe3%FGeA7A;EfC9X&%)D7qDe2P-O*T[=PWql(('ur4FQ+bpQI&-E,tIX(M\2-me=Y*Ta@oF+Rgu<CH;XG@H.!1M_Mun:P/G+s
%.CosujjZQI[DPH'S]G4qSEV.*]\i<n9:79gCH"^j1t*.M3s(/3j@0W7!FfaBklHNWG+>2o.D)mkQ<`:\0j->Z_<NhF^fmb1P2f@C
%J8/ck.W6R-V=Mo9d$"Z^bJ9LZV&-6e`b3psDD!.qs,NAaGlOG2m!=(G`t@Zun#Sm7SiWtZoZ101V##2DVGmjNb[lHEYNMrZ_mRCj
%[I\?!)'5WSM.s3ej)P549U@53Vq[Mmo4aM3K#=/Ietl/<i3\KKMd<0*;4Z"c*>Y=NC)X!F!JhdCO*omXUWPVY6!%De:Xf'sEVb,j
%9])gjPho3b1VD-)o_sojFSgM*_TL4!iV":tMB9H$1CVEZ*M21V-Dcqj?ek5/3$H)qmtlFQ"8L3ujaFlJYO8jfe&`4d6/<Z7cA0U1
%qf5?DpWhbrdlTgB"gA.tH9^j@T^hZ&M9\U1^9<=QH[inrd"hMsH9!=5RQb#s$eXG)2M"U(@XsT..=?Yt(XVL(N9S^[oR>Jr[_%$*
%/L&Ajk"Yo%HsH+.S1R!%8nrT3\#(Bpb+Xb3-WeE1]9:R-J*sR@0@6uS1!W'0U8tJH";GEBhA&/4JVICaD0P$ZEOV>_!9M<!]P`Y$
%-'45oL4dNsTr?IV."'0!0VqZ[lWi$u<VapLTHqWpn_p'%/:BOD4Fc@AF*g>(ETc+qOm_*k+Bs_@'Wn[q0c2i1Cm.:AC&Shj3IP:d
%?%b`W+#-]bKu]?F8%\),-A&,s>T":tnWa12!X.4AG/k=B?fat$FF;l'L?HGCcfpRAL:B'Y`gP:To#p>Z]$_ft+,>><$rgDH"!Y!h
%;C@q5MF;9#/n\AJ]Bo_AXHf?,l!;T#fCL+qYbAuif>8o;#SZMn!"]YPM`!eE%MfeD[b#T]ahe;Ab71t"b.HlqmY!CVB+;[+8N+Y`
%&j.La"r?+iBha*#,VfK3cuq[C;@!'@Q8,JM=Ap@@:6dq$lVH(>O0'.beg8:Tn2R$ZaXLpfP36XJMUsjIUC"UWH,5-_H@SX[GWA<7
%?lC4-Su;8#AM`$MQYSVT0XY$JXQs)$Qj:Fj6^4OU&$<1MmYqN0T<\i[,gD5#AH\oS[lme9&'5sp7foro-?P[mgV*m]3EN4O$Td-:
%In30;fh1Uk$D5Hes&PD3jEZkWi]'!Io8]cgRs<l<Jk)VYNaEgPgIaOh/q',5bm?;t1iS#@UA61lJ-fT<*;t7`]scSl,I<moID5BU
%iBA<*Y<D>0GW:$?Q?[XX&,l"bh[irC57(E0)+1QXgDFggXLQe_1`O>jZNGZ^3s-4ij8,EhrIc6e*T?iTQC)sHX,O>&*5XkHd.OBo
%(p">X9^g%*0sajf2q9WmBGJ>T+.ll`ZrhomK:)m!?@4WS<,<p91L@HKemM"'n@Pp7^>_9.:IWXB`6&rM%76)Ba5J1*M9REj0L>4G
%jscnd:LWq;nJDUnU8IlZ/s>t#6CplDAP)8QS^$6cq\)bQVE4BL0H(qc$rQbb6K:m*2E8'TK>r*t3oR=d=j64eHSFL4;M4$#^u(<B
%WBYB2qW2IOl-HU\*1WT`32`a5>Fi1e'fA!nC,?#MbX[7ZpXG-)4&1sGZ/+Ysr'\5$3.ZN(!/C3ic#3[\H2J_43A$8Ck@+jr0b$KO
%MtQ.^k8;l*S\YU0P$[/^9ddc3lT_e<?%&FQ]?9@\+?+Puputc1I0T20%8jIM_V/i<#mMnF_aEdj3*&O(XFk$WE,LJ>NK8n\ctjN8
%$<c<JC"^FZRrNc)d?QE:J3n>*Wci_4XN/N"U=,$#eSg,+RN!#O4GAOm,$5/Jb2]+>Ks<[#hfu.BWsE,;BMOH7hPVtXMcHJ0ib@MW
%+Gs0g.l`Gr'Q+o*a7^LkMRLuOLob8Me?6+n]]n5-9W_)*U9Krk>2HnQlgFB`@0MR*P[q"mjlo!PO58q(n\4u<X0:u,9]fAAX?CY'
%6PQTU3ics,<e,p[(ecM`X!aP0,`K.tmQ'$[Jk6768K6sIKWr>+$L>gAJ1$_[Kn]u5[Y(KjpkKtm7;D6k<B'W7&6:pDmA:Fq,bb%O
%-'[]F[MTgu3lKLE5uSV9)NSX23d6@7Q'Q.)ZdKPbL>+HKG`*sIi=(1!=HhXC'F3r:!&(k,2Mfn&K/GI@Td:*@mO&qISj2#IfB5s5
%/"q'g-E3RRec];9FM0f<&.OIUHgjIQNZV7eX>RcD+c8-AXZ:>4XC#SPf%7ggj+N2WcV-R;54ps&XA/)*/rI'FW)04U_2?T9LspT)
%^CLT[/ND7><$W"h`k'JF7'SZIBuQLI"U'Tb_HYuH65XJmPjJ,oh6%mODJ>Bt@3s;tLjqIg8P0-O[g2Anen/?l+$]Wsam3pP@dRgQ
%:dU'MpSb540bLLX#+f(;Ee7CV+(bZll'de9X7(SC6FFg(W(Z%(Vm)1$HJ[Z/IhmbCK[m47kq_&!(@Zmk(PPsc2k$ZEEr]l1[TpQW
%&-n8D\TlhBJeZdWfZ5!^#*clo`#@soZ<X):3h@65$t?UeXDd<Q"@b^hc1Gu8B-()uNY4We%GUGc%T_2u[!-s-&6=S/(XI0-WfSDA
%Nj]KRc6)I/3o/2"SAY-Mf_+9_;-85]$]i/^h/lI@p"a`B-ho$D/(;l;G!;c(mqJ\/gGHm@/tbp^&UI&"![*:4)NiXf4D9[n2>-TS
%lK15U4LRH0o@(k"J%Ao6g@XqMC>^^WIG^bp4a'28+T?I;ltMlcI%h4qW*T!T(4El(gkP4U:Ih7L?g&q11dY>CN(4bJf0(!G-I=`7
%:M8C6QNt03>l&rKV`'6is)aL+D6H>@B[BEiC&:ieBhLUp@cC1u'>>U\oTj.mFjI0&IJr>6hIf6KY+#&d7Hc0p[*:'8lA<1a#$g]1
%7%`W.c;7a;l$,:i'dSU4_)0h`KBUcpZoFM350_cu$C_1GU6o5_pPHQNb2CC7JKD3pkN=ucegmXPoe^OmgapcFI?6?TKc6W'CJ]_!
%;d&<upbPfW56]=ObB]&9%<5q3BYWPcs2K6=;LOmbo4C4fTR.[!bW0SH\ApgVpr<Gc94=\c2%KYnJCsInOJtu8N23\O&.Y`q>)447
%G&=I"VNc^-buPZ)V#r@DgkKp*JFgca<S!mWWs,),qgp(Mn:q"h=l>06BjCp5H6DAb8a$\Q3MN"&eJPO:.jA(%V6[@5IrT9*"u4WC
%T;#G=9)>fL@`;9PO.$V\HJLh$3YiVd`&_=:Fk0MCXIbJTNJ2MLd3om6-fnf@A_R7r*g&epe`Me0RU1'>l8t_B!JQ/L+fr&MNa.M.
%E#h%b6eA%[K!j&B+0-T.EcQ!tmVn;(+c7#G((4QP!R)a@Q1WW=idt3qaN.*g`<qTh3bMcs?5c')7'ckI_W%2ONHA+)?15)PhJGb2
%&%uMc`"=mO9jJ-aq^Bi("/GjU)Hd(lAd&]e)fB<pBS4grLu\se9J&S(B]`$V0kt1sK_DuKSI,[rn.q[4BWhs5=j\Q%+QUeGIS_CY
%hXjkN8?cM8U39e46<4mh8N$1]<8:=fOE"!)@(HFE(Yk3K30?'D!+XU!1nhY_WU_#>.R[=K[SK.FC%d&^\M2k(7N$U(5^2[+TF"#4
%"MDf^L%M/u/2HdpO69b_2>RD8ZZWHI.rSIe:B1jSXo:`s34NY-CVtC_$1IA8Ru$S-mNn03#VSkopkS.HF%8Zlpk+7)!_gT>d@\$l
%=G&6orFo5;7q`GS+gd(FU2u,1G'VOBkA\IOe@Y@I5Tu?O(7NJZqaoUr-AUd_B#YU2R_R;.#AMUR@3_-8^gd0<jU1!=!C/;bm*hI$
%-,$fd8C'gMg(jZOl6X"4lhKk+,epZU2@T]"X2E6A?k!`:,38&9Y7qc:N[\Zds%qdg#)I2c[q"PQ:UUfN?CiS?-TJUGIsG@5jH78=
%_TdC(Rau.idWl;gGu^Xr$)=#1:!4:]`<%t\T-Vf@G>A_UHAcW@-a&Ai-Ys!5%Hq1]+Ym&p]ks^rB(#2_#[n8_MDhsmD6/Yd0h?B4
%Q(_(I8=7UZ*[i@I,7b]:!?,k#J72&`ooVP]7i1)[dCr/sVUB'kfM(e\(Hi[OYMt:"J=+h4o:iQ`:FZ2DVNcpdh_N7aeh$D]+ra^b
%EpXXCDdYEbZs^p@l-W(9QuApdoG#->kD&ZL3g5pHj6a3Id\9>EXW%j<,g=smcUlVW&2baOmE(c,@,lX*,rHEeP/V#m%;D!a)7M_&
%-/5AeUq'BmYGMjL^qks^QKZm[S.k-cWCh;'UedL/#MC\K>OOV$ZKBN7id1eeeqUP%^mW*B[%U"8+nX@H9OkZHH%mQr8fC$sD-t7h
%*:6)7ZmVMhUn+"\M0?qtH]Vq>j3*7uQ>XG\g7FM^i'-"B\*"<0*c]]`,F3E5&T=p(-IZGk"X_jk&RM'lYi9fK1Y+agA@U*Q7o2(K
%2MMA@'Xm*2EX=#@*LJSplR4Sc&h%k5C2._pbnqA97UtSpGdu39KEcNf^)&3S'+&qLc&E^KE37F+H:"#>RJR&9k<'YOo]SC>A):QT
%IURM;6N/4?43E5sWshOGpGB1[io&`n(,C>:3gde)5UJ/>O:R_7El&nL0`kD_SH-Qucn$qB*q5W;qkUkD(Q^3U\nC],O:7W-Ud[TC
%&Q-=c+ZD"R#-!$@nA8/f=:`:FL<$r9QMsYqDC`/+N"D$3hD?S)[Uf,sQ65q4Fkpc0&?LJ;j(7ko=m<e#%U&E:=R;b%5r(9P?JNNf
%:jH,CmUFN4(V?=Za,*6A"]GEm.\7)1jHr1bCWD(^,M>9$-HA"3`IfV0=K^<7[*K/@;?T"I-rIYC2+n*>_RA6RX/R+%m<LW+JiX@.
%iF)]IOOsu4]2>rM#SLupE0%QI,E.^f]1\W?d6X@#!,fQ-eHlOMa<2$e-u_Kc>VeH^U%6[bQ8W+T3Ut/eAp0b#ZUNK*%.a3DC?b.?
%HLVp>'N:!OE5SfkcPC`s,.2=ZI+A"m_<FAn#NnRJKZ`2^dgrZEMkTlj^+T?6O>*gI'TW_rMLoe7m<W"OE7:s=g@Y1ara2)(J3$cV
%-dC$/bZq[8V.F:m^i=q_oR*S+[gOl"\mpj9._e#u_?4`.pfj0$;h(UB%\UKb8ddr@0#<;h1gE-u[Q&O0b"ISh-Vm\Nb%5r'L%."'
%.3lS1,d7u:TMWY1"J@.93>a.u0(?(t'SXQ_AJ@'`AF4HR3X1e.CPg&.2Qc0MU:438`l[3g9D3Au,OBbDBQhRO4,'EYr0\I"bXR8Y
%,+I_Xdd=Eihak6*b/eUuSh_tYJ2WP-]t([lk-Z/S82l"e*^G(?FDESYm0Nk%#.3Ja2ea]@-LV,dNFW'-..+KoUno"T"muJ=_(I>A
%,dF+TMWq8_5utf:`18`VT2"`FZaQ-$4-7=f$^F4Ok;i[*kU*;>J)bG.r][(bDQ1gB8'k^4VRiuh)[@n-,V:?S93fPPamUSM[*;Bj
%XJ:m0`Kf[i[[Y&(\9W,t-]aTMoc*E$Tl@)^:(ZtN5a#7b4=Hp10F6%-kP^n<piN.VS&LQa3Zjeige0=c9hIX%&K:KA&c?7,?9tqs
%-q?K3'ii)?K?'M!G3_$:57*4J*5sp4NdbfdFhgQT/]oL!LW?Os)qbI.N^iUs+DKpc;lq3.19H$t[>"ZED>cgM6HYFI$Tt:.^CO6.
%nO>N:JM'OmfY?6bL;,m7BSbe?<'U5$1:+W\e.1I-PA,"7UVsODW@;9uYh)cWBT_mKC&.)-rK%Ubc&LpJDp)>IGD/"N1g,b8^&n^S
%diu0S7FU0_X;sRSVH"[Aa9W?PDTQDsiC1ad;^`)-DDC$^WjkL1dgs!/p/i9im4>-6jJ9e84!q[oJ=OI]eeq(rH!tG@KQ_kB8']s%
%"9m.3<;q:("hYha\E1]'`ASLA'AAf5#EYUs4m@u;VD!]VAG+'ihdM!gad-2JN.MGJMH`BeK9656FRM',bhGa^4S$H2FnB&R?W(c%
%hfVNpC\a'TIRQ8hF=eS"o9s^6)m#Q55"]o\?d:$)b6LQ/P&`a,c&(!Ad>l8rja>LaHuE!Kim[":Jlo4aHuD?JMn^_(PHO"oUJDbQ
%[[^.)QLBg4_L&GU:V)i&ag>-6oC8Xl2Z[,nht-AY^0BF5c@.*m.:U7eASp_(T?[)p`%-r])X/Lc::DMF,aFlgMG@P9b,X2gSKp"k
%_uimr)j1NAD1%[L@YXDSJl2R"m"\r2MAMAcc)E)T`,M/5M49(6[fUhk_3%L(,)tA,KI)16e)kGU8gqmK`kRYX%"@e8,@p9#gm6c9
%"'oAh^Y^ChIq.S!KW"Zg2p`l$/^aDX)TMa84d+:^o50Y_ao-1KOEB,LB=TH<deP2`Z0%MUZ&EXCo'uX@2hC8EN`l1"fptsVjmU@[
%*m$&IFe`?th%PpQCS@7uas2.]2WFNY/2)_#cm"KB;RB7oVU)U3V'QOd\!oQ+qr&U.bEUAkeDniZn<AqQJpEg:+QPn4Y<ta@?NV_t
%BHpYF/-Z+<-*]0W,LAmb)Quao[.<R/&Jae]j$i&hDrcJ"@cl=VH8Jq_R]%gX.__!M;g>jNTcU0^*(ec>-oj"7nJXEA<9ClQ;_pC]
%=t%Ad'Ob'haf;APPBm1!>/DQ0NHtraM6c=6a@&21Xj.0Eh/blFj;Go,T\V-GOm3d%HPJlZkD.,#-52Sk"js+R=!&aB^!dnf&WKl+
%'5Mg9gcVTqB_dZn1\Y&f!MdUhQbB'KQ`f(i],m>Z#KBAUV\9/ZcNaCXKGHR0=$?.1IrM"<L4]Y*kILGAU+l!AMAlPC@5H5#+6CA2
%mKZAXDCS]TcVbjOlOetG!Ea.c2]<i/;B[D`eFsZTaLuV"TfjD>NrTUQmY^0q%4"OOI-AB,.[OhQ%dFX-<4pe<7s[a]^/G(Z?)YdU
%5]>6fQ%c7(:1mEEs,`e;7AG.UgAf:cf"RfJ-BD+]@mN4%r&,W8<j5_6_Zu.XGg1o+fe%b=fk'f4SZ")>$MRBh7_76uq'&_mYJldl
%(,pPL\W,H^Eh^r#0hrC=hW0,'^#98:>@-ukk`%skZY3l<3FkNrE\C!Z!\e^LW*`5b2\J4=o'>9&7rQI*\9mmf:If?Mf!kD3Hj+@4
%We9/G.e9F!BOJY!GO<LG<4OJm?>45cI`ApQFT,T\XHXn,`]c)o&T/GN:NFB;0,4EE-,@UoC4O`p<Qoaus%"SQ0K>]ml+nN9Qn8Jj
%_5OSs9fs31$jiZ==5ruHZ"Nqr9':IB7osN,0^46UGq"W42U<)DEnmV+AE<B#SKC'4Yftg_AJc?bI"1JAQ^)hTrf)k1nm>AYM=3pI
%Zn`/cH+#p1IV#,+)NQ6ro9^F,:3#-oCKEnRo7V,hmfRkq2ttm&-d1a\>aZs,FM=J)O"glh?RI%m1@Is2R41p3jpB;Wcd_ILb.K\$
%@J"[;daS([<'f=J$NHg6PInHFgA2QmF$aQdVI$PB6$"D(p$uGJR6ueg!h3LoVEt,<kMg]^nd(?A=d(nl99A)^h`M2.2$IPF4[RZ1
%Icu/ZA>d7)5Oea-UFFd@+>`L&,A!e/R1,MLYpnsN^Mse1\m&#(bM?Ku+=)X6W`83-*\GAZ9m'!G3=b.6;a(,CUQ2>%`Pe<n0KI;^
%5S7?mSF#\@JE/!Sh`IAV/q)UH6cnK'o8`'#f-AYP!H#O72WP$7i&GU5B=%B,9J%)9PYFM:RJ--dac])u6Ub@dZLo#&Z9uT%0X,M[
%""!?gZsH]WqgE]XOXu1VOs4%2\+Yt/=U=6e,$>35VFXbST^2JdA??e(S<F#*7-EA?-LQ1:$`qCWF;X@qeD=hqnc[Lsl\k>PkN8U0
%H#LoppMq8Oh\P=1&FJ":H#e>Z-]@QPr_7RFSghgo9sXP*;4b/6aP%tmeQ:b"1QS)U+6V`jgha&S?K*?r2t;'=:r;>M9cjX8ei@5L
%H&%og3e[3+8<Zb)cM>Qp]2A<H-;Z:bS.jnHoY.5Z\eq!6p425i$I\H0h>.mM_adJ5.m%"C+Rd]6M.EJ[o71]i%@%^nF`Z22-mt?l
%b,^El;Y<jH)6od@nPh[<m\"pb';*BV,aonA\Tl=RNlPY\4M5j2[\oCSH@6I;V*\/:U+hE*\,c4KI[Qb)i[aVPOPI-'s0u$=a/rKH
%>ml9GJF1:tmb1RXIO@R!@V%2,?J/UI-=6$DD^$9\@3%lTqk_PD(0:D<Da*4GMNqOl#B/e>?MMUE6[L'H.F^qSh:X?R=H*@]7]b7'
%:b!!oj]fCMYOa&?!4S(?p=n-`6<N./HO:/0`C-f[D^nc>=D<\'9n%Jdg"mX>aJuA[h\X16\R?njDCPMI'?0B'+VkW,lB_\&q-B)"
%LX8lZQY!HOV+_8MJ<`a1i7)>_=0PT#_+!"U]e]%:0Q(flo?3SnF<1]f7j+^k8(MtYX8n1>SR)QcDTV;[pZ22J)-mb[Y:!it;qgi.
%fBW`W88:rscM@$O8L9g^q-]dg6H3jm*7Ij_0"bQJX=",X0dtYZq(4DX]k@RP2Re;Qm+.`^'r:]E[KR;)->cBIM&1,[B&08\G:mB7
%nnL2((U#:S'C+T%<lFT`I6pq^>Z:SIKmc;X1"mCf@:>d)<?H#*lW&Xe')S9(/F4#bSZaX3HS4)*]<G)P2\BN_-O]f2L'(H+a--S.
%.-qVIl4XjicP?-[H.UX^`Rbju$!$XQ]=9LEm%Z+$:0$1/[J+ftI6pq^XI.85$N#KgQje2R['3>:HhGpCI6r@V6UNLXlk>gTG,j)N
%$N#LVqX,1s^FAL_!ql8*%mmm8fI(mLprUB:4t+MI0-cpmZ1o`pA/+`#5dY/2qh2!GW%GY`(A8&7ot:Z=+S\W=T+D!RMNqf^qcJN^
%DRP@%XSff::WT\fq`"M2C/5Z>$!$ZgdWo.rfI&LKb`9`e$N&HXVQ9Q(qOXDqO]h]/Z'#(@_EOY:^%"nfJ#KT4gF!:LnP,`KQKob&
%m+qYOjdnJTc]-*(]>dcU72R:RpN3pSm+G<VmhS,"PN13&prU9$ipJCIEf9,+7P-:Vp:$hiS>E=sJO=r5Y.*GW7QfD&X%+;q!^F6g
%VRLdBhB_m>-IlD&J:C7^7(:+`1EPiq=uXkq;^(tYFd^+TgkchXGGr0$^+F;ngE\._p;l?F&e[8"ZLcC$\Jq:A3pTZ6niuqINi+N0
%A(HXhrI;+GV8P"dHS?Q<\!R-.nW#=8^AmZ,31[kHImUscH.ab[?2f&uSs&jJn[G.Y?iDGMCqG,pktmrrgp!c'qW?CDNd2M]9hZ&H
%*K,<;IjY,dAnWm4T`42E510#B8$]a(:#GF)Rbi:#V<XtZEq;V3+ZJ+R(2[H"j1Q2O8Q$3p\:b!J<J2U#Ul".hV3YK="HS/"cK^\&
%@?`B_DZ#u2(961^5^t'0$:'f?q^aDN$:'f=6nY%ZNhkTK$8EX9Js5.M5+ne]I1[/c#>0eIR=N43ZlZhHneLn<^<q-q^9lV'`m;Of
%g(XD^WoFO3-ipr@fnt$Ui!&aSNaUmQYT]GU=I2TR[^.Dj<j2X2HGclJ&*j:HIsAe($.]IkA,+)*$_@5=]8?YT.nCIe4E@tWGZL-8
%iI(*+_lIeWp08c<g_,K'l'mt]TP#npL/?`5EJspDa.ANLcUs&/%u@h=+1\A3ms(LZ,#Lf!E!_5\Ac_=GCqaLEo'ZJ:"c+6N<0Mh#
%+,ra;4hg"65AJ5+r9D$eet`#RIufu^:Ybifo0%#qrqk5$]".S(m>22R+7QeZ9_I`%IhDe.#O_P;,Hj?F58!i(1k+D<aM!(Ids5J)
%qmN;!Ve!uXn&$s$&"h;NZr^9)INNI14o",mFL(A%Q\Z-gHH5"QMWOpRb6p):&>2*[ehoL5(XQ+[eQ$_JAF9<+qOY>g:bi^Tn`kIn
%c?-B6I6)hrZr$1`XS(4pW/sV2Cr`YOl\V'uZ4!Y7+]U3ona"UEg9?1%plV1QU<,R9*C>sr4=+I->bZ(H*.K?^pMA$TV33=(l5rGP
%08\hr]%cr=KiDuhl<E%W'KGq$eS@<]0lf%*\V5(MVt/6b7!IV'Y3r_C]&U]\C%CS-4--#6,p$'AcsC]0k4Jel(Y.?]/QU7.+JrE&
%IbjBcC543Ah"9hhSHj<'"d`Xqi?C5p"ZI?Z&05GR&D#]LK([()(6;U>Xb:_`X!PX&>!9A7(^][\>pekGgY\ue>oQZe84A3K_&T2s
%?T9?_+5n[g/#P/kUhk4sm)Tt:C-#`"X2D!^HXkSqM3e>d0*@h@'J#cl%:W=nKMpp7lFS#PQWlEB/RJFT8F7GW=OYF="qN5`#jA>R
%Z6ROtltSSp7#bI)-!m!`d^h;+G':?I=*1FnKtl1_20+#bC\WY^.RZ$0p.FCnTIb\[:o^'.M1Jc??=*bL>"*D^%KHFBMXj[KX!be6
%p#KVbnuu$&**5&D2oW$KPDp9#C/sc&l2$5d$,%1-<aIkFBX^\VEEi]=HslG4A[I(XoBjgp7WF$2GF\RnM!KMNJ23*WpfHg7c"&/7
%!kPu8h!Lnjh!E6D):uG'V<b1"Jggco8!HN*GVF,1]MEO``47hX5r3QIX%n`=YDZL@2fW5NM-GS.>#<bm9t7i'WnO!H[l=-EEAA09
%A=(?m8HtHt<AZ,tY1^Jsid1iZ13:76Ne^$3DUQ<Amh8"iCB,GJ"-`#6E,bV3lXhN,"%IE'k^j88kXp;Z$s_2FHoa/[]=7ic<lVl6
%Sbb6A=j7emEq]VsjuY"M69_]BY^&N:\sHrtJD\Dr*]ipg,+b*J`Vt'7M'CAQdJ9gUd_1UgFihnf41+gc=!Pf5$(7s&S5^4%:@0!C
%ZenCc\k]reP9-SBO!0GL&]!*b$2a%^JAEocYXe3HGtHf\Mt:n/1;q=Vj9LKj?"XD^eWr=pmJ]ZmS@ZXcp71%L$RWY_dW_b\j]5<*
%0imP5S>-q>lg1F-H^/*@F1NZ(,Trj1OV:Ur<*cJ0<*RN$RO#A!IU/:brrOkee/R_B*@Y[Mf0J6\fGda7$_cD5"T@(`hX5_S"moVR
%d6g=6ZNL%HdI-@O4uCK8o37_u2c\(r*q)H4%C5ZO01ll=eg#4%kJJU&\"+)58*$-(&!nP6lse.s6d$rNPZs2nFUB4Fn^'^W_PpSA
%9+p@;,LYmI<7M9?Kh!d7'\&`F9+p@;,KfPP,t\g3eg'&+_NQTDN0)l+*>ea]67NY3;tBE2\?,0`6f0=6PBU0ggV!\F??96m-#Bme
%il_[SaftfFb6g[#kuV4mpe]W2pQlW/nP=f7f3D@t<GVW?b6iq4.(Q,t,j]9q*>tbY4a,fCK;VoOp;02*[(<s<:ae-]<u2oMVat,?
%oWo>T8e+VjJfL`EMb^[CFlD<X;lsAHiM#m\LMm^QHTk;]_,"&0onA/fei\$.+a]:.W='5>j:f&jnEi.<AWQ"BMFF0Z^@4tq[_oSP
%n+WV14FAp8.JL\HklO*_bmQ-dPV*W2R1+HB_F*#LT$L\eaB99;'g'8@rJM$oR3Fs@bpR5'4`]MToP=m22nuom:b7ff]^8P@*eCC#
%&#IgKm'Q)*(EPbZ:Z9b;q4b>=^'W;krT_6eBda$#?,+#@:^@CQae^r0*k:]9L?O$(Knn+,0i[ZAq$R_0ZP;'/#"&4[KnhV:jP4o,
%4ZBIESpM7p9&Fg5o@=sVnSZFUleh,qa1\A,Ph)EZ/%H5*mI5*E+EHG7ZtXL>7fE%t6NJU4].EIHKnn)Q,YL]M\aWGl[R7$b_T,8$
%VGalDOtuD.(EQ3+G"DKh:LAAABR/CVlG)#]*Qj[^pF\RUdSuQ[iM!?"$D5*&;#7Ufq(D*+$P+>lVsq/3*cdtDO"1nnN-Y?<6_WGm
%@tt'+]'rPMm7(bqET*V`D27jj>kt5mP.)IGYqC?OlGCHZNgon<Knm>#8D]ZbgFm>^D_=0MD(Y1.(EQ16Yph_0B6;N;*f@nPWC.af
%!TrVS%qV:Es87S+dU=i4Y^,6F6_Q7n`YfFfCVRIM:tiOZ&s]*(n5.iN^KI/C^$njSBQ=b=+1Uf:Y4)2IKno4s'VE,/nA\qugigc3
%H1Jhilf8E0G0!:+H1&O:kosDF(\c#Z&#FJtfL1)O_F&4]q!lSc>;j,%&#FIshX2@t,l>GGl.Z^*aKpVm^[R?QPAlX:[DW"=aY$Tp
%?1BAD/'&^/;FAaOXJ,:Gk&a/dS+p;<SaZT%H\\C^*@6cI8?somY>B2a'#9_\8)_ndeCq^D@q^L!92jh2diTQb[;\/JmAC*le4^?.
%IXS/6CO>.iS%u$V9N;L4/\#\V=iXlrVrP;._:7>g]'HIT$p*uLYDjQ3G\6pe<?<bI!rF$6*8o9gU@S(48PQI3W4EJ>cBm9sEK33$
%<83SF*&1M<m2X'EX%%>3.h\sQIJVn`1j.98WYO&G'0hA#'ulqK^3-*^Rtc(?6f3;g+!Y"L")E=<[46qa9rM]3frY1Y:jtEKhbtVc
%?W:bYC=I#nb[Tp-0`1dp1^4rR#bHq8@sD`HcJ`J(;`u0,?JY/4Bu+q5;YGpoaYioE?gA?j`h:l;Z8`1t"^QZQ@m-EtGOPf#Y>TTI
%R8`S>s"*fUd;`_.7:pD_bRM4&o.mPL%FI]i-U]UU&MW.Lk'2!H0ZgRPF@5H&XDE@:6`TP$$KjlgGKqkao`Uc"o%"ddY)6LYHfkW-
%Lb!@?Kd7F.ea$sT24]9Tauca`^ZR0n0Xu.n$-1J6BMs2_/cZ&!:5B`1,,6e)NncYVXD_iF4?74(#Y.'Yo,8f@h<8^J?/Vd\_f>6,
%>Ni*io7o*JlI<hn$-10D0A88G3aCLc"-%lECfG%'Y2$8(ZI=a,$eQ&N0Y5pP:=4HieMehEm0rmqL0e1j?r=1cMunZ;SKf/+_Q@Gk
%b]N'@8I96V=g[fKRgqlZ!J0$1nC;A@KulReAbY+ud"K+7"o!-B?fMpu[?NP6Zkkk*BEgCB9PWdnV0&,Aen3>_qK,g1HM!/Bi&qUS
%%ufi["loCS^s%8SF&/tMX?8?:q#(!4`d0'S42;bi%g2^<L2KC<r\1T!bajs`!t2[Cd[!a!E69V/feV]S"$X%g&i/:I6](jn%F<o+
%EbMl><kpf$)Uh+%YadT"MrA-<A5p*I5tt0"558=#mG674p4a'PT>4gf,[<jL%N$%W[d-p/4dn[lg<$(7!,1@M5D?LDZ61uaR)e1U
%:ODq@HpOQ#Z*d*d@C[\'8B<4_eeAFMYO\+)F?<L'>`_;Aka2eaA-6I0&riP;*c5TgKD<<Shad"[D$qfuY<DSjkb\.PYIn.*DD15l
%WB1sr"uc*;L5(^*H;lS(=2>GeY[mocX-*hj`_?$cVkKi!7\9\>CBj?.m*h)JlDJ.\?34:%aeA9Cc2bZ8"e1n,l9f5c%:Id;dP`e)
%*\D[BJ4FbCVkGR]UaBS/ZsUF$!Z2haqSCrY09f8aFYk=5\<2@lIfg4e3f-XR_E&*=I.OJKOU<A)5<#FWl#qc$G0)recIRT\&7BS?
%q9',W#^J%[7Vs<dFu^fC1TT^%\HDd7bV<T?on_iBn[ZcC'/T<\*XRMSc=jqO"6JJ+]"hdRkRa(A1eY5'3F3`=N#P2g!-*2+(D)h5
%Z\JdHPg2I.'S4BWXU)m@;+5.nGSCaB^8VC!fADI)3!0hZ'bQ5/V$I_VBgjj>%D\hn7G+.#.jBUT8J.tp?lcm]FX<i<$ke]n/(c#W
%J"9:9jZEQP:Gj"2bbRaZjJZ"t#go^6e&%X,"5LbF8+'s\YX3@4_]S(mps[o!8GT6E?sU_.d"XHP$?O.6en+_p\L&[U9gJG=_oSPB
%-Z_V_3EQG,H#hSDs1ejKJAr$DFNCT!nmRlJ8"lRfop?^n*pAC;D?XlZ$Ro+DmUde0=@FTR^'tfrgbm60"f*ZU[cSl6`6ol`AcCRa
%g.h`Z12\:cL7pQq2+tB0.JuE8[:5VWK%3<t<X*dq>_U&'@ZY"L,#4mabS\$`TLDO)Fd>=6%+!bDDRntjAdAIpn/[>("s:tuo[Tkm
%-%$$\e<E\9@af(&<jueY;gU+X<P"hBQ1CrTPB]$abkNi4i6,;oa!NKb%;DE2VN3gCU2pDfL`,FJ51$<-W?T(;iS3OO-i25:]_@u@
%PaAi"+_lu<1l:R2GtKC6[MZCZS;APB><P=mp4GD3JRsk``Mu$HNQ]X:[,,W8JhmAUHX'!T(Mr%oA?(@EE2^/i5:;<lZ311Hc\8`c
%e[o]=hQLg.4;,3'8PVY*>P<`h&nn-<kH6Drc`O4kR-tM%=JqjN#336pjM<:\`\G2)a+$nj;5F&igY,5IU\#;$JEG<lCo,T\*^^tA
%LGZK6+U5P8C4BQTpeIX6_,[k6E#`Cb*KGkAGWQJY[d:3[r:c_)elnT3R$R%X;ke>:%N;&)U^m)hI]!ZWLWU/!q',??8ooqJ[;C/k
%H=W@&G#E`e7N!f&!sLppV^aF%S>p7"T!5@UJPXeq++*J0?Ic;s$\.'[j8U5A8J7Qr%Y+l*2U2mS0F2L$/\i^hbEqt4^GSK'ce1rp
%&kg'qhY[/>H[HX3RC^#AEfGBa8WMuecW8]dAII?(NruPq0)3Oq*kt1Xg0NG1jP7&?dk@qdfcOVe+Ldn%:k&h_a_R3ehHtMLm*[Gu
%Kie<LGh_D_b#@2DC]2@ZTX:W+hRb+Noo!VKcTF5^iJ"?&fH]@NQbI_=ZFbFs?7q_F00f='m#PUN5'Z8(XfoM<?7u'!S3QW?pKoqu
%"WM=S8gkK8Z=CWg$+B?g$hbaWo)$Can,E%#KC:I1j>S.KMqK/Ag$F4*nsX-kmNA^iCVoY2D0$J5qu,'mR;qiZjTE9/cWXZHU597f
%>CWk`[[%rG<StQTdLOE>p13^<f==,f^43EedKg,'KE>c?dZ`,Y"BFT<Pd]jtmq]f2RMFtt$b<B'CV!IU[+!4DfAS1GE*=7[C%F=u
%V&e.;`qH(@JcV7!SbVtL4a(R]j#m>4m]k7/b/aA)'.;[[a4A#?r5Gr61N-NNF8&&t_`F%:A#DQfp5<FY:RpTJViRsHocK6c\@;.V
%Z1S?oI?3+lY!8hMiFl%MK[8>bTnm%bp?\OZnCao/LRAgZ(1SCm6A#6LT6ttaLF\^#r9;(bDuTY/V>%_t+39H^Ip("V.iX[^n;hi:
%cM[OmK1DXlHsaA/HFHtj`3sR<hZ!3(o3["BpA;-+?QQiW;u5S,Q#qtoDnNCA>@6ZgF1]`ND;IC#rlsn]]m4>Po:I(0r;#^b[o\%E
%UfL0<JO?B#.k"D>F<-mfY:A;f263[?/+3&4$P!>TIqsL$@Vp79@NT(PV;;:<Lpa0u*"VS/6RW\M9(^5/gCM't'+FSE-\'qJI59Z>
%+->V$bc#rmrq?*T+m"rd*Jp##:L5-(gE3U]RTFoth]0CPI8#Z(9\A<pV_<Jd+@ei.gc-p\Ah.+HG5C?l&+EA9m.;C7IflYnJ,S`q
%2^(p[3HjD[T?FLg?iPA=o&f'TIr,(9HMu0P2dcfnU^t:jGI;.onQp>L+,N_(f;j6ff*\&Jnu\N:s*"CX+(p%cpO@X?+/8Jfl2S9+
%=cde3I.aWUQId[UZS7lP?bLQ7NZ1gKM^Jues60ph#7$p/cS#1oqX:UQ\\9Z]Y^,ieRM@8g^ERn%LJ/##olG:AR\TL;j:PaMk!3YX
%3G/SEX1[RKN9,#C[P,Y+as#LE:Kqtmb77[QZpV'b<=W/-K7!,K6Z0ioJ*_8$N4BN:hq^!Sni-#Ds7jIqhp(s)S"G+VjjL\<OZ`%'
%_m=8d\oHiR%i;CGT0>I=o9[5,H25hu[m,00SGg$(HKEH$bEpMF]^2hLGqNGgTX4-A0nQ0?iH1@F#X')UG)Tf>D/5CR_1hd`11uZl
%P2<s.rK>%^*_+ad`Q7<,k3/AE$h'uXm3o'j]a90aJ(gX.I2Ki!]\/ACnmJZXmS>no9B4@mgb,r%QM].t62bN<?i=jENjDONcVJ1@
%#56:Rg+rA]]2('YRX_iZmA*,8guYd?EN8-l`EuD($/[j6T$,fQ)mE[iQe/$ST:c&\_O"X.qo=uWQi)!fjtZ[Sp@>6OgSN-VNT1iD
%*W,9CW^K#uB!.VEh]=*_Fmo]EiIh^kf(M+4%7mofT6fg0qW=Fl]0.Ocj*;?.]_@*0>!%=1hL!-1R\SQs]dMST`/!72]m"]chSDQ!
%A#6OWf]:TTZpSd&h@iA!dXF*b3Q.MZ41/^ahGb,</FYs3Bh?h!juBWMLA(B3cJRp/`Us2?h>+KB]hpW\dI=YllKp5Whs"b1k3M'>
%BHFk[iA\)<kUq=043[$5Yugoq:I"+Tph=,Gh3*6Zo_,24%$LS^)t&>e%NIS(p@\;]0^Gcnc:)"-l_BI5H@0sKdJ^jhs8I661VV4K
%ZuRNs(?XUjT&,a%Dn$JThp&*53,[XNnJ;;fm6ho*ouG04p=mcgO?BVtUgQ)&Ie1gT*<I)lB,dbJ<RJq[hjh>*9)GS<nqR[=*Idj(
%B+H4&?^s=:%dKPX5A/Ms7WI,.W#t"X\%_\UTDC>BE.,!le+%^%^-22Zb[jMtJ+W1%mq.E*r:[1`IkSfOGRjr[)`qgtqP$,9L:85Q
%eI7MRHbGV$4':$7k0Fo:n@!\r(ZE"K(?)[1Nr>c&!NndL1TpnpkdLS2R!jL,*A0MS@]H$pIU%Q(hgI73_R>2&Vn6;Dmre-_5<F>,
%Xi%8^T.HM4Z]G!7f!c\>\"t`EPFftLiLKl)EB=?mT(m8.LT<XU]_q6%<ZhU#Bkp'3R*VE&f%.Z#[Gs;aIe(m(`:/NP3W4!mb@_4M
%Z$&7&;;.%C$q0p.B.SC[p.LhqnC#YhD=qPGEQR4^f_\dpnn*3fXd@p,FdS#EAD&'/m!.so$pn[sB-OZC3'BWRd)KK@ia8h&SS:3,
%JZ]d=_7cHqOlu^X;q8^FNfW7HOE5kuUs5G@k^m42B8knsTT;p@2Nd1tN)b)_pdgmd492]jpl=afR)sFD*BA?;[g2j4-XYX-!79l8
%BEo``j/^TT8RRltbiH=TC@3AM(KdTGHKg@B;mX+AMjL$&8^L`<o%iPWYQ(j*\eQZ2O0q!QN=kT*EDPpeBrb.tM4)e8V%Q\[?Ji#H
%&ajEYgF2GS':C:dD[*QRV4H7udT6@'eV*S"2_KOY=aPmMr8Zcm:@=#J2L4o]p1I([H,,Kn`W\jU^$9's*,0IOZIg=r:TcsSHSVji
%LChljb3o9+/eld8Vmi!JYCBAe^cQ`B%_8X\:4I<D1b2s1=/;+?h.JN#W9c.J;d/cL'G4Z^3RqknqQSR/IIXp4rQ?k_0Y5^?&:]%0
%M\<Eoc5b_lo]-;IB9'H.s1XE69@Q8dKgQjps*=;teBFuZm@W"I)85G#YKf=?"dq@ah`#WP&e!D1.Fa6N`R:W/%e%&YCA>\Cg@ih2
%p%]++`D,fnRK)2PIIid5_eVH@e),Ujc@P`H4un[`YC>s"l/</jX&8@3LZ,&5R.!gbl-g0(s8A/brSH]QF$;CE43]'J[spCA:ZuGn
%8o+%KI(&G$l&Ss>riY'^IiDGEB4pG%Yaah4a/48sgDuo7jjikq%/jDfHA.'JBVtZ1.k=m9fS;,86<eZnh"`n,+Q;MPDJf;lo"q;o
%5@;%piVU[0Qm6q",66T9HF63D1W[tUm_mX+DsdQj4.c#r[C<'3^hjm[I/<-apO9VLI_"sedoZ!D^2`=7K/qSp51KQ#oZ-R:2"jGs
%C&,q+9_6]C4;AcaUNG]PI<H2Mm@,mbFo4)lLHPM.%k$kip:A%X=KD3.^\m^SkVFj+GsBD8DmW$kggn\!NALOi)eSpMj`^EnTA5K+
%[He8dro):DYI6gggV;cJ6CPoiKrm"7]6q2]q!n9Ok3H)E%J:T'*P_VPmsLg-RfCk+jr-SA47S)cq5sYh';&Z<Ius\8rrtsj%sIg2
%`p5hb-"&8t(;[j(I<O_MYHM<GFK1k@Eolj^?^JcnT%oChmd7?;oqq`=\)-rf-':,#*b*GN9iX4IW73qP,\<G:Fm`8/Gr0*$gmbu,
%2,>5aRH@/\)VUrao*EMrs1`baqH*C@Y2q573V3'qXh0WXH$&MAHOn\&^\"]g?i&BB$h%<seUopoY<9CCpWL2KpW97eRnrM1IILe7
%m+Rj8?X/!Yr=Ud>h0aJ1mTT4Or%um@HMcL[4WI<i(>Oei0/!3.htug+/"aS)ldF,AqE*Ffr_E6hD^49Q.5_BE]qpjre%ac:'tJ`3
%a%ec\qZYtfQ]A2;NuX!q)8s_VT=pBThfrr8V^i;L2r<=-:ZBX2(Ff(8H2I;he%^D1_>+W-j*/Yr\%^P*o'f-DqXUEMDjX0VY$D"t
%b1d`hhBWsi_Plg$6p4tH/>24qViH(M&[hQ.UR0<_q"`a4cYYiA#lhHb,+cJUHd&KN8p+U4/qG8<B;cKuFG]-C4`Y[SRkE)pF6)W)
%2I3&6r?GAk[cnFi5X,TuU;L;E>QeH))j'DnZ.SZ1b>\n'dD.X=A/.K+k*n/VZAP?Z\RGMK'gna=a7'&M.Yc72LN!AG`l_*Z*=$(U
%."Qd2e<`s+ATR[u`u"*'YC'I3BE,^@FnkOD`UEb0esqQjc*_KfYrCQfY?jut/\1:[F>ofh$qe\bhZ!G:%eVWo$FKlp)i^CHUlc==
%CHm7"oUKiL;i]&D>\0Z(?N0TiM2=FYDGn*&)sZH0Wj)CWW7sh,W:TfIfi(r6p5W=DS\Dk*42/_k>hpM`)1'YG&8oG#pYuH#1p<M(
%d8=OC9YG0Vp%d5:+$Me^ouipb%t9rIHVQKdk2L0k2\LN$4B3!g%mU)H4I(e`P/)hl,:_(/(X8cehKijY)Jd1nRUYm^aZdV':Q^$h
%fuZXtXZg&]+1Oi7^#..F-U-,AfbCO"%?a5+lhk^Om]0j7Da-C7EYU"%OnqT'd2q;;p%/F32)XsNmi#-SZ'R+MG^0WEI_?sSkoQIA
%Bq`?>p!`XfDgTL'Mm&_a4N($VfB[lir:K*;h`:F;O.STu\LdgYpuO#-?<`5(RCb,m1Y\MkmC/]oR%A<dp]@C[kkNeJV1ZtK^U`c>
%J+G`PMWgncfHnLoj;>7EU!*rdro*BAE5(c_GD:83anEBnK=M+h38fd18hFH)&B<RMF3"hGZ6-N/0)Ls+HE_VKEc@T:(:q/-qS?T,
%G'%%2cE2A,=G6,aq:g<0(f'LWE:LpgjG<JOfN;K_#GBJW+F\\.eR9'8?2WaA(q5ai3<ug9(@SusfXo.i<d+\<=Wr7+/<2jo2BEqU
%&s6fj!$nd>:jYCd`3O$Wn:2[LIcBDhT.rLee?6idVkq/tA2NB;"+Gp'*"=Lq&/3aLqg=#!?9"''L]%Lb>&(jEc`eo^5[LeK1JXQE
%opkJkaA4<logLsp1QI"=S3FX01KN=odfWmtCNb-G_F1gs@q135RBo&t"h#e+S3AK<SMo4Dn.KLhp\,*._J3sM+PS\@:V6UboZDR,
%*l%X0LDLc04*,GVmaVRAbtm):=73]>lV=QOBm\+jbfU?-TX=+4=?kl/3AXKg]]MIls31J@7-2\eB:-S3A30m^-uC%>EVoclm?De6
%^\HGe%<$`<nWZ5td6#`/4MWO[5e:X0/quH9^lK=cZo]gQ\W'n:@R3QR[3KQ(Q"S^52&4PW3tGM[!RWkCPP+i`6I1[(pH,#)]CP'o
%ZSsL$&lTMD[&`HOWu#^Qo"i)/7le3AeBXhMHd&bnk.$j!ZPe&aa0T\AB?hlK+#GM?gY^T<c)Z%`GPF\9[srZ#.oA\nBW[(>pp.mI
%9PZ*HarB[N6p$n<SF(-fn;jqjj8!irk7<XB.]tBe'Zf:aJA[H2B1UeI;n&1?_]LMF2W<A=39&Y`rlS!G[`s&GBgU,DjmA\<^R=&X
%oiL&NFTTH\YH**?g<1.Cn&HYdY8Cc5U[-sVq$/MpB!n=8h-Cj>)g*c>:"MMWE]]c>1R<%P<IB+HCP+VGh06Db8B`^=js'HgM:`Q8
%IW@oG9ft"ni?,8GaB+Zd2'CLH^[l)%qVjGQL+c=3;,G5g]magAjSmY91ZG"O0WYX"Dl6&Meu>"S%OBUT?hrX>Y)ci]]U/Wjg>7lq
%a?r2^62@UJpTC$9j6i8#hS8[UZ&Z6hXdsj&DKNp:h0`dW%:-^`#3=RU.=V.-L!"8KW7t[MC#8^@h\pk=gA<8Yf6=\!U2L"phPos*
%frs/>I/e=:n,[X1EdrT9S<$of]*J/p[qFF^^O9bkY9.C1bAI!n\SLYUjP2hGpqr05r(R>#rop1B?CPU!g\l3oaQ!"[g[U/nI(M,H
%Fd)I7f0&lVf_=`X6l0dprp.jgq7G=?plg2_*M4";I!t,;M0Ih#?a%6Bd?U=fHEAZ/l0C8MBCirdV]pMYLt4FZS:^*Vo\^h[i.&"U
%n1c,]E;:^GH1UTZ4(HK5L0p.<0CD#LqE$?e2rD=GbIn/4DEYc3kbWd^2>pl,s,6p>\n55NF"tg%,"AclId(4[H1dUhZ$$RWlch4%
%*^.&UDtD)aLC\8cHG4QgA)D`WmAot7XdrbHX)H/2Dlt+ID_a95Er"/jL0JTU95hQ:0=,g&s7uBgi$0lPNo-Je5Gii:rqG/O(pRrE
%gZS@`#P.3<1A64KXBGF6mCOIag7=SkO.XU:Otgb<7K.?M=7Xs#IHIs2fD/MJld*1<B`#U8>PHF7rVZ*GP?SQHft)N>mE?AB*o224
%b8SF)h0X>>MdLE$IeW3^X1'/*ft.(Ej'29H[OLZiP[?NDrduS6MbcH^pAG6jT%prcp"@euG95Rdn>+lWf$8YlpX[oUX"QYao\f/4
%cYqXMp[n"/ZZ]\Wq\NLc6)Ve>YY`NH\pF,-0>I5,Ztj=2IJ@d'MmjaFrq:j04mnBkl7[YD2tu`&q6aLOr;?lHDJe4AZYc7gX$;+/
%oYDRD_jA]Sl?;:dF=$Q3J&&O]"22tGCQJ15[HkG9R2*"!#2of2+'h+hPZM4lEQ[]7GM,tDoBcQ+dm*0C*N/Y\>E<[XJ%Wss(KoD>
%`W'S8NGVX5U@>7DPYqutIY:U/QN'1\>Y:/$VBhL^_eqI3?S'/"o"*iYL,#j6Xh3LMC+Nb'`RbP@CVZUtO?_g6&u+1DA0dHMj5l]T
%jLT"`C^<m-Zem0;I[-9Y;O)0^Tdiiu6&+rb0."e<O^H,i[8"1jR13AY4OH6s;,WL"jLA'm[5):kL-/B%c#t<WI%L(M,@PM8Dr*0F
%-FiL*$Yg#[9ch[DiFCLgeY]b;QsJF%Ei4kN]FdN0CKiIj99s*5k1E.%.Ms_VDZlIJ#-gKqk$mBbnOiVqYRt?%QuoKFUKCY<Di3=d
%db=U]=569j/rEJh$+PSP8Q"'[o"/tf)l6Xf%R.oIq//9"-n?k'kgjopaX1T=="7:c^%9[edb=4)CYsTIqUhOTPHD.4K+_(*cB(5K
%Ymr#/fpF7F,a[HVqubGH:#1o1Xf]VpF-kD\[7l3>@2h'l0:Pft$L((E;7<i2R?S7m9mISmK#mY3fs"mAHeECkopm-_%o'7H^%82'
%Z?8Y)SK90N04uF)iP!\O$)i@31ceF75AfRo2tno905k^`qu-'D,e'&jqs$YJe/l4M^<G"U5.u/APd+)q/kF7O]'V8Z3,<ZuQ9BAQ
%(%1q\0:psFoON@DngcqSpuE3f]V#=Nfd!ZrmdKUbAZlj&XtWOAcud6I($JJ1]('>cifJkLb)`'eE#WJU)c_,WjlmFBQT^C3M!]kH
%c\<Q)-O#o&(aP-/YRC$>od'IC-83k/?^SJ[*CJs7S9MkRiJ6_J$fT9[O:-b2RY:98)RHLgD29m-JKiD_J#O$lm;QPE_D?m;eQDA;
%\5E$e%<>]g#4I@JY;.Hj]u'H4o*M1"jiOXH'SV=n1;5Rm@HAR)k-3h;+P,o#J7TAa8[9sa1:_k%Hr?s7SMdqelOAU0_eY@A_lY+J
%KGS^Zag]p1-#<7F-e8Q5/\sn3]TRq\aK8L1@$)Q%?bB-7.jk(G&L3p/CYZEQ$#D`g%V1d6/^\LX:#$NC'hRIs-+i@"ardr)mYu):
%3J4H1HbHiR9j=-@#kX*aYuDp+C_li^08LPo=hN%;kUAi523a)hKA7R1Xk@a0jf0GXep<"fG*U8fKOLFQgNjQZ++nBF'd5*EaFO`A
%/KtMPKI15@KQ>\>Xnk$4/)O/gfJ4qNd>E;_)O&La*(,uE!,!oafPJZ;^=<Ru-^FTR)jBe(bSPpTZB>&E5bNlXl:%!D6cQ#:EKr)S
%r*N=@*CZkLLR6,>Ag&f.q$4Q5p:r]ajQghlORGj!@oPW=i+#.fG^`;k)p%'Q%Y5&.5rjIbWsIc;C5^<Xktip[m;'cl=aO6AnCfG9
%MT`oh5rB3*aBB73C#jf>;sH'i*,nI.[T/I=/T5]M=?`E"&]]$!j=IoZWt*CdO[TqG2u6t;Ot;"_J^9gTC(t]GBoracHpc2l\!)^i
%"/,dKK.kqMQD5lrU5:j*l4X5[JYs;s]@"A078!h`L5#f4%YS0$iA0G2@4>@*[."=DO,8Tp6`5@6ZcF,S-YVCn.$qgs1G1YoR'C=c
%---R*V<'4\f23h"Z>m`qZ4LcEROQ`Y_2TbK6A$*eQ)Y[$_IPf?iUK/d].Y@?/IROt**!ksd#"DfLl*Wd"&"Ll:I,^Td80q2+j.r`
%)D!ro$S>6h6RE(SQ^'+B&lQLr0U/'P.Q;TFF[?:$pCMc)$AmMj0/9c27F(6fUsm46WfCs_-KB58OM8IrT8)#;d.6s4Ts^s,HMTZ_
%)PYrq@1GCd%b*U9<jkkK/_OQ4KIf&e_F@:9LLVD>:@l!:<Am`SE^+J3'bW-rVI@NF]Za2jT!jrd7>qaQdEuZ9$)>/9%+2ThW`m8P
%H(c4C*(ZqnF^UOtRHZMm'F,6'4'=a,ZPXs];!a'*P$st_@6E(qUdO!"("r/#^@7WRp*ute%<BELQn=\.#dTIPV8B+D_lGb_?P]HE
%>lMggQCQ1r(j0+EON2\+CJ_s%.9U4#.97LOnEJN^DHUErO'#%A!OSdnSpOR0Ei;F$KZ^@V`/Ae(>"Cu!5n#WL#=:r=?:f5>'hH[g
%1/rFj-.t=o0&sXl:iqcGKbTH/7!t)Aa\W^Q,jZ;h#W2c'&kW_i=#l`i_o1Z&eY/,5K^1b@Kjs4Be6k,UpO`R&aBM*%E\"@"YjPK:
%+]k!l0I5-1"(gGF>*lM0c&&l61aYL!&SeVJe!:tmN"sd-fH4js6R?dhb)o4<fubZ3KnQQ>#Y&foj:hpNA?p?^E\UQco.oS\80c:D
%`/o('DR.Hu;^@<hJ@hAf,tE+@H!YsfG;9G8,@tC1b&>A77Xh[s0eHg@9A/)5G"AK5ndClO&ge#fmE>X4-;0,l@sG&[ro/\<Wdooc
%*-RGi'KKknjA7P@EU>0j.W*s<Jl0s9J%DGN35jdD`?F=i<0hN>1$U?54ub,rdj,;t.<D9:_ONQ>+tqrtO<qFC,pU5j_$A+!#6Q7S
%I*h*`B-q7eLbY_a,l.U\KoT#=;N$PY8(Ihb@Zd*]3oN0i7lBsmiatJ>JKBFG2X)rrm;QZCgM(EM2C4XbP;dd:T;Z=T;9>OjL.Nq0
%@lWD/RbX^I;7V>NAle>u"56=::&8$AM]N4[.Z6/@V3:*fQ-(d2T=Ja?0P-R7W2e"OY0)'!DQ<8bD:`l9=mrP<lGb^J:neW"_(okS
%M,(caH!d<-0=(hJ)\#HAM^::&0#e6CWK&;?"<u^a844aR&_Z`^SK.5F=mt]24T\8Q51B_fS_hFd@^j]Y,>-q+_GHmCGq:'JV3BFe
%U7OKr])r5>K<8C4'WR[H8lYXW/%hG'B4rA,&kNtSY.]cTB]Cidi-:OQjKAd-Z4g-#f6[ufa/<M8WNmJ%H4/Ggo==s_O12.Gl4RFc
%gCQc-]L4oE]G#qgnM2Sq,riRjeANO*S-q/1,>>6NaXIVR_JG60)(c'TI/mKM]MM^\;$i1YZ01pt-`[_G7`aGMWZ6*k3BcZb857`F
%<;o\\?0cpdH\G6rI:@'K$EpT9&h=lCp$%RZ'ii"ZDlVYHUQK'iSM4]),*1>s278(_;-toQcV]V-jKTPr@F,_"J;NN$/B"GKg@.44
%&UEhdoa948qP^<LkaNLqIUcO2WpTslGtX2PZnqJfE$76E$l/_pX*CRRO+hEUF]`+;$Ef=k(pT*)Ei^Rd^KOZ3ojMlV)61"e&E2]L
%7>Y1`$u=m6n%j<\Flh,pH9>P\-FWX;Pob^D/W?P8IaNAs]s,'CoR:uf0)F$,j8+5YrSBC$$BDh+:cR]ZcqC>4@>3B)cTa;][gs',
%T76:nbLuD"+'d"=1jom5Tgmj-3RIjn?C3H%PL+B/>[UP!,D/=)`/61GK0(-d=-WK)7!q@th-j@Ql*rE2$[3dF'ZE9_/q[j8A;/<0
%Ekl("VWQT7TtrjS&?gE#5j1h"5o%AY'1JhWC]eMiSpmSqJl#99HDof@b!B+*R]%8X<H4Or$;d&]:d]'[U_en6!TV::57$47OI*%=
%cp3*$H\tfM%,%;"1L?WSYi+\=a/1-$mEpX1dk@dF[it4o'B+KOm6,\N7N1<K:DCE95EXM:R6J>46V\r[,\.lT/":m_<b(0L)4DcE
%lH[<)\HLQW1>lE'Z4h[r&^F]%-Z`88GB1!t3\HQ`7)\:W+'ZTMRl@m7+\YP\HcJlGgP]+oXg2'V*q`)H"'XV[i*DH/@[)Fm79(h7
%BO"33dP7mNf!Lh6o+.,N\Vjj`1=\Z3Cq(4c7R9Im%<Tq=\X'@3Z-hVT^d[#J`b2tHK>YifYr6As:NR_%Cd@u]KIR&/lKr^"K/sKG
%=C"apXK4:G=S)eP3XT^d;qae1^2o(6'O1]K0d9S+q*<n.:&;qEc(J%`]*p96gg6ZQ@n>r4%`ofN4qJ&/SYcfk3j03_;f!ZhNm&eN
%\qrj'TF9#$PdV/[hRS5b7E^]=Y["Fa?:Yl^S"(>Crc-<YP8M2Ao"MD>\1VKL'H+i)I,+,J$W/R`C7:)X_JU#laHO/RqshS+Vba`S
%rehG$5(<:jriN;Nk/luaD<;sZ1W,N8XgOd3)=DP#?cJ$:IO`qHXtNsPS([6;pk,Yu431,per1EBA[;Z(Pu;8g4/!n@SIpigF9^C-
%/jcZjoRMhD,U/+H:Oq<iQjj*[/\9qaP\,E!eQcD.gDrUU(eRWaA-a@"(70\Mc'&1W7E4N,ShH+V@dT#46S4hm%5K1Q7FZQsn8nh2
%NHVb/fpj4gTjN*JmEqj2Ks`AhU,5=V%l!c,`-H]`T0"98'8sT6q4;?;%3A+P'n"?/(lW&ffeFAlB`b'>Yun&*:'#rVk9BmYo(gh'
%p;lFQY$#8HoD,sQT+Ctkq4m-EFuMF.KR>s,Pj3Hm)ufa04G(MU*WEd#IReSBTj<-#Lgd/c<GZg3#%B<*+FlD_q_40Nr#a^B\C6a)
%Gl+dt?`T4D4q'<LGjtE<'BR(dGl-EMO4BK2gIJ/h2KmL&LJ\N=GAeS;6S6%?m,No"p_g_m*+e>[o(M&.N-^Dn[guCPOh&`k-_CFR
%1Agq+]8%V>dFY9;rD3]*?\1tI&O*`$&f8!:Y!0f"_W3'1Y!0c:e2PquI0_W46[uu2kX0#-p@"cK&&H4meY>)#q8?5KPGYk+cR3e"
%$Y*H6o-$kC9>@$H^-mI>?$,Z]9UVDDK:=MK2qBR,q%C!cMCjII%n!'jq8(70TicEWB.k>rK<q>>&+?I^V<qU',_VCFh8P#5&'GLl
%>q"OPLVSr:q)0n`p1(>)M[tqVR,e3X/j?)U3NjL8fu8`ZPi?.YFR`pqph\[Hi_/'WlkY"s9:ibnO)H'%ecZZc5#/h.RTF4>aTl-[
%%)!S(ai@np?DG?YLE+1pZ6,Ta#gb@^@_p1,$PEB1SU?CbCHhUQjPqs*e@rPY%tR2Wa_qD3+%J]d*^)LY5kEhgF+&#uiLGfLj(B_]
%7\[/-dE.0-n!)@H-XW#Ye`a0^:-R_?R*im^oAFfs0f**[pi\EU`c-h33kL#_#n(N!_lWUS^UJl;o"(P%$F>5#aX6K@h_U'#L>`'f
%r]SD%S`o"h'59&-jk7JJeH$G"&sQ2Wi"H-.K:5`&K+B33p]^\hYXE%%Q1!OnlaLu#<or]+'*]_pTTm:/QRr9WoV`3?4tr@=8Hsg&
%O25_";p`AD&cN!,UV-%*4q'0I5!&J;U3IUm*IJ\5^;e"*7l>hCli+RD/%DM5[uSg9E7+]0)1H1!#KH0A^=B:j5Mb>DXqaD2FRZD;
%#PX;<[i\h&_=1Zg0`H8:I$XG&FuMq0hneel+[dFd*?9GU+eP"8PJP'?/^:*Zp7m6N\WFZ97gC-b,A[%1;3FgcL).&Xi58[%oS_,5
%\#)L*f'_D<NgYIK\Zk;S_`KtRlULUib;Un]e)]@!dn:A_)[?$XL1GaUEpm`%@mX=igZIBd0[$2YrHn*pE)e[FIIchY=i:8.5&YXd
%]cC5u#CO6*Z%MKe56'e-q"Dnos486<"s+957t5#4Iq4#AJdPh1E'0!u7G28FZ`)0k+Kd??!.RRB'=GNMs*@WUfL"cXE'%iZjital
%)#n!u^2-oVUf`B<`KYu=lYY)Bi%g#0jh!>Mi0i/%-\g?koOBSR6/M-g>14gQTQ"4,Kq,d^eIVFu;9i;N+n%o*.@u(68Z'q/K\F>i
%aO4pM6s+p*Sa,fMCMd0?NJJ7r6:EeHreQ@-Mj_j;N0XfpR#f<T@f[C9Ak6_0$)sP;+js4F2ppfEHG?B^>Y%TNiZd>'cC0>7\q41?
%J>@<uY`ou.KIXJWbG`t.-,rtP'-%Vr1m)%,*C=Qgi@G+mE*"5B<`Y&KhPQVO"BI5Q[@C+jBNhDfl[bXCA[i,\cHFF.+d.sN?!tG+
%V4ee#)!,B!S!fY7$W\'H+MKo0e)D\E:"Tp):SDNnq8#@@AmUj`7C0X.(*c+-iG0p#1Ir!B5[%o_4C,u>bWL3R8.Vh3#(+HYc!iFY
%4M>Nea.V@*Gc/aMM;DK06sBnr<EMRuTZ.91"R6Z"U,nNn_Z])^MenX5UXY)\IHWosSi5XG@C*:P7jF!TBo.k;^p:RGUm;<IQJ/*;
%%AfD3@>=cWNd#_C@t.:5nnApr%P"+>KcJl>=W#.PKao<^i5jl4DT8YDdGo>.Gr1F3.6Ti55WOccCXC,%mha.G@4Oc'_u`U8+d%R3
%CCW@koE9p(=bW@[3C'"o%b:jA?4mY%Y"/QeeL*N/VP*'kl'X`(9%Vn-ZIMm9;Wote)1M3gPs"<f_R*jaCI;nLcK;B.6N"RgbR7?+
%E2O!Car5=r!C6mm\Z45gdT%AcJq5adjGu*9%N\8E`,eY$dR6?JNQ:QWZ;sg[>%iRAlXsBQduK/Z&aLs0cbtD:Ge7,@nm&MOMrmMs
%OTthnl;LOuj*nd2LCD+gWn45sA+iT;Ub22E&0@U,c310J2WU!QNtNUb1ij!X,jX=0h*g3Ke!35p>kpWn<m"WC!\ZY;bEZ3?^l'0D
%,ZpZd:U0cIW43'td)[r*RY-p@J2=\$!BGecC$"!1:"Fs3PPF)bK,9d/WG1r)[1H'2Mjp>9<`d>TcgX1p$c]m+!DZCI_dW!i<g`Q#
%e)%ubVBmeRhS]"%=G&X$4e,gKQu.2BKa1dOZKlk@;7g'L2]kfE']S-/_dc=/2!mH]eR]rb^A!TLO[o/Ja4FEY>0U9tDtYe8DEWks
%EhkkNpKfJ<+*lLbXB(bqV!i^I!L\J\1%0N["hdcFg\)]].CSNToA8rki]RB(*d*7C^=^6U*e#]>'M`anbNZ;iH.>`%("L?bMF.W:
%!2V!A42#>#dPEI\%8A_u[9(3C]o#%4ZsVah32;n(*3gu%j]$%]1Y:$mRP"`F9HYRAbsR]tS@[fbB)KfR`4**!)Ap7(#YQMMVb_\G
%504uHo03rd=pX^>"q&F#i!*KeMus\#8/*u"cnR"(7FG(Ze[*TkLK3.F83nT1+LXsNpq@.C2n/'#8MGplX6,gJeE\7.+:*[O@gd'b
%eZ^1h9P@STXI+QVh;07b%Ya+,;trGI&B_Jn4D5C%Nts#C!'27u>aZK><X,Z.qeTPQnOs0""3N>Lf(0f4'uBtkc]2R^G%a"0D36h5
%/JsSmnjV33KOD?cUop$Y4ME=PG5@=p/oBcfcuN)((ej>2Y@Z`X\+>e''G941%6X&DmP&d`T(X\Wo`iY]lJW2@8^<H9LeV(Ga&0#%
%P4q/tn']]+KKLoH#uFS<Q`N1??jQ<,R;j<!$9^4DO8i?meHmYWYQh7N>u2@b>Xl0X<ltKD1,7et<0"gm,1C%),3NQ2<Mf(#DFYQk
%U:qE.4uE*A-4;Crj=X&b3FEg3:`eiBSRZDB=gGu_i^?QC[XnRY=QCD&BS(12'e5!`N!HapJKP,ABeqSa=kngp1X,oXibgJ635eK!
%)=gsT`d:''4L@X<6k)N%T.@Z02OT8[;ih=pa['e<-H+-'NX?01#E$2n@),pT%Z?3ON3[D+/ju[kE(V`2,IY+k"LX77go6-;KAn("
%UG7+T0Ccn_1W;"><f%j:$S@V0M#)(*%2O8&;/dK40WF#a;-$<-!a,nKNI,Gu%/@hoKFpVFGrmeU;%RE?,2g<J?l$Qf(mO0`JJB?f
%^L^h]IMT?PI%og)5dB:7-PYR82O:$V/rpkLqS[,[$5!3h"5U^!=#9*#a\s@&.*rmMrmf`rJG%Ynr34RDW08#enfuP*Kh)8/Ya_4,
%\`mE7K>WGPW6)/.9UKhEbc1]()-H=uV+4ujkt_j6d5:h0;0LUP%r4f]h8\IcKo)\jI/I]X"h/aQTl+S@bB3TS7>V4^kMo@"WhbS`
%55ugij<0mR0E;WU8O.a?_uMbrFD,7dSqmfNkfs1t\4hU%@K7J.$O]UAA,mHhd15=]:K%^A3rbee:n7Q)r\68W7Et!;$_UTXj8%;<
%d6h"n>66=TFk4'hp%hoXR:iIEZtNa^_H)%Knd4BcnUX/.Olk[WN,g.?K-$)gk\<Z([_qVOQ!&S2G(*B@Hk.>"!m6,HjWocihQ+^C
%'b#p;UgFtNU96UEcAG+G.!G#j]V^@-J8[-INt7:j(Vh4,=e53%MS'`f&Ps9sal2K>qLG7tQ[\ccj9ctfS:6hg@W8p;oQs'bH#GqG
%*edeoJ]$^W$t<V=^i]K/Uuh7/nR$;^?BE,P&u8"gT/cfX.3C!L7-Y3QI8COGG\8U!#T0HZg1M/>;H(%+4?9h7Gm`6r\0K0p/'Op=
%CC?mgUm6"@D;bfE7u&Ji"603P^m5s2B6K1X*%7rn'>%Z(rk\1(Z`nguV9d`mmf<3A4;+@UlJAKWIjqC9%qltai<f"bePt$s$nr-!
%J:VsBlB"a0Vn"\'/5fAA<e`1o$Qe_W!d\fB<7-)G@H(iu-^YRh[jI'<WQZFA5ueR$4M57,Y(gLj@<Uptlc(7ogk:*6Tg1ghiY*d,
%]gR\C;(n(&U7t=P"pKis,,LsR(sAF=jGF#8VC>]gWjrUZ>n`K^:^O(Y6>h);)DmC`>0.Bl&;j0Vl'X9N>W>UQW(f[GA0\Ye+!Ukm
%9NlR5!:s7e(3LHtQq4NkOLClU:oVBDKC@7>'\M.U,luCLBA2OCWLnR:fU#\WQtad/pJH!@ThSq*1sn]*JW*n.1g&sf6$e:+aro@k
%d'jT+$<#Ui0s"Qu11Asi70p\E5.HtJ!EkD:L$lb<ns[uCA4i_0et@j$-i5OWP#Z"WTqF*+JZcm+d:=^6DABH+bi<>paiZto;WRG_
%I>u4#)HY32%>=Lsc&L!:J:VVO&fRe`EWdOS!X+di6`c)rYm,Hj3]X)?XCDI()!A[X&.90>6Gg(fpk7_m-,ca6O(-VTYm.!Cd>$Be
%.jcr,LQ+sWXV"a#c1I\i?itcW6>r:FRN<^T[4L<SKQP'kb=.=U@^(9tnt?pl>8YNZ?H[^m\JLnEF<V9k)Cam[=(mhS<(uRI6n\Tk
%gT\&;ksKJ\,0X_t,/ZAAHoISu#U_?P*PT4Ke=faAn%]7Fe:Xru0][d!BNb#`I3C30#R-GqoPtfH@N?0UcO$k7YmMbQaS6/9f!\Jq
%p/2JG-sn\dS<Q@]'njXjLB9BelIh*J`J\Kp-G'%np2XQTI8kDUeHZ;'g?#uja"V:q(m^tUcl<gihM^$.jDe\GI'af'N52C=PV3kO
%n2Kt[U=DYU+WTk]EJe..l9"#^&Q*%LB5f(Prs_k[1Y9"BaqG1$bM6>*Q'$S4>m!1<m,?`VMN<VZCTT!c!KFs@f*jKsda]bD23M<%
%_'!MU+,<5BA\;GWU:f)#;*d3b9:q,M#7S\jWG\7rOF[IE*(^TY"A"5QE[\+5AUjeDSC@h=P[d2WW%:;9=@Q0<4oM1m1]6KjSX)#M
%%s/48rBE0t?KP=>D[:@+jq)#W6=S"S,#&&!,$'N$*!dVdCRMZ;[S(*[E.NitglSF+E9c=*(tLa.:B8[\N4gJAKUB*O9cQ0qk_TQu
%+=SN:Fca<B&-.jS88X$[NTB+hmgV5dSq(EUcO)Y!JeEnCUK[h::;M?F0T$q-G+DW!lN,rqPYX[LfhMrZO83;fO9$V#*I125@)V1G
%e;DHaN;6?]Jch:sOfE.=Fu$`MWeNl_'[,%A&Q5]@_?hDaKAn875D&;:9.t#IV+64Z&nBM/7N!`IW$_lSam89UF)GH->\Kp;BUEts
%Olk]F_nN,-JoI!m#(&\DNJ%<#5n,FTe3`UiiN8ZPB\;KK&2YPQ,=:Q2_o*,PM6<nlf,/i9-ca_5[_\rbo/5,AH9ik?,N<3kap.tZ
%.^l,&YaI$TU7,15`+fke_KdGb+-G77,JpDjJ30S,'oNfh6mMQ+OB!Ro?rbMYmWDCWKQSt//qQ2mQ6eA4A)\L4PQVc+*Vg-:L>ZA@
%0-bO^ZI`h2UuDNA]lOIUGsPCkX\W02Q13cm2:FX]A\jEL^'*4d&]hsfNdu=*Bq/E"'1cA8!=\LVa-?]YUZS@G9,aL!:nO3m??$jb
%*Hm7ZZ8<Y-hat>l23Ve1n]3c'0TsEgf$mV[ZE',\=ohC#^m[/Y)D0297chaF=rC!ai(A(b#'c/&#`W:BR_\T2_uirU@#%@:&.shR
%G1GYfXVR'+)H9<@AX2N#3"(j.[4$/"6m1E]"$o%H3b<%V0ncpA&.,;PAFL\V]CMJbkjlYD9Et><BG84+W`P\$7cZ"sC1:!>?@-=A
%Qs5Y+P,$"tLgN]cH!?L^A*kMuC:&:">![t!F+BVl0rg>"7+T=!?"n$]'KiTd6Jhir(W=-R-/:$e8R][P;B+<>1%t@9G`9`90e5*?
%P,25KfQT3E!5+!QLQ<@9;]^U+:T1bBQkoE!Bjcq%g7CP_Ph5&+:V:gRMm0E5,!ogp`=I<I[O]9!SbE8d9cj;^KfoH0F.U%JD[MGt
%$Cc%l'H]uK_]:Xhlr?+]oM&b7Ji4##Rf^>cmF$\__5KnaEDp7SH"'oORf]0Vc#mGnR#@YO^jT.IXSiO.PPls\7T_6pn%oVj;`Tk)
%V-+b?#gM=(L"Og9]'@`9F8Q[E"(UFH.0ul/!t,.UJ2BPnOJrSXYZ7tPQN`].FZ"*-;^A]BVL:k?V?0]<Ko?F*EH$[/A07OP-PF"F
%nN)h3DGLq:[WLW(Pt(LFkQ11mCDWX`PX*UF;5]0nj41DBZO]>b5ea>ME.,LJZ+Ra[F+O:i)UUD+M\&c_Nu=/$0-in?0<fPB#=>%i
%X8\9f-Jor!/$'PU%$q?>"Tj#?>EHc'"U89>ek,Ho:RtRPpW=Z,RlM0^o:\Hd>/jVtNR>W__b?s#JD:<j88C:E.80iJ[#.h@K?r.E
%9+C8<@4O#BPf["IgQOs>/m%'W>V6H!6JteH5g*430rPdSf`qegWi29jEU^ckA2LYjUKra$@0(%6oQB-Q*6m<RJ@rA;GZs;WFFCjE
%\3l&LTfJ<D&RGKU(*&b+'_R!P6Hq;1R5h5bAMc+n$GQopZr0WpQ!d/"\;Mp;A0!C(#_^9$S:dN"WS1uZgetbpWS"GYM70LRA_7qZ
%_G`D1@:Q7D?IW/><PbN*fX*b5Mn80dC$@"i`WhW^!>"p1XGmrokYV%`W9Lsr%n9AHF(F6'?tqWZ;?HI4OB5qEqGL;jFQU:nf*W:L
%7ICXk3/!6eZ,mh*e)B&`fMnWFk6TeXn<G.#$`<QZ7CfSQ269UlP\7"mWaM^rVPs5>_B%mj*Qa$RNi#N06+uE'iMo-[>GUdc'5[(S
%@\.A,T='[@eGY(aCPK2eGe_<a0O;7G3%?sqVQh2!8.=,ReE/sDQ)\r,WWaKTa?C4g$'jaGif6^(9$Npd6Z\+2AOJa-1W;()Cb74D
%p.,;S>=-G8M7&P<_96V^<`dufMJQP8O@i^CP"EZnQT);@2_,#m$@nX^()1i9_,5grU'<_MidgFC]Eb)RA1@^A"aE"S(I;FT@2`i*
%WQsGWrPR"Y3Q,00bB1_c*i:QlmU:7:+Fh#J9N*N3YpdZpf1Khh&-V#r>Nac7$IK$k[bu@GBZmge935mP\3!go$J]?/.OrHNd(VD#
%s*7,M`&0unm2E&Y-@RL^024"T0=5i2_dosI5sH\Q.gf+qJo5M'06L2PLNqSo2#+!q;XV-EJ/YD_AumO'\&=p^bu].N@)dKghJbGp
%:kfAbW>R>RR"oe&Gq&*DLIqXoeEj!:Mb8D:*iIetLm]XknggT2kW@9V(e@TfT2\OqUE]ok=)sL5p`d/r$-[:+%Gm&(G[(O8;Kd?T
%#$(Hh4>H7Ce:B`8U$_$CBo#6?eZ6rN4Do"TS>hV_+)%.!#"b=qJP2lGVu?p0mS$g;48i.8RTi.\Fb_1FD<-.EY*bK7->OBC+SsHM
%<i%:$&<;RT>g;R?"F94aciSTo%;:@M#2%K`XuMSE]alYDn@jt#0o+P86@BD_/VHRp]LnSg3V7c4<W5>J&WZ?6E_;ZljFoUu^`,9b
%8F[:g!b$?f1FWlC8]^5[51l12Jq+@s'!O1Gi.oo-QQ=f\%ru1taKo^c/qh%Y2=WMrWQVMuYUe52b4^F'q#\%1#Fp7)A#sqS$qH$*
%%L,[9D8jO::AH3nr$(^=:,LM9abkl')MUR"+[1G\7udtj"'BNBknqhYB"Tg4SPML/0nUBHnKMFSN=QGT=q%M2;E,A:Wcg8EE^>:;
%)`hBK=n<?kJKsABFs/b8(pZ23Ge9?O@;Y0t^W7N3F1E>!j(MP7Z'St^C'pH27-]oP*u3m*4[6=jlqGbp`^2?AMF3HTQ%Z3gBk%4K
%&>Pn,.&)72Z\?f&fYF"+<SbH^2luphPDlFZ;5-734(a[IB3a)n\PY0fN!d7b!F(mj>MR_p#S2_0k_.tR^kGZWqp7k7]FCa6i?:T\
%:gUE+bhB<N);.pHel6dRa\^PNE:.0!:t?%=i`hKNN\"cHG)7R>>cE=pTIp=sd^GA]""Ws4h5ni=:ldU?9uqY3#Zl]j.aX8?9G1nb
%$#X3?q#^N<$j[`d#&/;"!6!+"jT74A\dnp>1n5WXc*PCS6]i^B'q$(!]FC`7/(I`_4J>>3pP9MnLf=FFM:*ZtL3BXE:YgO;W?$+i
%footRJc+a@V;lTQ;Sta/$7ZBbL8auLTr*d&1CIa>hGIZ;4^sTg8;+nj+1l.D_pRSRgm)/>C_QfeGfY!%WKb%jXAp#73Ai`[0r7.J
%&=PC''^KM4-(qZ"p>UVk'T18_2]o#bE"oAh'tcZg/65bm,ET"Y4H6.R`F]>VX$'`]q\VFTnB=t"56]&$e-4;di0V)G<<.hFAj@u_
%+483/"]Pa&J7;J()a7ZmHhPrT%T^,N=OLS[3J0(_Ot'_Vi6\o3r2$&32N<!<@BP<<lW@pnO9A`Pj`!M]XOT__,,E3g5I%0>/LOY&
%HgZ1NKuY'&TCbf%GbA;:pbs*hBdQ"Vlt^IKi?erK+H2nuC\K1.4$@LG0NU,E%EN"WJr]V@(5q^>!(^P,0NrGuE=HcTPi#k>\>\kA
%o-0^+NZ);b@7\W=<mJK;RcbT0W!"m9Ki#4?9&EtbYHVkho=^=AZ>:9o&Cm^&3G$jO7!p>&0bp%WnJJ]ORDpgkpR*AH\+kH3>,?fn
%5qDlsftq!bf^S$BTn/[OlV4:nS>b5c6&IV'WdssCP-'1!2[$DLlO%=Hqb3nn8=Mghq9i+]h)=hXO'ZW-2io[+l-2-OeJ(`M#O99)
%E%EsdW0\;9?O#daN)d:'Oa</`c.^7,H9GIT1?!VR?Au1MCSkF6Dcs9ISuEN7>-3+CW#).XjB:b(:bT[*m5-][7G;s[+;p"Pi>QPC
%1(iu<r:$:K*dnp)G=fgM1JR)a%NcAW0$/6cVV1PjjsTG"P%O_fF4$B&4B(^3SULUj?]K0DO1_Q6+n>H65u*)a1ofoh^&qY&mqWG+
%<S%$)[:)lI&G_Cph`9N-HusbO5<7XTaoSs_rEucuM/Iu/]A6k@rlG1*OrSG*6e5NtZMs01^r9nT,UT^N?M@O^J?tFjSInCEFm>Vd
%Qs35YqV\bid%X74W*p\4[kAaADuYT,]oZq/LG']#drJ-#>7$P]+0K`'Y#Y0Zj8WCi$Rm[>6dku,9FHs^c'OFN0I09JDto]Al1Ml.
%_k:T?SQ,gcl2Ke>irf;>>;%P;6`nM69k=gS[K*gHs!bJTLMcF6D%YH>pKi,p4l9_LK#/)h?mGeL?,?=A)fHW7c,'5TjeF=DM6$M$
%s.A4g>`D`E+7@1H>e)035;qUf2W[-gMA+>u;-!;`ATMf.VR4UHAF]seHjj'71cX3MoDQj&=#)<+@<2ZaF8N1.=(QHO,R)';5CDl@
%F`)=cLX]pX'`7du3M.5Bl=bpH*+$f07l,0,*DOiT$-Ph?1.;0$F9giJqlj:+AossYg^Wf6+$TE0T3K=uLuKCUm!S;(n@<CTR2n3J
%d,jbQYS*IY(#D>e^<b3,1$\ECXSaPcbrR27,Oq9QEE-d3A/LCPKa$;R,PH.(MP#]=+&K/"e1MV+1GkD4U\`b\P,q*h+^neU<+1#-
%_9b;[\q;2Jb?32qG-'/4g2p%YMq1h0UYq_/eCG4,SsL5T4B<=ea`f83%U(:%gKBB(:d9b.LD$puats9f:r];]2&<V`P6t/c8>I'Y
%c-unt<i-(TC:0=5N&jG<e`WH4e:dhoKZ$$LBNRN%,g4>Lim-,`Qmc--6cSdiOBS^j.VW!LJV9QQ1M-c;#OWN$<D;i<A:a3qEpeT-
%1n5.=h%<kOeP)p4Pq<@q9`Wf]\S0-ZCcVo1=]sRDZ)gCI,uJV<R8aT+)%.iA6&cas4->0<]7D$Blq+#.YtWIf0u5Sc1GFBT1<k7f
%7ZJjR'"=0iiYFtc[ENj=DEEs^1S1.5B-NW@!VY/h,..PK5dL8TUp@O]%7]Tkn_0*m`fdDWP3u1cU`&\NA(?@<'?pUo1"N/WFEJp.
%oRel%2*One4SeR;3)Z`[)Rc@WLt"iIg9iRFWLU%jB/1.":s2<TY5:ng"t2BSp*,b?<WpB&;Q5KQ+CQGc8>QM24.R.iG:J;.&"0U/
%1hojS8P#5*7SQ='E#D6sYT4mdBd?PSg!hd<,RSUJWLPbub1CG42HX(W:fJlVT'i"7Odh`k/Rg&('MoD,?lOt!ec]t<;5=mN9l1i+
%k#UZS8>80pEU.<(L2@!9#29=r'6CX9P9U$JNFefP!Er\#94cjYjlCs=Asi\CS82.RBT!A"njmYBeg+f7/0A\^elX<@EcN6EEG/?/
%_*`394DR,_,7g_poRXBJ+"*WbX3,cJ1Q,^`jkM77pX(8"e?L2)FldQD=^]hmLRWGJV:CHdTshR['5*61gBP_"N)c4[b`U4US/.S-
%HWZ[r9P3#dc3[-RiN6K/mlK1+=`hO=R-+BWk.TLrLG`EZNR:j\@i`rnF40o*ipKq.C]TZga/l.;g?l[ui\?@nDoAsKd,\W"JSug"
%`@btkJ`iEb@.Qi*8"fLaD5.Msn1:!HZr%#e+9kMNhC)m@!U/N,))EKaoR4TAReJf/P5u:%h_B!^3(gf.g*SgD5T(uf2Aq`gd!f0N
%-?(u1;"HTe)JceP]M!uJjLQ&C/t'd=/n*N]'8*am*d.kV<Un3JG0.\PJ6\sG>-\lm0,stSeHn3V6!IsjFPcIi=4B"MW;'X6j]S!f
%Qq,AF!f^#p;h-o.()#<;!pu@?.GD$JoE/@Y?CIl]A=4i0o>-D&!_CmXdWSVASa0"KZYe,QHk"!7L($.5Hafa.Z,HGf_[lu1+S[BK
%k6oZH/)/&=THR)\j4#aADDpt#CQO@48k'\U>5or8Bn7!=;+aX(Xr6O3O@"fm.GCVSAaVr@e1WS7"2#+#56@GG;BkD3FC#GcDRX]K
%I*GiZW?NlDcG_gOBTpsaTa"Bk(]jENnFdlcL,/n\QL0Piq]QD!+$rWIjcgn#.j9%_<QLUT.MfK'p`>P_!r*D,WYWrqM%#Z'^<$)X
%5g=1@H7EZAC2/&>H8;^0)eo-sLmBcrZ?TV#C^hM1josRWC7hK,A=qG%$.U+49YdrD_@pKZgFpFBM)qHDG=\]5)\_=![<1$Y1,2Is
%[4&G&A7I1h7=dLZS!$Gq#:AGfg+B`VG7hhh[^oU)XLX^*%ZK\QDb1V,+(YoS5Rokl0L\uX(%)WDV2;D0lB?9;Z/&Zm15=?#XJA5@
%$12+jHqbYZ)=qUP&R!P*0h3q5dRp[0!\L>$XL6p;eZ6657d$1u"MMs/S7thu_u;Y%2Y`H@Xs;IiG%.QVi):qP9aadjbarPh;nE^!
%P<#O%kmL\QN!Q#a.WI&0ae22<>+2"VHkI9[jm8i;7Ei3fJ9S5O<48"#W\TL6Q;V\U>Eu^a<4+Zs79<Y_[:UGSNAi?rn3iua>1@6i
%Wu.jMb3%HF>@=ih\,i(O=\%ZbG$/9gR22sQ+<t,#dJ7&'KulPp<YB\N_@d9!D/':XRn685@tX_aTPJ67R/hFe>oTFh''jA2CRRiE
%m2,!?TW"\V5LQr*U,d#2LURA`[BNJC,]#h50jdGfL94p;@N0L-2F-mW#@ATj%(fF)8D;/`oX#'>dMB0^iEV>;%E67>EG;.`6d-!;
%qafRQAHD-ANoVcY?GTJTl.`FRQ7k%B)q<NLSrTAU0rC=U$hQ#3Q3.'3":j6<C)aF7^g[#;MS)44YRqh/a@+rgpZ-0/$/>L^bA+q]
%J\\P.Z)0W]\7%>l>Xo,[fVtfK5>\lW(&e;p0+kkCRh9#[!beJ$-'WeQeR!?5./X_u53uTILB9^CLb;.b!UsTW@Lq%H:toAH$+59l
%YQSh!*4=ZA4Wpi7f;Zgldn>8?lI_9BA4=l(Qm#38&LC=^%-/mR=Yin>.h,H+f*^u'nuuY_51QEDK6DPFo;<e:F';(nC;<CjfU`ad
%S?QPuS"</@`]E0o.J1U?e<^h<]_4qTau+l,BK$SS0M61aGDklI1)>1O.#ut;RIG%GXi$9Y)M+*[s-2,9/ni:VqJ[4_3^o:im!<:S
%%=UUnjs;h[Do+Hk12HbS-l-3(I7*'01Sq'aoao0NqMA:^,"tiJdGoid!.2e5GZEZ1aja03PX?HGVDRLCJr+ES[jSa"TU7"SM/c30
%Sf"e"X,AM:Z*NA18*u8?jQ$8uJ.>+]lEbFtn^2qKMa1aP9Wt"W+X&8(a:/j.;g;[:LR=&eCf\\YEI_%uh7JW"#4iFj2J,fq#3Ko\
%rt`2tUX8;QYoCNfpAdW+L=UXr<3i0fhu9684BU?FO'.W;KBkcN5W$&AjN,]+NPe.,>gl?4Rj;6?<BHAj>"^[d^meT__C/&on/a%/
%TN=&4-=Cnqjb(1'<foE7BPVVu*IDo.49<#A"_qZti(GQHquhe*<KE"I9--iEG@a[7c;6bGAD7q;Clc;]U'k'dU@\reTimM\!,GN_
%GG2C<.+A7?!3#NjUWN<F!kkCcGLIRiJ.8d9T!^'T0gY/\/2lT.$+2b0@Z*fpck+^$WD.0NBC,hQAC88k_1TWADom587]:X4dlpB/
%46#HkI(J`_Ls;9E:^/XVaL'[L"4b`Gk6l"!V@c'@MJq9UiUo4)TEq^D.-J>Lq#CkT'o7qI/!2\\p(8qGg0gu6EgXFr,6(Nj%18tA
%dEO!ro`_p\odX.OH@"KbFH+3?R'r#PZW["q^DZqMfdb`B2-[l.M#j[O*_9ob3.-@FK\6/K2[@gi[K<+XnTnGJ3J>af2)Bjt4($Q5
%YL:*)Mk>R;#M#1PqAHN^I0[l1T<\!!8#mZ>fQ%VE)7eU5;k'KhO(9A"gk%*p65,$^jG/%b!8l/WG08LEc-\;-_@VZ@\m+e[Uk?IX
%NN^l/Y#D^.2Un9F<^k\hV:\r<4NpTka4e.NpH7_l&*Mp;R%J%bM[I_tmR,fGd(XP7Eh:PR`#\I+gij@RjfPY3^HXne4qL&E^r71s
%)VS[;1L\MU.mCXjp[Wqu$[IS=$I3bLp&l?8-#[Tm)OiBd8>Xu3`Eta<p#sNmlK))j!ZnO5Uk3Brqs/THb$OD?]k1kKXI?:oSlU!D
%DEp0aKnp1Y^+9e#:`Ll?R9+20D0r__LE=!*RuP1%jQ9<:("cWX0##h=)`P./JaE81ca2!FoPeAlk!LR^5B._`O5)i)P83TditK+)
%1ofNjI7RY(doXgrcEiq2\7=BFc&k@((H?:2?T`?mY&NOs>+iXobT1$:)57p%>BDiI_rrA3%,=G>*1t.c*1mRZZ68Dm>?[eqiDPeF
%dEuWs+$#Aka)2`bjO3P98U_+%+%>#TSb&]LI-*reR/();lG@S=s!OC"A.rtUrfM@'H!(C0[:8SUS@WufP"^V@7LC9k-.kKXUTcQ@
%ha*@^q,0V3e3>rXEZQ/qh)m`TVW!Aq#TI)69"X%Dk=b"6b`CO6o=n,UAcLAP\rcn'G=RriN*oP6-(^WQj5<7C[)@ULW$O2DXW`e;
%m^2Jd#4(n<Je4,8IG'WQ4`lL$0[b``9;LuXU,tm<N\U#*o+q^/ljDZU<3U7EHE^"-/E&usptRX[MaPDS!QN%13^jM\9/_ap5&%)_
%Y#<n5\jpcK)?Tomp_J^.3QkhaEej$inSC5(`l^^P3(^j5WOE2E%Z+=!XsHO^?5jN.(P,dDB6Xl2&4e-I/FAO&;J=*.>\B[Ao^RGn
%bd4Jb6GOKW"H90g5h^u&j'$CR)f;a;`#f%;_n5&WfG*-CCb!+uA@:]!gXJ[C?7YL``?<p@ACI+l<LO)1e!R-A'Q9XqK,eW]4[`Hs
%,@-U0//Y`amu$7\FJs_b'9``UM2U+59PfrLbc0d8&.*!H@?jnA1I,\SJY-kO88O+AnVQJ6`tfaoSR,u^?'t-H;&BGN,#[<cmXb?p
%$+Xp.k_tT:7k:m$lPb+r6JYc<87;L'/WsN&<dYrREg([0_PeimUO.`_6&G>NVOan^1V9')'=]T,Z.a81.t#&R4(R7\Y+BFE'L=#0
%GW96mncbQqSMQ?QOFMo.Y8.@8RsHFS"sWmYRA+Q(!\P])?kHrXVM,n5?'B=,*k&G+"5:#>#',*Y:!`;2nKEIX0?c_]bbLRE'@WhT
%6'meZ(*^jKO^gpD&Gb0m6QI^KhSs.Oc2g=[Ml[m"[H"%or>\8a5,X]3604=)<c-lrm4gE':297+#n5Xcc06gAr=$U28AIP=J;p\I
%i^BiW%V^cS'/9r&IO@k!N6[tNHs\=_i4Bt?>T_',RS88b(--0V8VS7Rl@nqh)02;9DdOG55JmfOq9Q4OH,rIc&CXA_fmst!9L9[L
%/Kg]0<tXCRkj/0$](X4qBII;[[;?-[!b#Ir^+H]]3:,J<,UW5@6[De4mCe<(H"OmtgSScl=M-0.<^B)$1fFA_1HTcSGC?HJ%1Us3
%Z"@J";B,kEl-;qQi1HD:Jc^pr\ZG.DP8'9*`<Kn7)&&9V95FFW/;o9_2AHa^3n8A]KgNp'()sLka#5:N6j$A.rlU*"5l!hkIe#p*
%3s%tNE$VpY@?*mG>8pVI('U3t5b]07;[o0AK3M3%CLZV(KDmI$bD8!Z4H;';.tIsH).>st5hQZRBnPsY;DF1=Yf\D-K$"Eo>PfR?
%4L4b`njq,0F?+:<=V&]aP<h,>RNeOcRSfE,,f\DFKcOcP3CV;<6S_iPjg"%<E\t-h#f3L>V.qAVHFeH5=0&_V8[g@Iq2R=gGV](-
%*FQ8f!u]'M_aRKqjBd!ZU'+"aHR^11Ol:[A)eT,SabI*0o\Bf^Pu?K7@7s5>^m8q5,gjfeQDo`A/WZlk_p?V_=\P,LhBUGa&L1On
%UPY@@3<AbVQ;[o_*oQ4jBKuscKS0ViJoQWN;mpg*%q3cn/PQi>;O]XR0Te4DWO=f(Nd)".Eh3kViL1/UO[E#a8FKT>:Iqah9J\$C
%W<ZJI+g2mu)lmQ&D&k%#UidALBP/Dd=[].Dm3%V;VB3fV)o^]&8slM/=<)ru,0c:FG=$r?T.FGT'6JY\%D[SSH<X+6,R"BHpK:"m
%//H]r-lKK^CG;ArMegkoXq&"EWWcPS8uD`R_bp@u$B1t7G-LXu\jk`jmV?[qI8H/+"09e1"t&5`A'_(sC46M)\j1c/(Q>:j,R5)"
%(dT$Id&s_B,J*Q2)N&Bc5t3r_T`fuW;:'M"B_].2"CDE%1(?]\cR-(P79:;+*P'SX4L;pG6ku1BR[3o-dN>?[4U3M\g44P;NCR0q
%BP#GYqUhNfZ=oN1JO,L,=9o(;7/BA!:[tG6iAbRb8q%,qVa7oJ'q*.lcKfLdc7ms7K/%%_F3E<..8P\4#S'1cS9=J=EmSj.QMR:!
%$<fmL:=G$P.F'F>2$q0`G=;+ABU@)!FMuZjYD*`JPD>SY1)$A45ek)@6kEODI-=>IlE)m!!j!9;7)odB>>%P-c^GmtkmNh_3M+7g
%qb3j2)9o.pYA@MA-r-RuUuuR91Bp`I^g6i9:SdF2cjGP0Nh47n*3-p/q>s@rEa)IZaT,old$kO1*Q5M;C9(+qOQB//>9J)i^f+m5
%W1Bn$Q"87`SZ.a;eVOCA6_\lk&j.t!$ENPT`A;4^D>6S`7lHhtr$RqWJD.HFhQ7I)P>+hVf$oN4Z.7UY`48`.-_0QhokY_1;`.H9
%$r?$/bZ%Ba-Q?Ge<"H[D13Ir:H47*TA#=QCG<NJMe\b8sR9@!r4VDT@$Xb?^8!K.,.0d)5]$,oR$Y5;l3sq3_1t`6a+XPn,5"u@L
%V,_km_J(-//Z$W,e?Xos<297"LA0A>h6sC$lI,;R\CPGWeQBm.[qte9>OhmN.oV'jgN)]$'f@e8r'QtEe>-sCZ*psG%&X?TbGUUG
%>+8rt4i940H4$oM><7F)C56A@2"+usD=\nPJ"A_2-U%;f>4r#lIj5("9P7[GAqGJU>;T*@BV@.V%&:/HKSbY.qN`[jMIfG,ENM":
%\0b1;!q.rt[;,]FjTMU;9(H6;6o+R7;MTuBJ>0Ra':<3r"E_k?U']pO.im\a+`#%l@-^KbJDpK$[uZrMR[<81gH3-R3uj:!"6Bq-
%):],![I5UXfZXOb66pAa"X6e-lduuR.CE8)RVT,]Zj6p$0eEFGM<kXC<Ya1j]/rIJ-#R\ebq5AB6:2FRmWbF<?)Lt4nqk&toAPme
%@VCb5OoHKA!n?J0$A=OB["^rq-;oFfY5MHFTo-.\Zt^cP.Z@3`iNpn#DBsT3Frs;qVK^s.7Q6p[bc5sPRD.C7@nXP?D*AmP=L]/D
%@"KXJZ3]q*Y_\>8mM+u8qS?l%>t/TT>0>KGAZLR50=E&m[bFRO&P[2=%5qpo#'>)miWOSY]Sr[G37S-kZj*9.7iQbT.lA=l7W"1N
%[2kj80:t^kd<>$*;upnYO@4WW\BHCrWBk96a<s;i9M7Mko\-+4ILb,\n]e%i/,7lOb(^j6`Ve*>K`U:Cl<<#PMTo%8raC_L<,@<Y
%-)5eeg;@&-GmkHs?s.3*#'qGfVKk@r%\>9.&NDP)Fp/gSd1m!?*'e:7>?<`S*Yloa"_\""\S+U5[eOrIJn^J:poJb>^N<C3LGfL!
%$U#cua0?`kr1^rK)ShpBgZGR!#u&\!3Rb_i3eP\43WG_2c=E.bS%V.OIqid(V@(rQ`Nbih1b&9>':WE#Bq@(5L,2uH02=6,HmNuq
%W"eBTXuAd,Y'J%>:6^E52,\IE*-A:f)7so-FY:,fS>d+O4N'T&S%j3^:_$+"-'"%UL\bf@!UZXg_j84#fGIdoeaVEZKR;kmS1gD0
%et9B\Z@C+J_\n5[rK!R+X"3pGSMP&'eQ7QXd[p7rS[0Zm%Vq[fECCOOe+T/i#_'XD!^`j6&VYjJMPF]p^K`@<L?(kQ5Dko^(L%p=
%5Y?PH.Re]1)`:]B7'%_\;_rW:FeIEgQ<QZ-ZWeGFS9FS"r(g%/qUQ#^K5CAm:V5hT:*"b![0[4fVcS=_2uicJ._lUteCIPfV$#``
%@S:EhLM?sB124=9EK$H/4d"o<<J*jVcHe30M?<J/)q:HGe.8Im0rS1:!I>mpl7lP^M@%k;:J[F7qCA'(UQ$16@#*X85E&2j@W9dH
%Via\ZSS%+\f?N2;4`':Ls$@GD02JD=1RT'G+J?dSAP,9i94V$K@6'hSMj+?WK.7+H5\!N'%S*$8ire9F>!J96kK7Ns/&r"!CYci6
%Rn'$u3ZfV3;;dWseV'St$ju&N&+P_r-m`T?0Jnj0r3U0K4Cn%+3nM3[2Eshj36$0N&\87GDsN`!e*>953Rb`65<rkn>tF?Y4^s4I
%mrGf8?:PF3m(5!Gs(_K4DFlEt"m77V_L9\GBXRLSd9Cj+i2_iD"5Oi(k*[R>AF#`D95$JukX%mJc#acdb#?-ZY<[`Vjr&'Y;a=H@
%."L+K/X,Mbi;>uB%L'O:E-#*$'?$ID+gU$eLMY:CrFm6[mZkF'?>^^F%QXm5KV0mPr+N0l&jl4;[#)"j7S=%HdGD3TB(=.J%MEhM
%/cq[dckR`C3I2/X/?RJ3qV=5b<'bXrD)8D<ODG4S.cM%$Qk[Oi0NJ]rGb_r)';FnQfJV`?1<KTh&.EA#MBZ\m[l#LtHL"s$]V=s2
%/dBl]-CQlb;*%FX6&-F,-QuN(>*1X,jr*2IM0)E0rLasRa/UY&6\f_@i9%PO:'43=(0&5Y^)t^,:jfja+c\Ne[158b-5mF6S$iIp
%CRWd/mKq\+FDK3l!]=)d)>^L$5t,MLijM,6X[E;^p;ItN*Z'!SXhF&[f!nm?Kk&sZ)OYQuc.bVC]V=6,qZ@))!XVO>KE]`FeS0dY
%i<Dhh_\PO5GtT-_^.2<&&r<.#$L<f*Q>FTJ''K>J@MsE@O`>O&<&hC,'O)PX,O7j;j?2?&8"XeL*u]jjOX:8:Q&l3&'9(=t*EePM
%p.Q]%M?AL@Ot['!V]o4I[`28R@8oW$dd0:<!o-62G_=c.Y*R#T\KUQQ=YS,r!G;j0pX'<0f&U-ASJjaAq.@8PM&f7r!/L+S=TohN
%O\R@t8_i?KoEpX=(V)R"2><lBU4M)VY!u5Sq.d:[jY9*fEFp%2JOL0ccs!q-Oqu=L^GWDM^_C!l0HaF'$8ZrQ,C/W]ls75a;%//d
%";!gb_@<2@j[i!<8Nk$$,><>Z*b>dc.-S2.JH16hWN;.6MVt8o"Xt"f9^[V96)cU30A`$0(_'mS_GUDT1BT<i)_Hp0#jT+nYfqc.
%K#bG3Jet2ODW0Rhpp\eANP<8?$5fj6`/W!m0l7FG%RfhlAIXR;!mp7pd/t*3_CQ86Mh(icBsiZi!fN`5?CYVCg=(Z$^_XXT_s/Nr
%ODb/!V:VbqbDsM^4h"1h%k'A,2A).b0N#k1O;?QjqH2!@7c/#ohdR>BB8NBULf%;(+(\;AYNSJ]h\?;h//&VG$k\0tC*UVJ+DSo*
%ShHl24eoROM4AF]8);R:Do@W&LCo&&UlfJ6mALKFAKdc-0OUJ<U"@Xl]]iBTF$.l+LkHkrPZkFe#D2*GA^A$/Q$[M_D%S\UQ\=i`
%JK(A#<%)TAW]>3nPQ4-;AmH%T+15U`-6aQqWJ<kQLMJ^H^r4:ri\E6Ud>9rpIR#`J33^$$nh:7I_2ZF@"!S*cai^#&+Q%q1glYQk
%\$q_O4AhIQ(Q/nj_e!;B2?U%lkIc[SSGWp/S7KW1a?bo??8Rb&ZU,@BgrhZ;+[D<R3CRFkH#kh0E#E^g$]lTJ:OKt#4CdfNaShb_
%.719,30\`2A'42k1LkFf$.jH;Xak5>Jlh;L/#o(jM^f6?_T/6flb&.8$d^!(@l%IgQ(NFV8)Fi+Tqh=t?#`[uahb"-Cebs+K$JZ_
%,c$TB(b1))>-9H6,ZMbVOd2ogce3DG%p10SXD78.+;/j/(#a4lK:7Q33Yif(onBtFW/<#,>DWW#(^[']D-P*5l&?2+Nq,"@Q"].k
%4q_<CkGOWIK&6TS:p/4,AeBmHZDjTrT=7R.J5G_Na#m'.9V-?XN+9nh"e$Kse/aIUVnTX#_r8cG/GO/41Ba/XgT<'To#;icA_.,A
%9=ot8r[_gR$Je)-RmY!g#eOCUO(l'N/p%W7E;T1CXf"t'YPsI7LOB$hdJ[9Rqs5B0hm]#+]Zgk3Ap8#*[Ch474t*3#_^LO_O0mY:
%DsJXRh\GVc=TN`.S#/(fi(-!)/%#uBmt?^sO%=u\`&(t6[(ol_H\'..mKkZ[Y+[GI\QV-.O<r#EH'+k%]6`Nbf>07W2PJPa.mot(
%=Y`d?7'Mi`1ik]V,p:-U@"PfUAu_n7Yt-BaXI7$H@:*[_4Sk0#ghmO[(Sa$A^.jV#*>hB(RSJWCaP^0i%ZFK>!1fEkD5mf]">if(
%2W#8T'iQ.]&E!p]%Oa*)YY5(R`]G")J!.A2g2VF?k.W%7=CCR/0o@!qh<fBO%aNj2CA%D;cJ3X2h6]7b?VQ7cbe:$kq1".0ULq!2
%?"MgKJ@Y,Lg[/4E:.cqbJd#?2Os%>@kZfoYOp]O0o:He69;r*mIVq-QD"GRRC]kb0lNp^6MJPgcNeuGN87qA9`<SgnZF_M`LmS[/
%o)55tHK!QaYl)h6^MBl=.(h"F7f"`qeeVh$4<:!`ho+@XEN1pcP([Ih"rO-F+WXq6`#5*O._7J,Tcj0C,#A?WclgD&"7_*08#)(^
%&f/_</0kLbl%th+oiDa"M:WoYM#g/c@j69r0P;<'+:2V\m+q^Q48[LZaA+2&1aL:k"8P?o/7os0QJEeG7V#]dE/Mpk^o4,A4*ACu
%i'sc4BT[#*7"'X(0*E''HEDs+VjflWh22]1dEI/2_%`U<UJ4oA_lV[GP[kY!97W&WN[=o*WI4uPQo2r87GS8IH5/7T\Yp;+O`rrc
%e(,;@$7OQE(k(k/=NRQY\;se6NS%4*'9VTMlO#-lj[jh][eFGinPB;>_e5o;$!K&$n?M?B^aq>=\l$,(D!c4_=\5H_q$B:g"aO<s
%oJAJD]H@noEJD7rL>fe*Q9)*7ZW)fC'Khp8HG#>TWk%n))tGWYe2bc7KFC+k^m.F>q'tZEb:-+J<\PR7A4X$b4eVZe16OV:U^?qT
%+,R.:)&"=Cd$P<!9=6fq<3L)d-LJJmgP)Y2/\MD@&9^u+#%tJbIN=_:ZRQ@p%>>iSFIRmD04R<61"eEZ\/L)_jJtC03tCN2Xi](=
%6lu^N"YpHIBZZE9pT-daV=sRJ#u@q1faUQ,I:As(38Q4piSdP-YDg`/=?267Bhb1[bc#F0E#:LOCM3#HghPDUnNgpu6m'?g?5h@p
%^iCcr:2#h"%GW+UTWW)`89#&CaW@\bQ:D%;`6]]m;fm]PQ,"1i>12K=l%hcr^LueKA6UihkcscP).o!2kcIQU!+LOgq%Kc?.[`C+
%f\*2G7c2_^JDsN0i^`'4RFW++Yp7FLENW=!"Cgi^hJ=^)YYfS4(g__o0t#_9%'qFP,u<5[,QPEJ!E5M4hP>90Tlhsq:7Jk4/LT<i
%PkC`L:0tKDM*`mU*WZD,YuCCdUr][G*FggiRR<ss_7;IQJ:Kmrgd@qBnRc2u773,9l@Cll4WE<5'&lXG[Dk$g@$iKujen3fi)%?Q
%&9U4[R2"&'Ji2HfLPD4KiDR%%'in5*kX%r2Qum7L,;1SgP@7=#KOkiqj7GW[+dTqj<q`2V0X=tb`*#JO]#Ds1CQV`H0g2tS45[ru
%"pG>V_T6$i>1m'ZA"k0lq%d."a!Y"$e3cMQS(%N!U+isK"p<D0Fb<,fok!O=#&QLCMi)0`(ES>tMdF(t7U,X6=a)Kr6G=*QP%.7b
%Ssn\BV%c=5X)'>[<f8AeOsOic)7HdYcW.(^0'[iFh&-ORb.4_\T]m6lj,ka+n-;-+k;G1YBG##r?4X:a;J>]#X-#KTo3!B]3<G>2
%WrYa&p;blj:9lN&q6O)bDBC0SEr7M!Yp)LY@j@^C17Vj58IXcUofOB_i64D6E'/2BfbkH;*%8V;hcOkO!d35Gb5s\TYsFDDTq[jh
%<:(OD;3iHM(^p#LAhD*bZZ>'LgiL,a5TjUkn4^0p"()1)#O@dd_FK4J^uoA3EhR?XONg$m=PaO(.Uk1VSKY7l"42N:Imu1Hcqu>K
%&RnOL?u`0?VZ[jX8c,`sF,KVnZHs;Md+Y)]j/q10eO?ds`(921=,c,U=VNDeD1>`X,j$:T7`Q-n3pgM^-7Km3DX&C3>oRQ6qZK'&
%QgN.k^(:W60ecYjXH=,A[sd@`@4@\*X_C7VZQ>5N)9]]V@;N25XZW[/?C4]DC`T1B=Qg*\DN2tS>8VB$Q[DGd8J?ICAn"593JWP:
%XK>Lr$.oP``)A$K"RA_`mXZR"Pjr;9:n&^%2j]+S`+'3Z`fap9aMo,U-$VL$W@RR?.]Tq]k-79Ma;EpQ.J8bb(mLgf1k;n4l\!\&
%M(0U0@%f/cHWZf=b]Ik`$m[W*d81df90s(=@,8qF("43rMa]r+Z;#X2HAbmneu]q]3YJJ(m1Tpj'!\dDZ)rPd2)M*d-L1kjm6\k6
%cYQn>KSB$2XVZ!@+mHd?WCj=gO(Lfr52Tn<;h>?Yj&8m.O9$#1l^m/CWIhCl_KqH1;5WTIap*dF0e,Xi=BkLp0C2H$D6g4C0L46t
%XE$\s`LmKo:p)W:*QsYnf?Q^oBP<E-VH-:0I$S$kndsj##-,hCU!l*3BV>q!8qU&TbK8$&I^K[="p[/*bM3*DRWj9.`/;`M1,%J_
%q0O_))n1?*<aVIq'K0SE=`b&Rhf#i%N%;a`5We##;=c,3(o.O6T3\iA0PO9"j`i:E759uAY_R\E30lC,R9Hi#!j-gTSLQ$^i1Pmk
%l3;K;Z#+i^X%e:\UF,ANKdMo#XY$$k$esJsi8C\cE"CuJEj\JB`s`F%M6MrsWY;*`8&#M7jX1s.>V,piH.LaQZ(4:dmF+TSN'su[
%!^.NLBkYd@a6&`beE/tt3-0BmMDj4.kf#kQQLBee[B4.)a0rCt_C35;\37qG`ZLd.UkJ93d*:8Q]V=1u[5G2F:G%_8e@0L)HMXe#
%kWhj8$nJHH(MQcL3A!k8AM(=YNE,?;6[3h>Msc.[UL"@eSB85'kl7<K<N,nP'?VLmY!!>8.GG1mC\uRr?;UoB)G)kPNC>c\dk:<D
%i%Me;"baPT".gU*l]5'J;l!u?k]XJn:1f=cU4PAoEAoP6KbD[LUT]k6(1aEn/j`rd`>\,qa@>!!DoU!G2&C:++@Yr]=Hl7kLt<HL
%))8+nR,2HeJ15/GZe=tn6Kf#T9q0lAB$`7o"ZBc<&bV@(e\Vg-HF%D$+ZO)te$-nVZ^O&9>':LufLR^s,u1fm2B%8c8Nih&g-_Ro
%(;4(bbJ?8/ocY3Jj-M+jT_Ofnc7u1K/A.Ke\Bim*WgD])g%pc<MDcZ1@``NLoJ73TC\Pp'LooPE4\V,9k.XM)&*g8`@G$:`cB`1q
%X='YWPZ\u#mrX&C_Pm)?>6u>5@T2VI5?5VK<R4^g0EU3IJ&k)LS'/pSe\`Q^<I<-R_4eEbd/\rp/VD)HQAn2X7@,fRNKc5ES:.B=
%NW&3`#2H!t:s%p?-MV%J7$R+YL47Ie^qo@'fuc$epH!YuaL]d`%!tM'*Z(?l_!k:L\-8cd;#%Cf@WsiM"LD?m"d_"N]6,$_>gBQU
%>$%TCjm8lZh$'GBr;EtJ)=B3O"jT;E,50^HO`9kO"1Bk'8HuZ1!=Dg!gYL-b4N]Li1ND,lD"+bupfVeK:rJ(o9kH\dL!^_($jk2^
%Ud)i+6ujO.l:=br\gR+:PYkG2deGMAbVZF/'SR3V@u1,CN,To,?b.Tc[A<.,LR0;_T*=LLl*Y,uncg]RLS&'>"X)p*/1t3OY,(c!
%a5K?TDA@FKT]@JB%_]0XL0^..>Xdh3<H(jG+Hc9qXK<RK'Ih6HZLm?$Dq^EH;su)K"//Qs!#p*B*XmnhLR1AI+pc_'`Ij!q!iBHP
%G'jgnFg8r<@kAILAHVf.ZZ`;o3]Po(0c.OO'6sboXjA#GS$`hX@M82$D75p>clQF\I;q"X)TES>F]Es">->7+1:;ulcu'ZbU/),H
%A6&R@VR7WPE`pcpRO0nB_;'#5/-mFucU&V1SQutROC)meCOt>5^gJ=W&BAMjPlo*=CX?Q63qZBr,IMCH8X?fk(fe(<TP\6N1Dbh6
%QFW#e,o9*^h\qr7YsA4SIPcRca=Q)Wn3W^&*JNsfhXKhm%Ni]<_h^VO<hZi7UY;=T@gt$q0n@PD;#98nJZ&u691D>]8Kk#UgL%R9
%>i65=f%N.b66443F\J8Zid?VYhk'+ZY;Al2P17lI:2J%2g@Tq!Co<8Jo]$e%!,U)\D7hU#19Z8Y2Ho[9[%o"tp5hT;erL\NV`_e#
%\Rm\8B!L`8E)eb\]]fRFb"k>M0gi=iQCTC8:Nn,%TCO!Q].8phVqp$,Kd4/P]_p[i-"u!a*:5;FlRku:&=CoWjU>h9X".X^CQTsh
%:b%%A#g):uX\K+t1.COm1j^64nQKUrJ3Lbab9).L:M\8g5L^`(06n^4hP6[)r)0U?(+GppXsLi)"RH7'[+tGr0>U%a+h$JuHpm#K
%E`NGuWlp$RATg$JH?HHCPgRE=QcV(g:f(5km*s`=GX<*j]ooqgceF]o-6?6o@C1?&fgu>[0!mgN+CfR9,b$*O&@kEn+BWJT_7'bm
%>hT:I5u1fs[6bP:J&V/g?Mh>GMME4u0ih/V.A@)mgWk+ZHEU7IfBO6\g=of&g*)NB/Qh:O5R-p./7Ao"s%p\X^cWa?gW=1WXqYqe
%@)V)0`p7`Cb_C/LVO&mp[!bN:p4Gm'*e_nGc/6uUJ]9Ne>ZM?p*A"Dnn50[Gd3Z:A!POamCSM=7<RjjG2#X9)[+,5OF\?]Ld,[#(
%PIM6^l]gPMpK\$\+:2%X!l-`hSUOL<0*B':ZlhmiQ!!soP^k(&7$,]hZ#(C,"L4QF>2_Q:2]^%sBXUY(:Ja$-MW'X$OdsE@WgY>,
%40^C2dWu`kVtcW2GTn5:]dfa\dja=Ii:]Nn=,o"3`d(H=/mHZ8o.pCg>#SV8SLk>PE)M.jJZlBTP%"!jDQ*ms)V_tFcj+mX&=6(T
%`'@1.S6ZLM_$402?=uW^guYT@Z./ZdKT\u4$m7s7f#*c'TY+7[(kclthZ9=d(jM'OXA6S/YpoV_Z?6$7Tm0Q$/TAB\:$cXsgT5fQ
%(rD04SM\#<*O@]PFeT,T=q*8seC!ji4bu)1*6Y@2)X]7LCZgj%dAHl%P%nPIGH3+D/ZEpT>C%3`=&7V0PA37Lp\N]d(_<!5CCj5?
%Im'bHh;J!p<4h]Q;c9_`L)o(!s!(+C,pQ0C'TBeF;XNfQB^)mZpB3m_lIndRoE6;RS5aj)496:7rjgDiJDk7ra*)J,0L/>;cKkqs
%=Nk?G07Zhu7;_T!7%/T6d7q=Tk0dtnA+Tq43"fG.nc^-KY3tc#(P!\%F>!=iO<itql1sBK^mLjKccuOOc/bT7qVVd<^,7&OS,p^u
%Ze<iFh>dtjJ^`Nd5e7WHr!VA38/1Yn7W1O##RRK`5Bm8Sg^0p7*P;CbD3V]<Mr"GAUpFZ_n-3:%9>SF`+Nkq*N%Sf<"opX<Qs@(F
%"(LV'rRi.*0s=5-GQX$tOLiJ%SH0Sm*?YT2!/=]=nDk(8oF4e^\c\>WUnQVl*IqQ3WNJq_J-b>"l6)9T+O]hiA^MS2kp::doESdq
%>LrE0&6Nsl?Bip*N(ZZY%/ecg!@6E"?'<SYJ7D57M+*1"nj$([G+1jL)(2<QK?5@BjOnm+"<t07bb9OgNn>KT*Y:3k0KK?PE5WO;
%UI0ReVQ'`6n-FQY3cTA)!1qp>kNEQ:V88MG,s[2pI,*is!$rHSBhg8]Ya39u#+#<FKX10'aX$qA6S+]1O$JBi;dVD-">H^P8.-I>
%2J$8-EV9[r(`)csNue>m!DfbBnd$f*%20Q*d/2l;=Mf#<D[N?;d3l/Oj6<p=?DoS6Gm0LQgqKeJMg))7&d!</;aBI[duc]rO4Yn3
%Bdl=DJl;Y+XBt`,VZ>FA0VU?_"X6%;JQO;'!9AHW]sd,>M#VsOkKhj9$q0VKORM,H@j!&2-6?A^Tb(mmmR9t2FKpI(>5IXPpTBZS
%OH^/&'U$_2XMOagr4@/s9^OVH9/o`Kkijp&BqbZR<E!TW.Y('P,qfH<$:+'\deX@ZaJ.+upr!<.:hD28_usIWeUa4s@/ADhR=PCp
%C](7>#%1Bu6NR>p`q7l49L1f*6;H,<5oj3G0TP5r6D'DnB#=c`8+>QlM-N;JoRWjb!uDM<XRb(X\H"P%Q<;>?!&i;c:^7`G!7-Xn
%P8:\/%gZK?$l6WAK,DWq!@klfTJAe6aqC%l+".m985iYk0uF'E`#l!%ZWmLmFX8Q]"^h_^0Q;RF6[G=a].beOEKQHi^p."d$k(:_
%=Q#&?rYc0oE8sptR0qSC>Pl(H)r#9QjCQfSDV^ZJB=#u^5.SZtp[2l\6`-&ZE$)f5D2Z<Rn&M<"l2C,.otD8dh'Xc;'K_Q@k4*m]
%q$(A&WnR~>
%AI9_PrivateDataEnd
